'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('./defineProperty-56a1d3f2.cjs.dev.js');
var ethers = require('ethers');
var factories_TWFactory__factory_dist_thirdwebDevContractsJsFactoriesTWFactory__factory = require('../factories/TWFactory__factory/dist/thirdweb-dev-contracts-js-factories-TWFactory__factory.cjs.dev.js');
var factories_TWFee__factory_dist_thirdwebDevContractsJsFactoriesTWFee__factory = require('../factories/TWFee__factory/dist/thirdweb-dev-contracts-js-factories-TWFee__factory.cjs.dev.js');
var factories_TWProxy__factory_dist_thirdwebDevContractsJsFactoriesTWProxy__factory = require('../factories/TWProxy__factory/dist/thirdweb-dev-contracts-js-factories-TWProxy__factory.cjs.dev.js');
var factories_TWRegistry__factory_dist_thirdwebDevContractsJsFactoriesTWRegistry__factory = require('../factories/TWRegistry__factory/dist/thirdweb-dev-contracts-js-factories-TWRegistry__factory.cjs.dev.js');

const _abi$28 = [{
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "AppURIUpdated",
  type: "event"
}, {
  inputs: [],
  name: "appURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setAppURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class AppURI__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$28);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$28, signerOrProvider);
  }

}

defineProperty._defineProperty(AppURI__factory, "abi", _abi$28);

const _abi$27 = [{
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$O = "0x608060405234801561001057600080fd5b5061012a806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80632419f51b14603757806363b45e2d146058575b600080fd5b6046604236600460c6565b605f565b60405190815260200160405180910390f35b6000546046565b60008054821060a45760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640160405180910390fd5b6000828154811060b45760b460de565b90600052602060002001549050919050565b60006020828403121560d757600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220cdff42ee849b8d4e4fcafd78c8584047f600684640eadb7161a2f33adf6fa2d264736f6c634300080c0033";

const isSuperArgs$O = xs => xs.length > 1;

class BatchMintMetadata__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$O(args)) {
      super(...args);
    } else {
      super(_abi$27, _bytecode$O, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$27);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$27, signerOrProvider);
  }

}

defineProperty._defineProperty(BatchMintMetadata__factory, "bytecode", _bytecode$O);

defineProperty._defineProperty(BatchMintMetadata__factory, "abi", _abi$27);

const _abi$26 = [{
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class ContractMetadata__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$26);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$26, signerOrProvider);
  }

}

defineProperty._defineProperty(ContractMetadata__factory, "abi", _abi$26);

const _abi$25 = [{
  inputs: [{
    internalType: "address",
    name: "_trustedForwarder",
    type: "address"
  }, {
    internalType: "contract IContractPublisher",
    name: "_prevPublisher",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IContractPublisher.CustomContractInstance",
    name: "publishedContract",
    type: "tuple"
  }],
  name: "ContractPublished",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    indexed: true,
    internalType: "string",
    name: "contractId",
    type: "string"
  }],
  name: "ContractUnpublished",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "bool",
    name: "isPaused",
    type: "bool"
  }],
  name: "Paused",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "PublisherProfileUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_publisher",
    type: "address"
  }],
  name: "getAllPublishedContracts",
  outputs: [{
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    internalType: "struct IContractPublisher.CustomContractInstance[]",
    name: "published",
    type: "tuple[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "_contractId",
    type: "string"
  }],
  name: "getPublishedContract",
  outputs: [{
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    internalType: "struct IContractPublisher.CustomContractInstance",
    name: "published",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "_contractId",
    type: "string"
  }],
  name: "getPublishedContractVersions",
  outputs: [{
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    internalType: "struct IContractPublisher.CustomContractInstance[]",
    name: "published",
    type: "tuple[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "compilerMetadataUri",
    type: "string"
  }],
  name: "getPublishedUriFromCompilerUri",
  outputs: [{
    internalType: "string[]",
    name: "publishedMetadataUris",
    type: "string[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }],
  name: "getPublisherProfileUri",
  outputs: [{
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "isPaused",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "prevPublisher",
  outputs: [{
    internalType: "contract IContractPublisher",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "_contractId",
    type: "string"
  }, {
    internalType: "string",
    name: "_publishMetadataUri",
    type: "string"
  }, {
    internalType: "string",
    name: "_compilerMetadataUri",
    type: "string"
  }, {
    internalType: "bytes32",
    name: "_bytecodeHash",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "_implementation",
    type: "address"
  }],
  name: "publishContract",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bool",
    name: "_pause",
    type: "bool"
  }],
  name: "setPause",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  name: "setPublisherProfileUri",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "_contractId",
    type: "string"
  }],
  name: "unpublishContract",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$N = "";

const isSuperArgs$N = xs => xs.length > 1;

class ContractPublisher__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$N(args)) {
      super(...args);
    } else {
      super(_abi$25, _bytecode$N, args[0]);
    }
  }

  deploy(_trustedForwarder, _prevPublisher, overrides) {
    return super.deploy(_trustedForwarder, _prevPublisher, overrides || {});
  }

  getDeployTransaction(_trustedForwarder, _prevPublisher, overrides) {
    return super.getDeployTransaction(_trustedForwarder, _prevPublisher, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$25);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$25, signerOrProvider);
  }

}

defineProperty._defineProperty(ContractPublisher__factory, "bytecode", _bytecode$N);

defineProperty._defineProperty(ContractPublisher__factory, "abi", _abi$25);

const _abi$24 = [{
  inputs: [],
  name: "NATIVE_TOKEN",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$M = "0x60b1610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806331f7d964146038575b600080fd5b605273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f3fea264697066735822122085f4f6a310e2d2098f2ec71dc2578d7c6d041f383eee301529c3400f53b4de1e64736f6c634300080c0033";

const isSuperArgs$M = xs => xs.length > 1;

class CurrencyTransferLib__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$M(args)) {
      super(...args);
    } else {
      super(_abi$24, _bytecode$M, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$24);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$24, signerOrProvider);
  }

}

defineProperty._defineProperty(CurrencyTransferLib__factory, "bytecode", _bytecode$M);

defineProperty._defineProperty(CurrencyTransferLib__factory, "abi", _abi$24);

const _abi$23 = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  name: "TokenURIRevealed",
  type: "event"
}, {
  inputs: [{
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "encryptDecrypt",
  outputs: [{
    internalType: "bytes",
    name: "result",
    type: "bytes"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "encryptedData",
  outputs: [{
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "getRevealURI",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }],
  name: "isEncryptedBatch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "identifier",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "reveal",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class DelayedReveal__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$23);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$23, signerOrProvider);
  }

}

defineProperty._defineProperty(DelayedReveal__factory, "abi", _abi$23);

const _abi$22 = [{
  inputs: [{
    internalType: "uint256",
    name: "blockTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "startTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "lastClaimedAt",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  name: "Drop__CannotClaimYet",
  type: "error"
}, {
  inputs: [{
    internalType: "uint256",
    name: "supplyClaimed",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "maxClaimableSupply",
    type: "uint256"
  }],
  name: "Drop__ExceedMaxClaimableSupply",
  type: "error"
}, {
  inputs: [{
    internalType: "address",
    name: "givenCurrency",
    type: "address"
  }, {
    internalType: "address",
    name: "requiredCurrency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "givenPricePerToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "requiredPricePerToken",
    type: "uint256"
  }],
  name: "Drop__InvalidCurrencyOrPrice",
  type: "error"
}, {
  inputs: [],
  name: "Drop__InvalidQuantity",
  type: "error"
}, {
  inputs: [{
    internalType: "uint256",
    name: "maxQuantityInAllowlist",
    type: "uint256"
  }],
  name: "Drop__InvalidQuantityProof",
  type: "error"
}, {
  inputs: [{
    internalType: "uint256",
    name: "supplyClaimedAlready",
    type: "uint256"
  }],
  name: "Drop__MaxSupplyClaimedAlready",
  type: "error"
}, {
  inputs: [],
  name: "Drop__NotAuthorized",
  type: "error"
}, {
  inputs: [],
  name: "Drop__NotInWhitelist",
  type: "error"
}, {
  inputs: [],
  name: "Drop__ProofClaimed",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition[]",
    name: "claimConditions",
    type: "tuple[]"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionsUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "claimConditionIndex",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDrop.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "currentStartId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getActiveClaimConditionId",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }],
  name: "getClaimConditionById",
  outputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition[]",
    name: "_conditions",
    type: "tuple[]"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDrop.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
class Drop__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$22);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$22, signerOrProvider);
  }

}

defineProperty._defineProperty(Drop__factory, "abi", _abi$22);

const _abi$21 = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "claimConditions",
    type: "tuple[]"
  }],
  name: "ClaimConditionsUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "maxTotalSupply",
    type: "uint256"
  }],
  name: "MaxTotalSupplyUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "MaxWalletClaimCountUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "address",
    name: "saleRecipient",
    type: "address"
  }],
  name: "SaleRecipientForTokenUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "claimConditionIndex",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "wallet",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "WalletClaimCountUpdated",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }],
  name: "burnBatch",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bytes32[]",
    name: "_proofs",
    type: "bytes32[]"
  }, {
    internalType: "uint256",
    name: "_proofMaxQuantityPerTransaction",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "currentStartId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getActiveClaimConditionId",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }],
  name: "getClaimConditionById",
  outputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IDropClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }, {
    internalType: "uint128",
    name: "_platformFeeBps",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURIForTokens",
    type: "string"
  }],
  name: "lazyMint",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "maxTotalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "maxWalletClaimCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "saleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "_phases",
    type: "tuple[]"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_maxTotalSupply",
    type: "uint256"
  }],
  name: "setMaxTotalSupply",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_count",
    type: "uint256"
  }],
  name: "setMaxWalletClaimCount",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setSaleRecipientForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_count",
    type: "uint256"
  }],
  name: "setWalletClaimCount",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "_tokenURI",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "bytes32[]",
    name: "_proofs",
    type: "bytes32[]"
  }, {
    internalType: "uint256",
    name: "_proofMaxQuantityPerTransaction",
    type: "uint256"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "walletClaimCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$L = "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b62000039620000de565b620000a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000c4576000805461ffff19166101011790555b8015620000d7576000805461ff00191690555b506200010b565b6000620000f630620000fc60201b62002aff1760201c565b15905090565b6001600160a01b03163b151590565b615d7d806200011b6000396000f3fe6080604052600436106103755760003560e01c80639010d07c116101d1578063b79cade411610102578063d45b28d7116100a0578063e9703d251161006f578063e9703d2514610bc7578063e985e9c514610bfc578063f242432a14610c46578063f5298aca14610c6657600080fd5b8063d45b28d714610ae8578063d547741f14610b72578063e159163414610b92578063e8a3d48514610bb257600080fd5b8063c7337d6b116100dc578063c7337d6b14610a44578063ca15c87314610a7b578063cb2ef6f714610a9b578063d45573f614610abc57600080fd5b8063b79cade4146109af578063bd85b039146109dd578063c16ce64e14610a0b57600080fd5b8063a217fddf1161016f578063ac9650d811610149578063ac9650d814610923578063b101440014610950578063b24f2d3914610970578063b4c5faa11461099c57600080fd5b8063a217fddf146108ce578063a22cb465146108e3578063ab073c221461090357600080fd5b806395d89b41116101ab57806395d89b411461085d5780639bcf7a1514610872578063a0a8e46014610892578063a157f71c146108ae57600080fd5b80639010d07c146107d757806391d14854146107f7578063938e3d7b1461083d57600080fd5b80633b1475a7116102ab578063622a6c311161024957806371d53a5b1161022357806371d53a5b1461074b578063832c3a581461078257806387198cf2146107a25780638da5cb5b146107c257600080fd5b8063622a6c31146106d65780636b20c4541461070b5780636f4f28371461072b57600080fd5b80634e1273f4116102855780634e1273f414610630578063572b6c051461065d5780635ab063e814610696578063600dd5ea146106b657600080fd5b80633b1475a7146105b757806347158264146105ce5780634cc157df146105ee57600080fd5b8063248a9ca3116103185780632a55205a116102f25780632a55205a146105185780632eb2c2d6146105575780632f2ff15d1461057757806336568abe1461059757600080fd5b8063248a9ca31461049a57806324aaffaa146104ca57806329c49b9b146104f857600080fd5b8063079fe40e11610354578063079fe40e146103ff5780630e89341c1461043857806313af4035146104585780631e7ac4881461047a57600080fd5b8062fdd58e1461037a57806301ffc9a7146103ad57806306fdde03146103dd575b600080fd5b34801561038657600080fd5b5061039a610395366004614bcd565b610c86565b6040519081526020015b60405180910390f35b3480156103b957600080fd5b506103cd6103c8366004614c0f565b610d23565b60405190151581526020016103a4565b3480156103e957600080fd5b506103f2610d4b565b6040516103a49190614c84565b34801561040b57600080fd5b5061019554610420906001600160a01b031681565b6040516001600160a01b0390911681526020016103a4565b34801561044457600080fd5b506103f2610453366004614c97565b610dda565b34801561046457600080fd5b50610478610473366004614cb0565b610e9b565b005b34801561048657600080fd5b50610478610495366004614bcd565b610f94565b3480156104a657600080fd5b5061039a6104b5366004614c97565b600090815260fb602052604090206001015490565b3480156104d657600080fd5b5061039a6104e5366004614c97565b61019c6020526000908152604090205481565b34801561050457600080fd5b50610478610513366004614ccd565b611052565b34801561052457600080fd5b50610538610533366004614cfd565b6110be565b604080516001600160a01b0390931683526020830191909152016103a4565b34801561056357600080fd5b50610478610572366004614e6b565b6110fb565b34801561058357600080fd5b50610478610592366004614ccd565b6111af565b3480156105a357600080fd5b506104786105b2366004614ccd565b6111dc565b3480156105c357600080fd5b5061039a6101945481565b3480156105da57600080fd5b506104786105e9366004614f62565b611278565b3480156105fa57600080fd5b5061060e610609366004614c97565b61136a565b604080516001600160a01b03909316835261ffff9091166020830152016103a4565b34801561063c57600080fd5b5061065061064b36600461501d565b6113d7565b6040516103a491906150bc565b34801561066957600080fd5b506103cd610678366004614cb0565b6001600160a01b031660009081526065602052604090205460ff1690565b3480156106a257600080fd5b5061039a6106b1366004614c97565b611501565b3480156106c257600080fd5b506104786106d1366004614bcd565b6115c5565b3480156106e257600080fd5b506106f66106f13660046150cf565b611676565b604080519283526020830191909152016103a4565b34801561071757600080fd5b50610478610726366004615108565b6116cf565b34801561073757600080fd5b50610478610746366004614cb0565b611767565b34801561075757600080fd5b5061076b6107663660046151c3565b6117c1565b6040805192151583526020830191909152016103a4565b34801561078e57600080fd5b5061047861079d366004614cfd565b6119ee565b3480156107ae57600080fd5b506104786107bd366004614cfd565b611a4e565b3480156107ce57600080fd5b50610420611aa5565b3480156107e357600080fd5b506104206107f2366004614cfd565b611b00565b34801561080357600080fd5b506103cd610812366004614ccd565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561084957600080fd5b5061047861085836600461523f565b611b20565b34801561086957600080fd5b506103f2611b41565b34801561087e57600080fd5b5061047861088d366004615281565b611b4f565b34801561089e57600080fd5b50604051600281526020016103a4565b3480156108ba57600080fd5b506104786108c93660046152c7565b611c2b565b3480156108da57600080fd5b5061039a600081565b3480156108ef57600080fd5b506104786108fe366004615339565b611f88565b34801561090f57600080fd5b5061047861091e366004615367565b611f9a565b34801561092f57600080fd5b5061094361093e3660046153f9565b612304565b6040516103a4919061542f565b34801561095c57600080fd5b5061047861096b366004615281565b6123f9565b34801561097c57600080fd5b50610197546001600160a01b03811690600160a01b900461ffff1661060e565b6104786109aa366004615491565b61246c565b3480156109bb57600080fd5b5061039a6109ca366004614c97565b6101a16020526000908152604090205481565b3480156109e957600080fd5b5061039a6109f8366004614c97565b61019b6020526000908152604090205481565b348015610a1757600080fd5b5061039a610a26366004614ccd565b6101a060209081526000928352604080842090915290825290205481565b348015610a5057600080fd5b50610420610a5f366004614c97565b61019e602052600090815260409020546001600160a01b031681565b348015610a8757600080fd5b5061039a610a96366004614c97565b612666565b348015610aa757600080fd5b506a44726f704552433131353560a81b61039a565b348015610ac857600080fd5b50610196546001600160a01b03811690600160a01b900461ffff1661060e565b348015610af457600080fd5b50610b08610b03366004614cfd565b61267e565b6040516103a49190600061010082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c08301526001600160a01b0360e08401511660e083015292915050565b348015610b7e57600080fd5b50610478610b8d366004614ccd565b612754565b348015610b9e57600080fd5b50610478610bad36600461553e565b61277c565b348015610bbe57600080fd5b506103f26129c0565b348015610bd357600080fd5b506106f6610be2366004614c97565b61019d602052600090815260409020805460019091015482565b348015610c0857600080fd5b506103cd610c17366004615651565b6001600160a01b0391821660009081526101606020908152604080832093909416825291909152205460ff1690565b348015610c5257600080fd5b50610478610c6136600461567f565b6129ce565b348015610c7257600080fd5b50610478610c813660046156e8565b612a67565b60006001600160a01b038316610cf75760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b50600081815261015f602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610d2e82612b0e565b80610d1d5750506001600160e01b03191663152a902d60e11b1490565b6101918054610d599061571d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d859061571d565b8015610dd25780601f10610da757610100808354040283529160200191610dd2565b820191906000526020600020905b815481529060010190602001808311610db557829003601f168201915b505050505081565b606060005b61019954811015610e85576101998181548110610dfe57610dfe615758565b9060005260206000200154831015610e735761019a60006101998381548110610e2957610e29615758565b90600052602060002001548152602001908152602001600020610e4b84612b4e565b604051602001610e5c92919061578a565b604051602081830303815290604052915050919050565b610e7e60018261583e565b9050610ddf565b5050604080516020810190915260008152919050565b6000610eae81610ea9612c4c565b612c56565b6001600160a01b03821660009081527fc88390e7e62175be0932452175b6a7222b6b094ab0ef984a5153c620345d8975602052604090205460ff16610f355760405162461bcd60e51b815260206004820152601b60248201527f6e6577206f776e6572206e6f74206d6f64756c652061646d696e2e00000000006044820152606401610cee565b610193546040516001600160a01b038085169216907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35061019380546001600160a01b0319166001600160a01b0392909216919091179055565b6000610fa281610ea9612c4c565b612710821115610fe45760405162461bcd60e51b815260206004820152600d60248201526c313839901e1e9018981818181760991b6044820152606401610cee565b61019680546001600160b01b031916600160a01b61ffff8516026001600160a01b031916176001600160a01b0385169081179091556040518381527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a2505050565b600061106081610ea9612c4c565b600083815261019e602090815260409182902080546001600160a01b0319166001600160a01b038616908117909155915191825284917f359479172ba65a6639b0df237f704e030498cb7135d5e89b56f598bd1d84b0169101611045565b6000806000806110cd8661136a565b90945084925061ffff1690506127106110e68287615856565b6110f0919061588b565b925050509250929050565b611103612c4c565b6001600160a01b0316856001600160a01b03161480611129575061112985610c17612c4c565b61119b5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610cee565b6111a88585858585612cd6565b5050505050565b600082815260fb60205260409020600101546111cd81610ea9612c4c565b6111d78383612f52565b505050565b6111e4612c4c565b6001600160a01b0316816001600160a01b03161461126a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610cee565b6112748282612f75565b5050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66112a581610ea9612c4c565b6101945460006112b5868361583e565b610194819055600081815261019a602052604090209091506112d8908686614a9b565b506101998054600181810183556000929092527f960942b7bcefc06c4573016a89cb45882597f73bb18f9afb0df2c0e01c496e1b018290557f4e6c698792b8dfb7c94c60c7e9e91f82932832d5e1ec0870ed42cf674e6af44590839061133e898361583e565b611348919061589f565b878760405161135a94939291906158b6565b60405180910390a1505050505050565b600081815261019f60209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156113b257805160208201516113cd565b610197546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6060815183511461143c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610cee565b6000835167ffffffffffffffff81111561145857611458614d1f565b604051908082528060200260200182016040528015611481578160200160208202803683370190505b50905060005b84518110156114f9576114cc8582815181106114a5576114a5615758565b60200260200101518583815181106114bf576114bf615758565b6020026020010151610c86565b8282815181106114de576114de615758565b60209081029190910101526114f2816158f3565b9050611487565b509392505050565b600081815261019d602052604081206001810154815483916115229161583e565b90505b815481111561157c5760028201600061153f60018461589f565b815260200190815260200160002060000154421061156a5761156260018261589f565b949350505050565b806115748161590e565b915050611525565b5060405162461bcd60e51b815260206004820152601960248201527f6e6f20616374697665206d696e7420636f6e646974696f6e2e000000000000006044820152606401610cee565b60006115d381610ea9612c4c565b61271082111561161a5760405162461bcd60e51b815260206004820152601260248201527165786365656420726f79616c74792062707360701b6044820152606401610cee565b61019780546001600160a01b0385166001600160b01b03199091168117600160a01b61ffff861602179091556040518381527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001611045565b600083815261019d602090815260408083208584526003810183528184206001600160a01b03861685528352818420548685526002909101909252909120600401548101818110156116c757506000195b935093915050565b6116d7612c4c565b6001600160a01b0316836001600160a01b031614806116fd57506116fd83610c17612c4c565b61175c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b6064820152608401610cee565b6111d7838383612f98565b600061177581610ea9612c4c565b61019580546001600160a01b0319166001600160a01b0384169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a25050565b600085815261019d602090815260408083208a8452600290810183528184208251610100810184528154815260018201549481019490945290810154918301919091526003810154606083015260048101546080830152600581015460a08301819052600682015460c08401526007909101546001600160a01b031660e0830152829190156119e1576118c686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516bffffffffffffffffffffffff1960608e901b16602082015260348101889052605401604051602081830303815290604052805190602001206131eb565b9093509150826119185760405162461bcd60e51b815260206004820152601160248201527f6e6f7420696e2077686974656c6973742e0000000000000000000000000000006044820152606401610cee565b600088815261019d602090815260408083208d84526004018252808320600886901c8452909152902054600160ff84161b16156119885760405162461bcd60e51b815260206004820152600e60248201526d383937b7b31031b630b4b6b2b21760911b6044820152606401610cee565b8315806119955750838711155b6119e15760405162461bcd60e51b815260206004820152601760248201527f696e76616c6964207175616e746974792070726f6f662e0000000000000000006044820152606401610cee565b5097509795505050505050565b60006119fc81610ea9612c4c565b60008381526101a1602090815260409182902084905581518581529081018490527f07fa2d0eb2fe8b8e6fbee6073cf9d84659d6db054d221579a0373ae29bc9d73d91015b60405180910390a1505050565b6000611a5c81610ea9612c4c565b600083815261019c602090815260409182902084905581518581529081018490527fc58cd6132bb46df23d468939c03dd023b74b509aaa6b04c39d5a6461c65963bd9101611a41565b610193546001600160a01b031660009081527fc88390e7e62175be0932452175b6a7222b6b094ab0ef984a5153c620345d8975602052604081205460ff16611aed5750600090565b610193546001600160a01b03165b905090565b600082815261012d60205260408120611b1990836132b9565b9392505050565b6000611b2e81610ea9612c4c565b611b3b6101988484614a9b565b50505050565b6101928054610d599061571d565b6000611b5d81610ea9612c4c565b612710821115611ba45760405162461bcd60e51b815260206004820152601260248201527165786365656420726f79616c74792062707360701b6044820152606401610cee565b6040805180820182526001600160a01b03858116808352602080840187815260008a815261019f8352869020945185546001600160a01b031916941693909317845591516001909301929092559151848152909186917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a350505050565b600085815261019d602090815260408083208a845260029081018352928190208151610100810183528154815260018201549381019390935292830154908201526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b0390811660e08301819052908516148015611cbf57508060c0015183145b611d175760405162461bcd60e51b8152602060048201526024808201527f696e76616c69642063757272656e6379206f722070726963652073706563696660448201526334b2b21760e11b6064820152608401610cee565b600085118015611d335750811580611d33575080606001518511155b611d7f5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964207175616e7469747920636c61696d65642e000000000000006044820152606401610cee565b8060200151858260400151611d94919061583e565b1115611de25760405162461bcd60e51b815260206004820152601760248201527f657863656564206d6178206d696e7420737570706c792e0000000000000000006044820152606401610cee565b600086815261019c60205260409020541580611e245750600086815261019c602090815260408083205461019b90925290912054611e2190879061583e565b11155b611e705760405162461bcd60e51b815260206004820152601760248201527f657863656564206d617820746f74616c20737570706c790000000000000000006044820152606401610cee565b60008681526101a160205260409020541580611ec3575060008681526101a160209081526040808320546101a083528184206001600160a01b038c16855290925290912054611ec090879061583e565b11155b611f0f5760405162461bcd60e51b815260206004820152601d60248201527f65786365656420636c61696d206c696d697420666f722077616c6c65740000006044820152606401610cee565b600080611f1d888b8b611676565b915091508160001480611f305750804210155b611f7c5760405162461bcd60e51b815260206004820152601160248201527f63616e6e6f7420636c61696d207965742e0000000000000000000000000000006044820152606401610cee565b50505050505050505050565b611274611f93612c4c565b83836132c5565b6000611fa881610ea9612c4c565b600085815261019d6020526040902080546001820154818515611fd257611fcf828461583e565b90505b600184018790558084556000805b888110156121a057801580612010575089898281811061200257612002615758565b905061010002016000013582105b61206f5760405162461bcd60e51b815260206004820152602a60248201527f737461727454696d657374616d70206d75737420626520696e20617363656e6460448201526934b7339037b93232b91760b11b6064820152608401610cee565b60006002870181612080848761583e565b81526020019081526020016000206002015490508a8a838181106120a6576120a6615758565b90506101000201602001358111156121005760405162461bcd60e51b815260206004820152601a60248201527f6d617820737570706c7920636c61696d656420616c72656164790000000000006044820152606401610cee565b8a8a8381811061211257612112615758565b90506101000201876002016000848761212b919061583e565b815260200190815260200160002081816121459190615925565b50819050600288016000612159858861583e565b81526020810191909152604001600020600201558a8a8381811061217f5761217f615758565b90506101000201600001359250508080612198906158f3565b915050611fe0565b50861561222257835b8281101561221c576000818152600280880160209081526040832083815560018101849055918201839055600382018390556004808301849055600583018490556006830193909355600790910180546001600160a01b0319169055908701905280612214816158f3565b9150506121a9565b506122be565b878311156122be57875b838110156122bc57600286016000612244838661583e565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048082018390556005820183905560068201839055600790910180546001600160a01b03191690558701906122a4838661583e565b815260200152806122b4816158f3565b91505061222c565b505b897f7822655b74d50f461cbd7ca5dfc8b5e48b21fa2157bd7d277888fccce85af2ae8a8a6040516122f0929190615996565b60405180910390a250505050505050505050565b60608167ffffffffffffffff81111561231f5761231f614d1f565b60405190808252806020026020018201604052801561235257816020015b606081526020019060019003908161233d5790505b50905060005b828110156123f2576123c23085858481811061237657612376615758565b90506020028101906123889190615a2d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506133a792505050565b8282815181106123d4576123d4615758565b602002602001018190525080806123ea906158f3565b915050612358565b5092915050565b600061240781610ea9612c4c565b60008481526101a0602090815260408083206001600160a01b0387168085529083529281902085905580518781529182018590527f9260cdce30c9abdb65593c1a903e40c87feb886a28aa4335a6695547988aab2f910160405180910390a250505050565b600260015414156124bf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610cee565b60026001553360009081526065602052604090205460ff16806124f15750326124e6612c4c565b6001600160a01b0316145b6125235760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b6044820152606401610cee565b600061252e88611501565b90506000806125498361253f612c4c565b8c8c8a8a8a6117c1565b915091506000846000148061257c575060008b815261019d60209081526040808320878452600201909152902060050154155b90506125948461258a612c4c565b8d8d8d8d87611c2b565b8280156125a15750600085115b156125dc5760008b815261019d602090815260408083208784526004018252808320600886901c845290915290208054600160ff85161b1790555b6125e88a8a8a8e61349b565b6125f48c858d8d6135e4565b6125fc612c4c565b6001600160a01b03168b857f4f72e6585331094d368e469f11198272039d08cbddfcda1577e192687a83afb68f8e60405161264c9291906001600160a01b03929092168252602082015260400190565b60405180910390a450506001805550505050505050505050565b600081815261012d60205260408120610d1d906136d4565b6126d26040518061010001604052806000815260200160008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b031681525090565b50600091825261019d6020908152604080842092845260029283018252928390208351610100810185528154815260018201549281019290925291820154928101929092526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600701546001600160a01b031660e082015290565b600082815260fb602052604090206001015461277281610ea9612c4c565b6111d78383612f75565b600054610100900460ff166127975760005460ff161561279b565b303b155b6127fe5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610cee565b600054610100900460ff16158015612820576000805461ffff19166101011790555b6128286136de565b6128318761370f565b6128496040518060200160405280600081525061379e565b895161285d906101919060208d0190614b1f565b508851612872906101929060208c0190614b1f565b5061019780546001600160a01b038781166001600160b01b031990921691909117600160a01b61ffff8816021790915561019680546001600160a01b031990811685841617909155610195805490911691881691909117905587516128df906101989060208b0190614b1f565b50610196805461ffff60a01b1916600160a01b61ffff86160217905561019380546001600160a01b0319166001600160a01b038d1617905561292260008c6137d1565b61294c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68c6137d1565b6129767f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c8c6137d1565b6129a17f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c60006137d1565b80156129b3576000805461ff00191690555b5050505050505050505050565b6101988054610d599061571d565b6129d6612c4c565b6001600160a01b0316856001600160a01b031614806129fc57506129fc85610c17612c4c565b612a5a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610cee565b6111a885858585856137db565b612a6f612c4c565b6001600160a01b0316836001600160a01b03161480612a955750612a9583610c17612c4c565b612af45760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f726044820152691030b8383937bb32b21760b11b6064820152608401610cee565b6111d7838383613990565b6001600160a01b03163b151590565b60006001600160e01b03198216636cdb3d1360e11b1480612b3f57506001600160e01b031982166303a24d0760e21b145b80610d1d5750610d1d82613b1a565b606081612b725750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612b9c5780612b86816158f3565b9150612b959050600a8361588b565b9150612b76565b60008167ffffffffffffffff811115612bb757612bb7614d1f565b6040519080825280601f01601f191660200182016040528015612be1576020820181803683370190505b5090505b841561156257612bf660018361589f565b9150612c03600a86615a74565b612c0e90603061583e565b60f81b818381518110612c2357612c23615758565b60200101906001600160f81b031916908160001a905350612c45600a8661588b565b9450612be5565b6000611afb613b3f565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff1661127457612c94816001600160a01b03166014613b6c565b612c9f836020613b6c565b604051602001612cb0929190615a88565b60408051601f198184030181529082905262461bcd60e51b8252610cee91600401614c84565b8151835114612d385760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610cee565b6001600160a01b038416612d9c5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610cee565b6000612da6612c4c565b9050612db6818787878787613d15565b60005b8451811015612ee4576000858281518110612dd657612dd6615758565b602002602001015190506000858381518110612df457612df4615758565b602090810291909101810151600084815261015f835260408082206001600160a01b038e168352909352919091205490915081811015612e895760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610cee565b600083815261015f602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290612ec990849061583e565b9250508190555050505080612edd906158f3565b9050612db9565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051612f34929190615b09565b60405180910390a4612f4a818787878787613f73565b505050505050565b612f5c8282614119565b600082815261012d602052604090206111d790826141bc565b612f7f82826141d1565b600082815261012d602052604090206111d79082614272565b6001600160a01b038316612ffa5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610cee565b805182511461305c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610cee565b6000613066612c4c565b905061308681856000868660405180602001604052806000815250613d15565b60005b835181101561318c5760008482815181106130a6576130a6615758565b6020026020010151905060008483815181106130c4576130c4615758565b602090810291909101810151600084815261015f835260408082206001600160a01b038c1683529093529190912054909150818110156131525760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610cee565b600092835261015f602090815260408085206001600160a01b038b1686529091529092209103905580613184816158f3565b915050613089565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516131dd929190615b09565b60405180910390a450505050565b6000808281805b87518110156132ad57613206600283615856565b9150600088828151811061321c5761321c615758565b6020026020010151905080841161325e57604080516020810186905290810182905260600160405160208183030381529060405280519060200120935061329a565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183613297919061583e565b92505b50806132a5816158f3565b9150506131f2565b50941495939450505050565b6000611b198383614287565b816001600160a01b0316836001600160a01b031614156133395760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610cee565b6001600160a01b0383811660008181526101606020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606001600160a01b0383163b61340f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610cee565b600080846001600160a01b03168460405161342a9190615b2e565b600060405180830381855af49150503d8060008114613465576040519150601f19603f3d011682016040523d82523d6000602084013e61346a565b606091505b50915091506134928282604051806060016040528060278152602001615d21602791396142b1565b95945050505050565b816134a557611b3b565b60006134b18386615856565b61019654909150600090612710906134d490600160a01b900461ffff1684615856565b6134de919061588b565b90506001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613554578134146135545760405162461bcd60e51b815260206004820152601660248201527f6d7573742073656e6420746f74616c2070726963652e000000000000000000006044820152606401610cee565b600083815261019e60205260408120546001600160a01b03161561359057600084815261019e60205260409020546001600160a01b031661359e565b610195546001600160a01b03165b90506135bf866135ac612c4c565b610196546001600160a01b0316856142ea565b6135db866135cb612c4c565b836135d6868861589f565b6142ea565b50505050505050565b600082815261019d602090815260408083208684526002908101909252822001805483929061361490849061583e565b9091555050600082815261019d6020908152604080832086845260030190915281204291613640612c4c565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550806101a060008481526020019081526020016000206000613683612c4c565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546136b2919061583e565b92505081905550611b3b84838360405180602001604052806000815250614334565b6000610d1d825490565b600054610100900460ff166137055760405162461bcd60e51b8152600401610cee90615b4a565b61370d614443565b565b600054610100900460ff166137365760405162461bcd60e51b8152600401610cee90615b4a565b60005b81518110156112745760016065600084848151811061375a5761375a615758565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580613796816158f3565b915050613739565b600054610100900460ff166137c55760405162461bcd60e51b8152600401610cee90615b4a565b6137ce81614470565b50565b6112748282612f52565b6001600160a01b03841661383f5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610cee565b6000613849612c4c565b905061386981878761385a88614484565b61386388614484565b87613d15565b600084815261015f602090815260408083206001600160a01b038a168452909152902054838110156138f05760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610cee565b600085815261015f602090815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061393090849061583e565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46135db8288888888886144cf565b6001600160a01b0383166139f25760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610cee565b60006139fc612c4c565b9050613a2c81856000613a0e87614484565b613a1787614484565b60405180602001604052806000815250613d15565b600083815261015f602090815260408083206001600160a01b038816845290915290205482811015613aac5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610cee565b600084815261015f602090815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b60006001600160e01b03198216635a05180f60e01b1480610d1d5750610d1d826145cb565b3360009081526065602052604081205460ff1615613b64575060131936013560601c90565b503390565b90565b60606000613b7b836002615856565b613b8690600261583e565b67ffffffffffffffff811115613b9e57613b9e614d1f565b6040519080825280601f01601f191660200182016040528015613bc8576020820181803683370190505b509050600360fc1b81600081518110613be357613be3615758565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613c1257613c12615758565b60200101906001600160f81b031916908160001a9053506000613c36846002615856565b613c4190600161583e565b90505b6001811115613cc6577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110613c8257613c82615758565b1a60f81b828281518110613c9857613c98615758565b60200101906001600160f81b031916908160001a90535060049490941c93613cbf8161590e565b9050613c44565b508315611b195760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610cee565b600080527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a13126020527f70e64e82d0337f3fa9071fdb3266f859725ed1fc29697b2e6e986b76cffbfb085460ff16158015613d7757506001600160a01b03851615155b8015613d8b57506001600160a01b03841615155b15613e65576001600160a01b03851660009081527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a1312602052604090205460ff1680613e0d57506001600160a01b03841660009081527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a1312602052604090205460ff165b613e655760405162461bcd60e51b8152602060048201526024808201527f7265737472696374656420746f205452414e534645525f524f4c4520686f6c6460448201526332b9399760e11b6064820152608401610cee565b6001600160a01b038516613eed5760005b8351811015613eeb57828181518110613e9157613e91615758565b602002602001015161019b6000868481518110613eb057613eb0615758565b602002602001015181526020019081526020016000206000828254613ed5919061583e565b90915550613ee49050816158f3565b9050613e76565b505b6001600160a01b038416612f4a5760005b83518110156135db57828181518110613f1957613f19615758565b602002602001015161019b6000868481518110613f3857613f38615758565b602002602001015181526020019081526020016000206000828254613f5d919061589f565b90915550613f6c9050816158f3565b9050613efe565b6001600160a01b0384163b15612f4a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190613fb79089908990889088908890600401615b95565b6020604051808303816000875af1925050508015613ff2575060408051601f3d908101601f19168201909252613fef91810190615bf3565b60015b6140a857613ffe615c10565b806308c379a014156140385750614013615c2b565b8061401e575061403a565b8060405162461bcd60e51b8152600401610cee9190614c84565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610cee565b6001600160e01b0319811663bc197c8160e01b146135db5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610cee565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff1661127457600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055614178612c4c565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000611b19836001600160a01b038416614600565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff161561127457600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff1916905561422e612c4c565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000611b19836001600160a01b03841661464f565b600082600001828154811061429e5761429e615758565b9060005260206000200154905092915050565b606083156142c0575081611b19565b8251156142d05782518084602001fd5b8160405162461bcd60e51b8152600401610cee9190614c84565b806142f457611b3b565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415614328576143238282614742565b611b3b565b611b3b848484846147e5565b6001600160a01b0384166143945760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610cee565b600061439e612c4c565b90506143b08160008761385a88614484565b600084815261015f602090815260408083206001600160a01b0389168452909152812080548592906143e390849061583e565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111a8816000878787876144cf565b600054610100900460ff1661446a5760405162461bcd60e51b8152600401610cee90615b4a565b60018055565b805161127490610161906020840190614b1f565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106144be576144be615758565b602090810291909101015292915050565b6001600160a01b0384163b15612f4a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906145139089908990889088908890600401615cb5565b6020604051808303816000875af192505050801561454e575060408051601f3d908101601f1916820190925261454b91810190615bf3565b60015b61455a57613ffe615c10565b6001600160e01b0319811663f23a6e6160e01b146135db5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610cee565b60006001600160e01b03198216637965db0b60e01b1480610d1d57506301ffc9a760e01b6001600160e01b0319831614610d1d565b600081815260018301602052604081205461464757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610d1d565b506000610d1d565b6000818152600183016020526040812054801561473857600061467360018361589f565b85549091506000906146879060019061589f565b90508181146146ec5760008660000182815481106146a7576146a7615758565b90600052602060002001549050808760000184815481106146ca576146ca615758565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806146fd576146fd615ced565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610d1d565b6000915050610d1d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461478f576040519150601f19603f3d011682016040523d82523d6000602084013e614794565b606091505b50509050806111d75760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610cee565b816001600160a01b0316836001600160a01b0316141561480457611b3b565b6001600160a01b038316301415614829576143236001600160a01b038516838361483e565b611b3b6001600160a01b0385168484846148b6565b6040516001600160a01b0383166024820152604481018290526111d790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909316929092179091526148ee565b6040516001600160a01b0380851660248301528316604482015260648101829052611b3b9085906323b872dd60e01b9060840161486a565b6000614943826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166149c09092919063ffffffff16565b8051909150156111d757808060200190518101906149619190615d03565b6111d75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610cee565b60606115628484600085856001600160a01b0385163b614a225760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610cee565b600080866001600160a01b03168587604051614a3e9190615b2e565b60006040518083038185875af1925050503d8060008114614a7b576040519150601f19603f3d011682016040523d82523d6000602084013e614a80565b606091505b5091509150614a908282866142b1565b979650505050505050565b828054614aa79061571d565b90600052602060002090601f016020900481019282614ac95760008555614b0f565b82601f10614ae25782800160ff19823516178555614b0f565b82800160010185558215614b0f579182015b82811115614b0f578235825591602001919060010190614af4565b50614b1b929150614b93565b5090565b828054614b2b9061571d565b90600052602060002090601f016020900481019282614b4d5760008555614b0f565b82601f10614b6657805160ff1916838001178555614b0f565b82800160010185558215614b0f579182015b82811115614b0f578251825591602001919060010190614b78565b5b80821115614b1b5760008155600101614b94565b6001600160a01b03811681146137ce57600080fd5b8035614bc881614ba8565b919050565b60008060408385031215614be057600080fd5b8235614beb81614ba8565b946020939093013593505050565b6001600160e01b0319811681146137ce57600080fd5b600060208284031215614c2157600080fd5b8135611b1981614bf9565b60005b83811015614c47578181015183820152602001614c2f565b83811115611b3b5750506000910152565b60008151808452614c70816020860160208601614c2c565b601f01601f19169290920160200192915050565b602081526000611b196020830184614c58565b600060208284031215614ca957600080fd5b5035919050565b600060208284031215614cc257600080fd5b8135611b1981614ba8565b60008060408385031215614ce057600080fd5b823591506020830135614cf281614ba8565b809150509250929050565b60008060408385031215614d1057600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715614d5b57614d5b614d1f565b6040525050565b600067ffffffffffffffff821115614d7c57614d7c614d1f565b5060051b60200190565b600082601f830112614d9757600080fd5b81356020614da482614d62565b604051614db18282614d35565b83815260059390931b8501820192828101915086841115614dd157600080fd5b8286015b84811015614dec5780358352918301918301614dd5565b509695505050505050565b600082601f830112614e0857600080fd5b813567ffffffffffffffff811115614e2257614e22614d1f565b604051614e39601f8301601f191660200182614d35565b818152846020838601011115614e4e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215614e8357600080fd5b8535614e8e81614ba8565b94506020860135614e9e81614ba8565b9350604086013567ffffffffffffffff80821115614ebb57600080fd5b614ec789838a01614d86565b94506060880135915080821115614edd57600080fd5b614ee989838a01614d86565b93506080880135915080821115614eff57600080fd5b50614f0c88828901614df7565b9150509295509295909350565b60008083601f840112614f2b57600080fd5b50813567ffffffffffffffff811115614f4357600080fd5b602083019150836020828501011115614f5b57600080fd5b9250929050565b600080600060408486031215614f7757600080fd5b83359250602084013567ffffffffffffffff811115614f9557600080fd5b614fa186828701614f19565b9497909650939450505050565b600082601f830112614fbf57600080fd5b81356020614fcc82614d62565b604051614fd98282614d35565b83815260059390931b8501820192828101915086841115614ff957600080fd5b8286015b84811015614dec57803561501081614ba8565b8352918301918301614ffd565b6000806040838503121561503057600080fd5b823567ffffffffffffffff8082111561504857600080fd5b61505486838701614fae565b9350602085013591508082111561506a57600080fd5b5061507785828601614d86565b9150509250929050565b600081518084526020808501945080840160005b838110156150b157815187529582019590820190600101615095565b509495945050505050565b602081526000611b196020830184615081565b6000806000606084860312156150e457600080fd5b833592506020840135915060408401356150fd81614ba8565b809150509250925092565b60008060006060848603121561511d57600080fd5b833561512881614ba8565b9250602084013567ffffffffffffffff8082111561514557600080fd5b61515187838801614d86565b9350604086013591508082111561516757600080fd5b5061517486828701614d86565b9150509250925092565b60008083601f84011261519057600080fd5b50813567ffffffffffffffff8111156151a857600080fd5b6020830191508360208260051b8501011115614f5b57600080fd5b600080600080600080600060c0888a0312156151de57600080fd5b8735965060208801356151f081614ba8565b95506040880135945060608801359350608088013567ffffffffffffffff81111561521a57600080fd5b6152268a828b0161517e565b989b979a5095989497959660a090950135949350505050565b6000806020838503121561525257600080fd5b823567ffffffffffffffff81111561526957600080fd5b61527585828601614f19565b90969095509350505050565b60008060006060848603121561529657600080fd5b8335925060208401356152a881614ba8565b929592945050506040919091013590565b80151581146137ce57600080fd5b600080600080600080600060e0888a0312156152e257600080fd5b8735965060208801356152f481614ba8565b95506040880135945060608801359350608088013561531281614ba8565b925060a0880135915060c0880135615329816152b9565b8091505092959891949750929550565b6000806040838503121561534c57600080fd5b823561535781614ba8565b91506020830135614cf2816152b9565b6000806000806060858703121561537d57600080fd5b84359350602085013567ffffffffffffffff8082111561539c57600080fd5b818701915087601f8301126153b057600080fd5b8135818111156153bf57600080fd5b8860208260081b85010111156153d457600080fd5b60208301955080945050505060408501356153ee816152b9565b939692955090935050565b6000806020838503121561540c57600080fd5b823567ffffffffffffffff81111561542357600080fd5b6152758582860161517e565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561548457603f19888603018452615472858351614c58565b94509285019290850190600101615456565b5092979650505050505050565b60008060008060008060008060e0898b0312156154ad57600080fd5b88356154b881614ba8565b9750602089013596506040890135955060608901356154d681614ba8565b94506080890135935060a089013567ffffffffffffffff8111156154f957600080fd5b6155058b828c0161517e565b999c989b50969995989497949560c00135949350505050565b80356fffffffffffffffffffffffffffffffff81168114614bc857600080fd5b6000806000806000806000806000806101408b8d03121561555e57600080fd5b6155678b614bbd565b995060208b013567ffffffffffffffff8082111561558457600080fd5b6155908e838f01614df7565b9a5060408d01359150808211156155a657600080fd5b6155b28e838f01614df7565b995060608d01359150808211156155c857600080fd5b6155d48e838f01614df7565b985060808d01359150808211156155ea57600080fd5b506155f78d828e01614fae565b96505061560660a08c01614bbd565b945061561460c08c01614bbd565b935061562260e08c0161551e565b92506156316101008c0161551e565b91506156406101208c01614bbd565b90509295989b9194979a5092959850565b6000806040838503121561566457600080fd5b823561566f81614ba8565b91506020830135614cf281614ba8565b600080600080600060a0868803121561569757600080fd5b85356156a281614ba8565b945060208601356156b281614ba8565b93506040860135925060608601359150608086013567ffffffffffffffff8111156156dc57600080fd5b614f0c88828901614df7565b6000806000606084860312156156fd57600080fd5b833561570881614ba8565b95602085013595506040909401359392505050565b600181811c9082168061573157607f821691505b6020821081141561575257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60008151615780818560208601614c2c565b9290920192915050565b600080845481600182811c9150808316806157a657607f831692505b60208084108214156157c657634e487b7160e01b86526022600452602486fd5b8180156157da57600181146157eb57615818565b60ff19861689528489019650615818565b60008b81526020902060005b868110156158105781548b8201529085019083016157f7565b505084890196505b505050505050613492818561576e565b634e487b7160e01b600052601160045260246000fd5b6000821982111561585157615851615828565b500190565b600081600019048311821515161561587057615870615828565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261589a5761589a615875565b500490565b6000828210156158b1576158b1615828565b500390565b84815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f909201601f191601019392505050565b600060001982141561590757615907615828565b5060010190565b60008161591d5761591d615828565b506000190190565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a0820135600582015560c082013560068201556007810160e083013561597781614ba8565b81546001600160a01b0319166001600160a01b03919091161790555050565b6020808252818101839052600090604080840186845b87811015615a20578135835284820135858401528382013584840152606080830135908401526080808301359084015260a0808301359084015260c0808301359084015260e0808301356159ff81614ba8565b6001600160a01b0316908401526101009283019291909101906001016159ac565b5090979650505050505050565b6000808335601e19843603018112615a4457600080fd5b83018035915067ffffffffffffffff821115615a5f57600080fd5b602001915036819003821315614f5b57600080fd5b600082615a8357615a83615875565b500690565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351615ac0816017850160208801614c2c565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351615afd816028840160208801614c2c565b01602801949350505050565b604081526000615b1c6040830185615081565b82810360208401526134928185615081565b60008251615b40818460208701614c2c565b9190910192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006001600160a01b03808816835280871660208401525060a06040830152615bc160a0830186615081565b8281036060840152615bd38186615081565b90508281036080840152615be78185614c58565b98975050505050505050565b600060208284031215615c0557600080fd5b8151611b1981614bf9565b600060033d1115613b695760046000803e5060005160e01c90565b600060443d1015615c395790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715615c6957505050505090565b8285019150815181811115615c815750505050505090565b843d8701016020828501011115615c9b5750505050505090565b615caa60208286010187614d35565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152614a9060a0830184614c58565b634e487b7160e01b600052603160045260246000fd5b600060208284031215615d1557600080fd5b8151611b19816152b956fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ca08da33a2aeda609589ba13edff1c75628eb87e521fb313ad7c533fa9ab103964736f6c634300080c0033";

const isSuperArgs$L = xs => xs.length > 1;

class DropERC1155__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$L(args)) {
      super(...args);
    } else {
      super(_abi$21, _bytecode$L, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$21);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$21, signerOrProvider);
  }

}

defineProperty._defineProperty(DropERC1155__factory, "bytecode", _bytecode$L);

defineProperty._defineProperty(DropERC1155__factory, "abi", _abi$21);

const _abi$20 = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "claimConditions",
    type: "tuple[]"
  }],
  name: "ClaimConditionsUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "fromDelegate",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "toDelegate",
    type: "address"
  }],
  name: "DelegateChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegate",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "previousBalance",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newBalance",
    type: "uint256"
  }],
  name: "DelegateVotesChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "maxTotalSupply",
    type: "uint256"
  }],
  name: "MaxTotalSupplyUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "MaxWalletClaimCountUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "claimConditionIndex",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "wallet",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "WalletClaimCountUpdated",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "burnFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint32",
    name: "pos",
    type: "uint32"
  }],
  name: "checkpoints",
  outputs: [{
    components: [{
      internalType: "uint32",
      name: "fromBlock",
      type: "uint32"
    }, {
      internalType: "uint224",
      name: "votes",
      type: "uint224"
    }],
    internalType: "struct ERC20VotesUpgradeable.Checkpoint",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bytes32[]",
    name: "_proofs",
    type: "bytes32[]"
  }, {
    internalType: "uint256",
    name: "_proofMaxQuantityPerTransaction",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "currentStartId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }],
  name: "delegate",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }, {
    internalType: "uint256",
    name: "nonce",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "expiry",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "delegateBySig",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "delegates",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getActiveClaimConditionId",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }],
  name: "getClaimConditionById",
  outputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IDropClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastTotalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "getVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }, {
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "maxTotalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "maxWalletClaimCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "numCheckpoints",
  outputs: [{
    internalType: "uint32",
    name: "",
    type: "uint32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "_phases",
    type: "tuple[]"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_maxTotalSupply",
    type: "uint256"
  }],
  name: "setMaxTotalSupply",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_count",
    type: "uint256"
  }],
  name: "setMaxWalletClaimCount",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_count",
    type: "uint256"
  }],
  name: "setWalletClaimCount",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "bytes32[]",
    name: "_proofs",
    type: "bytes32[]"
  }, {
    internalType: "uint256",
    name: "_proofMaxQuantityPerTransaction",
    type: "uint256"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "walletClaimCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$K = "";

const isSuperArgs$K = xs => xs.length > 1;

class DropERC20__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$K(args)) {
      super(...args);
    } else {
      super(_abi$20, _bytecode$K, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$20);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$20, signerOrProvider);
  }

}

defineProperty._defineProperty(DropERC20__factory, "bytecode", _bytecode$K);

defineProperty._defineProperty(DropERC20__factory, "abi", _abi$20);

const _abi$1$ = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "claimConditions",
    type: "tuple[]"
  }],
  name: "ClaimConditionsUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "maxTotalSupply",
    type: "uint256"
  }],
  name: "MaxTotalSupplyUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "MaxWalletClaimCountUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  name: "NFTRevealed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "claimConditionIndex",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "wallet",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "WalletClaimCountUpdated",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "baseURIIndices",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bytes32[]",
    name: "_proofs",
    type: "bytes32[]"
  }, {
    internalType: "uint256",
    name: "_proofMaxQuantityPerTransaction",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "currentStartId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "encryptDecrypt",
  outputs: [{
    internalType: "bytes",
    name: "result",
    type: "bytes"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "encryptedData",
  outputs: [{
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getActiveClaimConditionId",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }],
  name: "getClaimConditionById",
  outputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IDropClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }, {
    internalType: "uint128",
    name: "_platformFeeBps",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "maxTotalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "maxWalletClaimCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToClaim",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "reveal",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "_phases",
    type: "tuple[]"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_maxTotalSupply",
    type: "uint256"
  }],
  name: "setMaxTotalSupply",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_count",
    type: "uint256"
  }],
  name: "setMaxWalletClaimCount",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_count",
    type: "uint256"
  }],
  name: "setWalletClaimCount",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "tokenByIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "tokenOfOwnerByIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_conditionId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "bytes32[]",
    name: "_proofs",
    type: "bytes32[]"
  }, {
    internalType: "uint256",
    name: "_proofMaxQuantityPerTransaction",
    type: "uint256"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "walletClaimCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$J = "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b62000039620000de565b620000a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000c4576000805461ffff19166101011790555b8015620000d7576000805461ff00191690555b506200010b565b6000620000f630620000fc60201b62002f981760201c565b15905090565b6001600160a01b03163b151590565b615d15806200011b6000396000f3fe6080604052600436106103ce5760003560e01c80637a5a8e7e116101fd578063b24f2d3911610118578063d45573f6116100ab578063e15916341161007a578063e159163414610c74578063e23b816414610c94578063e715032214610cb4578063e8a3d48514610cd4578063e985e9c514610ce957600080fd5b8063d45573f614610beb578063d547741f14610c17578063d637ed5914610c37578063d860483f14610c5457600080fd5b8063ca15c873116100e7578063ca15c87314610b6b578063cb2ef6f714610b8b578063ce80564214610bab578063d37c353b14610bcb57600080fd5b8063b24f2d3914610aea578063b88d4fde14610b16578063c68907de14610b36578063c87b56dd14610b4b57600080fd5b8063a05112fc11610190578063ac9650d81161015f578063ac9650d814610a4f578063acd083f814610a7c578063af3be89014610a93578063afb8291614610aca57600080fd5b8063a05112fc146109de578063a0a8e460146109fe578063a217fddf14610a1a578063a22cb46514610a2f57600080fd5b806391d14854116101cc57806391d1485414610943578063938e3d7b1461098957806395d89b41146109a95780639bcf7a15146109be57600080fd5b80637a5a8e7e146108c657806386ee745d146108d95780638da5cb5b1461090e5780639010d07c1461092357600080fd5b80633b1475a7116102ed578063508679571161028057806363b45e2d1161024f57806363b45e2d146107e65780636f4f2837146107fc5780636f8934f41461081c57806370a08231146108a657600080fd5b8063508679571461074d578063572b6c051461076d578063600dd5ea146107a65780636352211e146107c657600080fd5b806342966c68116102bc57806342966c681461069d5780634352ab41146106bd5780634cc157df146106eb5780634f6ccce71461072d57600080fd5b80633b1475a7146106265780633ea33f291461063d5780633f3e4c111461065d57806342842e0e1461067d57600080fd5b80631e7ac488116103655780632ab4d052116103345780632ab4d052146105af5780632f2ff15d146105c65780632f745c59146105e657806336568abe1461060657600080fd5b80631e7ac4881461050057806323b872dd14610520578063248a9ca3146105405780632a55205a1461057057600080fd5b8063081812fc116103a1578063081812fc14610488578063095ea7b3146104a857806313af4035146104ca57806318160ddd146104ea57600080fd5b806301ffc9a7146103d3578063059817691461040857806306fdde031461042d578063079fe40e1461044f575b600080fd5b3480156103df57600080fd5b506103f36103ee366004614cf5565b610d33565b60405190151581526020015b60405180910390f35b34801561041457600080fd5b5061041f6101c75481565b6040519081526020016103ff565b34801561043957600080fd5b50610442610d5f565b6040516103ff9190614d6a565b34801561045b57600080fd5b506101c654610470906001600160a01b031681565b6040516001600160a01b0390911681526020016103ff565b34801561049457600080fd5b506104706104a3366004614d7d565b610df2565b3480156104b457600080fd5b506104c86104c3366004614dbb565b610e8e565b005b3480156104d657600080fd5b506104c86104e5366004614de7565b610fb6565b3480156104f657600080fd5b506101935461041f565b34801561050c57600080fd5b506104c861051b366004614dbb565b61108d565b34801561052c57600080fd5b506104c861053b366004614e04565b611148565b34801561054c57600080fd5b5061041f61055b366004614d7d565b600090815260fb602052604090206001015490565b34801561057c57600080fd5b5061059061058b366004614e45565b6111ca565b604080516001600160a01b0390931683526020830191909152016103ff565b3480156105bb57600080fd5b5061041f6101c85481565b3480156105d257600080fd5b506104c86105e1366004614e67565b611207565b3480156105f257600080fd5b5061041f610601366004614dbb565b61122f565b34801561061257600080fd5b506104c8610621366004614e67565b6112c6565b34801561063257600080fd5b5061041f6101c45481565b34801561064957600080fd5b506104c8610658366004614dbb565b611362565b34801561066957600080fd5b506104c8610678366004614d7d565b6113be565b34801561068957600080fd5b506104c8610698366004614e04565b61140a565b3480156106a957600080fd5b506104c86106b8366004614d7d565b611425565b3480156106c957600080fd5b5061041f6106d8366004614de7565b6101d46020526000908152604090205481565b3480156106f757600080fd5b5061070b610706366004614d7d565b611488565b604080516001600160a01b03909316835261ffff9091166020830152016103ff565b34801561073957600080fd5b5061041f610748366004614d7d565b6114f5565b34801561075957600080fd5b506104c8610768366004614d7d565b61158a565b34801561077957600080fd5b506103f3610788366004614de7565b6001600160a01b031660009081526065602052604090205460ff1690565b3480156107b257600080fd5b506104c86107c1366004614dbb565b6115ce565b3480156107d257600080fd5b506104706107e1366004614d7d565b611676565b3480156107f257600080fd5b506101cc5461041f565b34801561080857600080fd5b506104c8610817366004614de7565b6116ee565b34801561082857600080fd5b5061083c610837366004614d7d565b611748565b6040516103ff9190600061010082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c08301526001600160a01b0360e08401511660e083015292915050565b3480156108b257600080fd5b5061041f6108c1366004614de7565b611814565b6104c86108d4366004614edc565b61189c565b3480156108e557600080fd5b506108f96108f4366004614e67565b611a7a565b604080519283526020830191909152016103ff565b34801561091a57600080fd5b50610470611ac4565b34801561092f57600080fd5b5061047061093e366004614e45565b611b1f565b34801561094f57600080fd5b506103f361095e366004614e67565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561099557600080fd5b506104c86109a4366004614fa3565b611b3f565b3480156109b557600080fd5b50610442611b60565b3480156109ca57600080fd5b506104c86109d9366004614fe5565b611b70565b3480156109ea57600080fd5b506104426109f9366004614d7d565b611c43565b348015610a0a57600080fd5b50604051600381526020016103ff565b348015610a2657600080fd5b5061041f600081565b348015610a3b57600080fd5b506104c8610a4a36600461501a565b611cde565b348015610a5b57600080fd5b50610a6f610a6a366004615048565b611cf0565b6040516103ff919061507e565b348015610a8857600080fd5b5061041f6101c55481565b348015610a9f57600080fd5b50610ab3610aae3660046150e0565b611de5565b6040805192151583526020830191909152016103ff565b348015610ad657600080fd5b506104c8610ae5366004615152565b611ffa565b348015610af657600080fd5b506101ca546001600160a01b03811690600160a01b900461ffff1661070b565b348015610b2257600080fd5b506104c8610b3136600461527e565b612354565b348015610b4257600080fd5b5061041f6123d7565b348015610b5757600080fd5b50610442610b66366004614d7d565b61247e565b348015610b7757600080fd5b5061041f610b86366004614d7d565b6125c5565b348015610b9757600080fd5b506944726f7045524337323160b01b61041f565b348015610bb757600080fd5b50610442610bc63660046152ea565b6125dd565b348015610bd757600080fd5b506104c8610be6366004615336565b612876565b348015610bf757600080fd5b506101c9546001600160a01b03811690600160a01b900461ffff1661070b565b348015610c2357600080fd5b506104c8610c32366004614e67565b6129bb565b348015610c4357600080fd5b506101cd546101ce546108f9919082565b348015610c6057600080fd5b5061041f610c6f366004614d7d565b6129e3565b348015610c8057600080fd5b506104c8610c8f36600461544e565b612a05565b348015610ca057600080fd5b506104c8610caf366004615561565b612c01565b348015610cc057600080fd5b50610442610ccf3660046155e7565b612f15565b348015610ce057600080fd5b50610442612f8a565b348015610cf557600080fd5b506103f3610d04366004615643565b6001600160a01b0391821660009081526101646020908152604080832093909416825291909152205460ff1690565b6000610d3e82612fa7565b80610d59575063152a902d60e11b6001600160e01b03198316145b92915050565b606061015f8054610d6f90615671565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9b90615671565b8015610de85780601f10610dbd57610100808354040283529160200191610de8565b820191906000526020600020905b815481529060010190602001808311610dcb57829003601f168201915b5050505050905090565b600081815261016160205260408120546001600160a01b0316610e715760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b50600090815261016360205260409020546001600160a01b031690565b6000610e9982611676565b9050806001600160a01b0316836001600160a01b03161415610f075760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610e68565b806001600160a01b0316610f19612fcc565b6001600160a01b03161480610f355750610f3581610d04612fcc565b610fa75760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610e68565b610fb18383612fd6565b505050565b6000610fc981610fc4612fcc565b613045565b6001600160a01b03821660009081527fc88390e7e62175be0932452175b6a7222b6b094ab0ef984a5153c620345d8975602052604090205460ff166110395760405162461bcd60e51b815260206004820152600660248201526510a0a226a4a760d11b6044820152606401610e68565b6101c380546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a3505050565b600061109b81610fc4612fcc565b6127108211156110da5760405162461bcd60e51b815260206004820152600a6024820152691f1026a0ac2fa128299760b11b6044820152606401610e68565b6101c980546001600160b01b031916600160a01b61ffff8516026001600160a01b031916176001600160a01b0385169081179091556040518381527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a2505050565b611159611153612fcc565b826130c5565b6111bf5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608401610e68565b610fb18383836131be565b6000806000806111d986611488565b90945084925061ffff1690506127106111f282876156c2565b6111fc91906156f7565b925050509250929050565b600082815260fb602052604090206001015461122581610fc4612fcc565b610fb18383613368565b600061123a83611814565b821061129c5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610e68565b506001600160a01b0391909116600090815261019160209081526040808320938352929052205490565b6112ce612fcc565b6001600160a01b0316816001600160a01b0316146113545760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610e68565b61135e828261338b565b5050565b600061137081610fc4612fcc565b6001600160a01b03831660008181526101d4602052604090819020849055517f8973b95d42472e89416ea69404f8038c041db700af9ec294e7b4cd4e1ff2801c9061113b9085815260200190565b60006113cc81610fc4612fcc565b6101c88290556040518281527ff2672935fc79f5237559e2e2999dbe743bf65430894ac2b37666890e7c69e1af906020015b60405180910390a15050565b610fb183838360405180602001604052806000815250612354565b611430611153612fcc565b61147c5760405162461bcd60e51b815260206004820152601d60248201527f63616c6c6572206e6f74206f776e6572206e6f7220617070726f7665640000006044820152606401610e68565b611485816133ae565b50565b60008181526101d560209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156114d057805160208201516114eb565b6101ca546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60006115016101935490565b82106115645760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610e68565b61019382815481106115785761157861570b565b90600052602060002001549050919050565b600061159881610fc4612fcc565b6101c78290556040518281527ff9d383c69b6255cbd431ca23734f43bdf15e694c7494956c917498469bcbce73906020016113fe565b60006115dc81610fc4612fcc565b61271082111561161a5760405162461bcd60e51b81526020600482015260096024820152683e204d41585f42505360b81b6044820152606401610e68565b6101ca80546001600160a01b0385166001600160b01b03199091168117600160a01b61ffff861602179091556040518381527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200161113b565b600081815261016160205260408120546001600160a01b031680610d595760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610e68565b60006116fc81610fc4612fcc565b6101c680546001600160a01b0319166001600160a01b0384169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a25050565b61179c6040518061010001604052806000815260200160008152602001600081526020016000815260200160008152602001600080191681526020016000815260200160006001600160a01b031681525090565b5060009081526101cf6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b031660e082015290565b60006001600160a01b03821661187f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610e68565b506001600160a01b03166000908152610162602052604090205490565b600260015414156118ef5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610e68565b60026001553360009081526065602052604090205460ff1680611921575032611916612fcc565b6001600160a01b0316145b6119535760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b6044820152606401610e68565b6101c55460006119616123d7565b905060008061197b83611972612fcc565b8c8a8a8a611de5565b91509150600085600014806119a0575060008481526101cf6020526040902060050154155b90506119b7846119ae612fcc565b8d8d8d86611ffa565b8280156119c45750600086115b156119f45760008481526101d160209081526040808320600886901c845290915290208054600160ff85161b1790555b6119ff8b8b8b613457565b611a0a8c858d61355e565b8b6001600160a01b0316611a1c612fcc565b6001600160a01b0316857ffa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e888f604051611a60929190918252602082015260400190565b60405180910390a450506001805550505050505050505050565b60008281526101d0602090815260408083206001600160a01b03851684528252808320548584526101cf90925290912060040154810181811015611abd57506000195b9250929050565b6101c3546001600160a01b031660009081527fc88390e7e62175be0932452175b6a7222b6b094ab0ef984a5153c620345d8975602052604081205460ff16611b0c5750600090565b6101c3546001600160a01b03165b905090565b600082815261012d60205260408120611b389083613646565b9392505050565b6000611b4d81610fc4612fcc565b611b5a6101cb8484614b9c565b50505050565b60606101608054610d6f90615671565b6000611b7e81610fc4612fcc565b612710821115611bbc5760405162461bcd60e51b81526020600482015260096024820152683e204d41585f42505360b81b6044820152606401610e68565b6040805180820182526001600160a01b03858116808352602080840187815260008a81526101d58352869020945185546001600160a01b031916941693909317845591516001909301929092559151848152909186917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a350505050565b6101d36020526000908152604090208054611c5d90615671565b80601f0160208091040260200160405190810160405280929190818152602001828054611c8990615671565b8015611cd65780601f10611cab57610100808354040283529160200191611cd6565b820191906000526020600020905b815481529060010190602001808311611cb957829003601f168201915b505050505081565b61135e611ce9612fcc565b8383613652565b60608167ffffffffffffffff811115611d0b57611d0b6151b9565b604051908082528060200260200182016040528015611d3e57816020015b6060815260200190600190039081611d295790505b50905060005b82811015611dde57611dae30858584818110611d6257611d6261570b565b9050602002810190611d749190615721565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061372292505050565b828281518110611dc057611dc061570b565b60200260200101819052508080611dd690615768565b915050611d44565b5092915050565b60008681526101cf60209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a08301819052600682015460c08401526007909101546001600160a01b031660e083015282919015611fee57611ede86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516bffffffffffffffffffffffff1960608d901b1660208201526034810188905260540160405160208183030381529060405280519060200120613816565b909350915082611f305760405162461bcd60e51b815260206004820152601160248201527f6e6f7420696e2077686974656c6973742e0000000000000000000000000000006044820152606401610e68565b60008981526101d160209081526040808320600886901c8452909152902054600160ff84161b1615611f955760405162461bcd60e51b815260206004820152600e60248201526d383937b7b31031b630b4b6b2b21760911b6044820152606401610e68565b831580611fa25750838711155b611fee5760405162461bcd60e51b815260206004820152601760248201527f696e76616c6964207175616e746974792070726f6f662e0000000000000000006044820152606401610e68565b50965096945050505050565b60008681526101cf6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b0390811660e0830181905290851614801561208557508060c0015183145b6120d15760405162461bcd60e51b815260206004820152601a60248201527f696e76616c69642063757272656e6379206f722070726963652e0000000000006044820152606401610e68565b6000851180156120ed57508115806120ed575080606001518511155b6121395760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207175616e746974792e0000000000000000000000000000006044820152606401610e68565b806020015185826040015161214e9190615783565b111561219c5760405162461bcd60e51b815260206004820152601c60248201527f657863656564206d617820636c61696d61626c6520737570706c792e000000006044820152606401610e68565b6101c454856101c5546121af9190615783565b11156121fd5760405162461bcd60e51b815260206004820152601960248201527f6e6f7420656e6f756768206d696e74656420746f6b656e732e000000000000006044820152606401610e68565b6101c854158061221e57506101c854856101c55461221b9190615783565b11155b61226a5760405162461bcd60e51b815260206004820152601860248201527f657863656564206d617820746f74616c20737570706c792e00000000000000006044820152606401610e68565b6101c75415806122a157506101c7546001600160a01b03871660009081526101d4602052604090205461229e908790615783565b11155b6122ed5760405162461bcd60e51b815260206004820152601260248201527f65786365656420636c61696d206c696d697400000000000000000000000000006044820152606401610e68565b6000806122fa8989611a7a565b91509150816000148061230d5750804210155b6123495760405162461bcd60e51b815260206004820152600d60248201526c31b0b73737ba1031b630b4b69760991b6044820152606401610e68565b505050505050505050565b61236561235f612fcc565b836130c5565b6123cb5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608401610e68565b611b5a848484846138e4565b6101ce546101cd5460009182916123ee9190615783565b90505b6101cd54811115612447576101cf600061240c60018461579b565b81526020019081526020016000206000015442106124355761242f60018261579b565b91505090565b8061243f816157b2565b9150506123f1565b5060405162461bcd60e51b815260206004820152600b60248201526a10a1a7a72224aa24a7a71760a91b6044820152606401610e68565b606060005b6101cc548110156125af576101cc81815481106124a2576124a261570b565b906000526020600020015483101561259d576101d360006101cc83815481106124cd576124cd61570b565b9060005260206000200154815260200190815260200160002080546124f190615671565b159050612551576101d260006101cc83815481106125115761251161570b565b9060005260206000200154815260200190815260200160002060405160200161253a9190615863565b604051602081830303815290604052915050919050565b6101d260006101cc838154811061256a5761256a61570b565b9060005260206000200154815260200190815260200160002061258c84613962565b60405160200161253a929190615880565b6125a8600182615783565b9050612483565b5050604080516020810190915260008152919050565b600081815261012d60205260408120610d5990613a60565b60607f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661260c81610fc4612fcc565b6101cc54851061264f5760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21034b73232bc1760911b6044820152606401610e68565b60006101cc86815481106126655761266561570b565b9060005260206000200154905060006101d36000838152602001908152602001600020805461269390615671565b80601f01602080910402602001604051908101604052809291908181526020018280546126bf90615671565b801561270c5780601f106126e15761010080835404028352916020019161270c565b820191906000526020600020905b8154815290600101906020018083116126ef57829003601f168201915b505050505090506000808280602001905181019061272a91906158a5565b915091508151600014156127805760405162461bcd60e51b815260206004820152601260248201527f6e6f7468696e6720746f2072657665616c2e00000000000000000000000000006044820152606401610e68565b61278b828989612f15565b955080868989466040516020016127a59493929190615926565b60405160208183030381529060405280519060200120146127f85760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610e68565b60008481526101d260209081526040909120875161281892890190614c20565b5060008481526101d36020526040812061283191614c94565b7f09b52c0c3a3e08761cd3917c8e49275ed1e0982477b54047add8b4d70513bc86848760405161286292919061594f565b60405180910390a150505050509392505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66128a381610fc4612fcc565b6101c45460006128b38883615783565b6101c481905560008181526101d2602052604090209091506128d6908888614b9c565b506101cc80546001810182556000919091527f9a37fbd5e796e9046c2f5f7e29046a230a4ba9ada48a80535ed93a51fec5cfbc01819055831561295b5760008061292286880188615968565b91509150815160001415801561293757508015155b156129585760008381526101d360205260409020612956908888614b9c565b505b50505b7f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d8260016129898b83615783565b612993919061579b565b898989896040516129a9969594939291906159d6565b60405180910390a15050505050505050565b600082815260fb60205260409020600101546129d981610fc4612fcc565b610fb1838361338b565b6101cc81815481106129f457600080fd5b600091825260209091200154905081565b600054610100900460ff16612a205760005460ff1615612a24565b303b155b612a875760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e68565b600054610100900460ff16158015612aa9576000805461ffff19166101011790555b612ab1613a6a565b612aba87613a9b565b612ac48a8a613ad3565b6101ca80546001600160a01b038781166001600160b01b031992831617600160a01b61ffff8981168202929092179094556101c980548784169416939093179087169093029290921790556101c680546001600160a01b0319169188169190911790558751612b3b906101cb9060208b0190614c20565b506101c380546001600160a01b0319166001600160a01b038d16179055612b6360008c613b04565b612b8d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68c613b04565b612bb77f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c8c613b04565b612be27f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c6000613b04565b8015612bf4576000805461ff00191690555b5050505050505050505050565b6000612c0f81610fc4612fcc565b6101cd546101ce54818415612c2b57612c288284615783565b90505b6101ce8690556101cd8190556000805b87811015612dcb57801580612c6b5750888882818110612c5d57612c5d61570b565b905061010002016000013582105b612c9c5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610e68565b60006101cf81612cac8487615783565b8152602001908152602001600020600201549050898983818110612cd257612cd261570b565b9050610100020160200135811115612d2c5760405162461bcd60e51b815260206004820152601a60248201527f6d617820737570706c7920636c61696d656420616c72656164790000000000006044820152606401610e68565b898983818110612d3e57612d3e61570b565b610100029190910190506101cf6000612d578588615783565b81526020019081526020016000208181612d719190615a16565b508190506101cf6000612d848588615783565b8152602081019190915260400160002060020155898983818110612daa57612daa61570b565b90506101000201600001359250508080612dc390615768565b915050612c3b565b508515612e4b57835b82811015612e455760008181526101cf60209081526040822082815560018101839055600281018390556003810183905560048101839055600581018390556006810192909255600790910180546001600160a01b03191690556101d1905280612e3d81615768565b915050612dd4565b50612ee4565b86831115612ee457865b83811015612ee2576101cf6000612e6c8386615783565b81526020810191909152604001600090812081815560018101829055600281018290556003810182905560048101829055600581018290556006810182905560070180546001600160a01b03191690556101d190612eca8386615783565b81526020015280612eda81615768565b915050612e55565b505b7f22ddd1bcb3816651679299dbffccb94973edec10c32e88dc2f4735c7699a02ca88886040516129a9929190615a87565b8251604080518083016020019091528181529060005b81811015612f81576000858583604051602001612f4a93929190615b1e565b60408051601f19818403018152919052805160209182012088840182015118858401820152612f7a915082615783565b9050612f2b565b50509392505050565b6101cb8054611c5d90615671565b6001600160a01b03163b151590565b60006001600160e01b0319821663780e9d6360e01b1480610d595750610d5982613b0e565b6000611b1a613b4e565b60008181526101636020526040902080546001600160a01b0319166001600160a01b038416908117909155819061300c82611676565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff1661135e57613083816001600160a01b03166014613b78565b61308e836020613b78565b60405160200161309f929190615b30565b60408051601f198184030181529082905262461bcd60e51b8252610e6891600401614d6a565b600081815261016160205260408120546001600160a01b031661313f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610e68565b600061314a83611676565b9050806001600160a01b0316846001600160a01b031614806131855750836001600160a01b031661317a84610df2565b6001600160a01b0316145b806131b657506001600160a01b038082166000908152610164602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166131d182611676565b6001600160a01b0316146132355760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610e68565b6001600160a01b0382166132975760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610e68565b6132a2838383613d21565b6132ad600082612fd6565b6001600160a01b0383166000908152610162602052604081208054600192906132d790849061579b565b90915550506001600160a01b038216600090815261016260205260408120805460019290613306908490615783565b90915550506000818152610161602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6133728282613e61565b600082815261012d60205260409020610fb19082613f04565b6133958282613f19565b600082815261012d60205260409020610fb19082613fba565b60006133b982611676565b90506133c781600084613d21565b6133d2600083612fd6565b6001600160a01b0381166000908152610162602052604081208054600192906133fc90849061579b565b90915550506000828152610161602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b8061346157505050565b600061346d82856156c2565b6101c9549091506000906127109061349090600160a01b900461ffff16846156c2565b61349a91906156f7565b90506001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613510578134146135105760405162461bcd60e51b815260206004820152601660248201527f6d7573742073656e6420746f74616c2070726963652e000000000000000000006044820152606401610e68565b61352f8461351c612fcc565b6101c9546001600160a01b031684613fcf565b6135578461353b612fcc565b6101c6546001600160a01b0316613552858761579b565b613fcf565b5050505050565b60008281526101cf602052604081206002018054839290613580908490615783565b909155505060008281526101d060205260408120429161359e612fcc565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550806101d460006135d0612fcc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546135ff9190615783565b90915550506101c55460005b8281101561363c5761361d8583614019565b613628600183615783565b9150613635600182615783565b905061360b565b506101c555505050565b6000611b38838361416a565b816001600160a01b0316836001600160a01b031614156136b45760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610e68565b6001600160a01b0383811660008181526101646020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606001600160a01b0383163b61378a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610e68565b600080846001600160a01b0316846040516137a59190615bb1565b600060405180830381855af49150503d80600081146137e0576040519150601f19603f3d011682016040523d82523d6000602084013e6137e5565b606091505b509150915061380d8282604051806060016040528060278152602001615cb960279139614194565b95945050505050565b6000808281805b87518110156138d8576138316002836156c2565b915060008882815181106138475761384761570b565b602002602001015190508084116138895760408051602081018690529081018290526060016040516020818303038152906040528051906020012093506138c5565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836138c29190615783565b92505b50806138d081615768565b91505061381d565b50941495939450505050565b6138ef8484846131be565b6138fb848484846141cd565b611b5a5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610e68565b6060816139865750506040805180820190915260018152600360fc1b602082015290565b8160005b81156139b0578061399a81615768565b91506139a99050600a836156f7565b915061398a565b60008167ffffffffffffffff8111156139cb576139cb6151b9565b6040519080825280601f01601f1916602001820160405280156139f5576020820181803683370190505b5090505b84156131b657613a0a60018361579b565b9150613a17600a86615bcd565b613a22906030615783565b60f81b818381518110613a3757613a3761570b565b60200101906001600160f81b031916908160001a905350613a59600a866156f7565b94506139f9565b6000610d59825490565b600054610100900460ff16613a915760405162461bcd60e51b8152600401610e6890615be1565b613a9961431d565b565b600054610100900460ff16613ac25760405162461bcd60e51b8152600401610e6890615be1565b613aca61434a565b61148581614371565b600054610100900460ff16613afa5760405162461bcd60e51b8152600401610e6890615be1565b61135e8282614400565b61135e8282613368565b60006001600160e01b031982166380ac58cd60e01b1480613b3f57506001600160e01b03198216635b5e139f60e01b145b80610d595750610d5982614450565b3360009081526065602052604081205460ff1615613b73575060131936013560601c90565b503390565b60606000613b878360026156c2565b613b92906002615783565b67ffffffffffffffff811115613baa57613baa6151b9565b6040519080825280601f01601f191660200182016040528015613bd4576020820181803683370190505b509050600360fc1b81600081518110613bef57613bef61570b565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110613c1e57613c1e61570b565b60200101906001600160f81b031916908160001a9053506000613c428460026156c2565b613c4d906001615783565b90505b6001811115613cd2577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110613c8e57613c8e61570b565b1a60f81b828281518110613ca457613ca461570b565b60200101906001600160f81b031916908160001a90535060049490941c93613ccb816157b2565b9050613c50565b508315611b385760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610e68565b613d2c838383614475565b600080527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a13126020527f70e64e82d0337f3fa9071fdb3266f859725ed1fc29697b2e6e986b76cffbfb085460ff16158015613d8e57506001600160a01b03831615155b8015613da257506001600160a01b03821615155b15610fb1576001600160a01b03831660009081527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a1312602052604090205460ff1680613e2457506001600160a01b03821660009081527fde23fa6c6392e300b5ced791de0faa0b28226983a4ab1c05a1ba79ef4d0a1312602052604090205460ff165b610fb15760405162461bcd60e51b815260206004820152600e60248201526d215452414e534645525f524f4c4560901b6044820152606401610e68565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff1661135e57600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055613ec0612fcc565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000611b38836001600160a01b03841661452f565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff161561135e57600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19169055613f76612fcc565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000611b38836001600160a01b03841661457e565b80613fd957611b5a565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561400d576140088282614671565b611b5a565b611b5a84848484614714565b6001600160a01b03821661406f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610e68565b600081815261016160205260409020546001600160a01b0316156140d55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610e68565b6140e160008383613d21565b6001600160a01b03821660009081526101626020526040812080546001929061410b908490615783565b90915550506000818152610161602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008260000182815481106141815761418161570b565b9060005260206000200154905092915050565b606083156141a3575081611b38565b8251156141b35782518084602001fd5b8160405162461bcd60e51b8152600401610e689190614d6a565b60006001600160a01b0384163b1561431257836001600160a01b031663150b7a026141f6612fcc565b8786866040518563ffffffff1660e01b81526004016142189493929190615c2c565b6020604051808303816000875af1925050508015614253575060408051601f3d908101601f1916820190925261425091810190615c68565b60015b6142f8573d808015614281576040519150601f19603f3d011682016040523d82523d6000602084013e614286565b606091505b5080516142f05760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610e68565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506131b6565b506001949350505050565b600054610100900460ff166143445760405162461bcd60e51b8152600401610e6890615be1565b60018055565b600054610100900460ff16613a995760405162461bcd60e51b8152600401610e6890615be1565b600054610100900460ff166143985760405162461bcd60e51b8152600401610e6890615be1565b60005b815181101561135e576001606560008484815181106143bc576143bc61570b565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806143f881615768565b91505061439b565b600054610100900460ff166144275760405162461bcd60e51b8152600401610e6890615be1565b815161443b9061015f906020850190614c20565b508051610fb190610160906020840190614c20565b60006001600160e01b03198216635a05180f60e01b1480610d595750610d598261476d565b6001600160a01b0383166144d2576144cd816101938054600083815261019460205260408120829055600182018355919091527ffc8af01f449989052b52093a58fc9f42d0b11f0c6dd5dca0463dab62346ccc680155565b6144f5565b816001600160a01b0316836001600160a01b0316146144f5576144f583826147a2565b6001600160a01b03821661450c57610fb181614844565b826001600160a01b0316826001600160a01b031614610fb157610fb182826148f9565b600081815260018301602052604081205461457657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610d59565b506000610d59565b600081815260018301602052604081205480156146675760006145a260018361579b565b85549091506000906145b69060019061579b565b905081811461461b5760008660000182815481106145d6576145d661570b565b90600052602060002001549050808760000184815481106145f9576145f961570b565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061462c5761462c615c85565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610d59565b6000915050610d59565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146146be576040519150601f19603f3d011682016040523d82523d6000602084013e6146c3565b606091505b5050905080610fb15760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610e68565b816001600160a01b0316836001600160a01b0316141561473357611b5a565b6001600160a01b038316301415614758576140086001600160a01b038516838361493f565b611b5a6001600160a01b0385168484846149b7565b60006001600160e01b03198216637965db0b60e01b1480610d5957506301ffc9a760e01b6001600160e01b0319831614610d59565b600060016147af84611814565b6147b9919061579b565b6000838152610192602052604090205490915080821461480f576001600160a01b038416600090815261019160209081526040808320858452825280832054848452818420819055835261019290915290208190555b506000918252610192602090815260408084208490556001600160a01b03909416835261019181528383209183525290812055565b610193546000906148579060019061579b565b6000838152610194602052604081205461019380549394509092849081106148815761488161570b565b906000526020600020015490508061019383815481106148a3576148a361570b565b600091825260208083209091019290925582815261019490915260408082208490558582528120556101938054806148dd576148dd615c85565b6001900381819060005260206000200160009055905550505050565b600061490483611814565b6001600160a01b0390931660009081526101916020908152604080832086845282528083208590559382526101929052919091209190915550565b6040516001600160a01b038316602482015260448101829052610fb190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909316929092179091526149ef565b6040516001600160a01b0380851660248301528316604482015260648101829052611b5a9085906323b872dd60e01b9060840161496b565b6000614a44826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614ac19092919063ffffffff16565b805190915015610fb15780806020019051810190614a629190615c9b565b610fb15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e68565b60606131b68484600085856001600160a01b0385163b614b235760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e68565b600080866001600160a01b03168587604051614b3f9190615bb1565b60006040518083038185875af1925050503d8060008114614b7c576040519150601f19603f3d011682016040523d82523d6000602084013e614b81565b606091505b5091509150614b91828286614194565b979650505050505050565b828054614ba890615671565b90600052602060002090601f016020900481019282614bca5760008555614c10565b82601f10614be35782800160ff19823516178555614c10565b82800160010185558215614c10579182015b82811115614c10578235825591602001919060010190614bf5565b50614c1c929150614cca565b5090565b828054614c2c90615671565b90600052602060002090601f016020900481019282614c4e5760008555614c10565b82601f10614c6757805160ff1916838001178555614c10565b82800160010185558215614c10579182015b82811115614c10578251825591602001919060010190614c79565b508054614ca090615671565b6000825580601f10614cb0575050565b601f01602090049060005260206000209081019061148591905b5b80821115614c1c5760008155600101614ccb565b6001600160e01b03198116811461148557600080fd5b600060208284031215614d0757600080fd5b8135611b3881614cdf565b60005b83811015614d2d578181015183820152602001614d15565b83811115611b5a5750506000910152565b60008151808452614d56816020860160208601614d12565b601f01601f19169290920160200192915050565b602081526000611b386020830184614d3e565b600060208284031215614d8f57600080fd5b5035919050565b6001600160a01b038116811461148557600080fd5b8035614db681614d96565b919050565b60008060408385031215614dce57600080fd5b8235614dd981614d96565b946020939093013593505050565b600060208284031215614df957600080fd5b8135611b3881614d96565b600080600060608486031215614e1957600080fd5b8335614e2481614d96565b92506020840135614e3481614d96565b929592945050506040919091013590565b60008060408385031215614e5857600080fd5b50508035926020909101359150565b60008060408385031215614e7a57600080fd5b823591506020830135614e8c81614d96565b809150509250929050565b60008083601f840112614ea957600080fd5b50813567ffffffffffffffff811115614ec157600080fd5b6020830191508360208260051b8501011115611abd57600080fd5b600080600080600080600060c0888a031215614ef757600080fd5b8735614f0281614d96565b9650602088013595506040880135614f1981614d96565b945060608801359350608088013567ffffffffffffffff811115614f3c57600080fd5b614f488a828b01614e97565b989b979a5095989497959660a090950135949350505050565b60008083601f840112614f7357600080fd5b50813567ffffffffffffffff811115614f8b57600080fd5b602083019150836020828501011115611abd57600080fd5b60008060208385031215614fb657600080fd5b823567ffffffffffffffff811115614fcd57600080fd5b614fd985828601614f61565b90969095509350505050565b600080600060608486031215614ffa57600080fd5b833592506020840135614e3481614d96565b801515811461148557600080fd5b6000806040838503121561502d57600080fd5b823561503881614d96565b91506020830135614e8c8161500c565b6000806020838503121561505b57600080fd5b823567ffffffffffffffff81111561507257600080fd5b614fd985828601614e97565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156150d357603f198886030184526150c1858351614d3e565b945092850192908501906001016150a5565b5092979650505050505050565b60008060008060008060a087890312156150f957600080fd5b86359550602087013561510b81614d96565b945060408701359350606087013567ffffffffffffffff81111561512e57600080fd5b61513a89828a01614e97565b979a9699509497949695608090950135949350505050565b60008060008060008060c0878903121561516b57600080fd5b86359550602087013561517d81614d96565b945060408701359350606087013561519481614d96565b92506080870135915060a08701356151ab8161500c565b809150509295509295509295565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156151f8576151f86151b9565b604052919050565b600067ffffffffffffffff82111561521a5761521a6151b9565b50601f01601f191660200190565b600082601f83011261523957600080fd5b813561524c61524782615200565b6151cf565b81815284602083860101111561526157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561529457600080fd5b843561529f81614d96565b935060208501356152af81614d96565b925060408501359150606085013567ffffffffffffffff8111156152d257600080fd5b6152de87828801615228565b91505092959194509250565b6000806000604084860312156152ff57600080fd5b83359250602084013567ffffffffffffffff81111561531d57600080fd5b61532986828701614f61565b9497909650939450505050565b60008060008060006060868803121561534e57600080fd5b85359450602086013567ffffffffffffffff8082111561536d57600080fd5b61537989838a01614f61565b9096509450604088013591508082111561539257600080fd5b5061539f88828901614f61565b969995985093965092949392505050565b600082601f8301126153c157600080fd5b8135602067ffffffffffffffff8211156153dd576153dd6151b9565b8160051b6153ec8282016151cf565b928352848101820192828101908785111561540657600080fd5b83870192505b84831015614b9157823561541f81614d96565b8252918301919083019061540c565b80356fffffffffffffffffffffffffffffffff81168114614db657600080fd5b6000806000806000806000806000806101408b8d03121561546e57600080fd5b6154778b614dab565b995060208b013567ffffffffffffffff8082111561549457600080fd5b6154a08e838f01615228565b9a5060408d01359150808211156154b657600080fd5b6154c28e838f01615228565b995060608d01359150808211156154d857600080fd5b6154e48e838f01615228565b985060808d01359150808211156154fa57600080fd5b506155078d828e016153b0565b96505061551660a08c01614dab565b945061552460c08c01614dab565b935061553260e08c0161542e565b92506155416101008c0161542e565b91506155506101208c01614dab565b90509295989b9194979a5092959850565b60008060006040848603121561557657600080fd5b833567ffffffffffffffff8082111561558e57600080fd5b818601915086601f8301126155a257600080fd5b8135818111156155b157600080fd5b8760208260081b85010111156155c657600080fd5b602092830195509350508401356155dc8161500c565b809150509250925092565b6000806000604084860312156155fc57600080fd5b833567ffffffffffffffff8082111561561457600080fd5b61562087838801615228565b9450602086013591508082111561563657600080fd5b5061532986828701614f61565b6000806040838503121561565657600080fd5b823561566181614d96565b91506020830135614e8c81614d96565b600181811c9082168061568557607f821691505b602082108114156156a657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156156dc576156dc6156ac565b500290565b634e487b7160e01b600052601260045260246000fd5b600082615706576157066156e1565b500490565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261573857600080fd5b83018035915067ffffffffffffffff82111561575357600080fd5b602001915036819003821315611abd57600080fd5b600060001982141561577c5761577c6156ac565b5060010190565b60008219821115615796576157966156ac565b500190565b6000828210156157ad576157ad6156ac565b500390565b6000816157c1576157c16156ac565b506000190190565b8054600090600181811c90808316806157e357607f831692505b602080841082141561580557634e487b7160e01b600052602260045260246000fd5b818015615819576001811461582a57615857565b60ff19861689528489019650615857565b60008881526020902060005b8681101561584f5781548b820152908501908301615836565b505084890196505b50505050505092915050565b600061586f82846157c9565b600360fc1b81526001019392505050565b600061588c82856157c9565b835161589c818360208801614d12565b01949350505050565b600080604083850312156158b857600080fd5b825167ffffffffffffffff8111156158cf57600080fd5b8301601f810185136158e057600080fd5b80516158ee61524782615200565b81815286602083850101111561590357600080fd5b615914826020830160208601614d12565b60209590950151949694955050505050565b60008551615938818460208a01614d12565b820184868237909301918252506020019392505050565b8281526040602082015260006131b66040830184614d3e565b6000806040838503121561597b57600080fd5b823567ffffffffffffffff81111561599257600080fd5b61599e85828601615228565b95602094909401359450505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8681528560208201526080604082015260006159f66080830186886159ad565b8281036060840152615a098185876159ad565b9998505050505050505050565b813581556020820135600182015560408201356002820155606082013560038201556080820135600482015560a0820135600582015560c082013560068201556007810160e0830135615a6881614d96565b81546001600160a01b0319166001600160a01b03919091161790555050565b6020808252818101839052600090604080840186845b87811015615b11578135835284820135858401528382013584840152606080830135908401526080808301359084015260a0808301359084015260c0808301359084015260e080830135615af081614d96565b6001600160a01b031690840152610100928301929190910190600101615a9d565b5090979650505050505050565b82848237909101908152602001919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351615b68816017850160208801614d12565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351615ba5816028840160208801614d12565b01602801949350505050565b60008251615bc3818460208701614d12565b9190910192915050565b600082615bdc57615bdc6156e1565b500690565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006001600160a01b03808716835280861660208401525083604083015260806060830152615c5e6080830184614d3e565b9695505050505050565b600060208284031215615c7a57600080fd5b8151611b3881614cdf565b634e487b7160e01b600052603160045260246000fd5b600060208284031215615cad57600080fd5b8151611b388161500c56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201ea4e059b395424df34b43a002a737e27a2a672b9e22249f7afc5e74fa3d29c964736f6c634300080c0033";

const isSuperArgs$J = xs => xs.length > 1;

class DropERC721__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$J(args)) {
      super(...args);
    } else {
      super(_abi$1$, _bytecode$J, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1$);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1$, signerOrProvider);
  }

}

defineProperty._defineProperty(DropERC721__factory, "bytecode", _bytecode$J);

defineProperty._defineProperty(DropERC721__factory, "abi", _abi$1$);

const _abi$1_ = [{
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "startTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "maxClaimableSupply",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "supplyClaimed",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "quantityLimitPerTransaction",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "waitTimeInSecondsBetweenClaims",
    type: "uint256"
  }, {
    internalType: "bytes32",
    name: "merkleRoot",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimedAt",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "_condition",
    type: "tuple"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
class DropSinglePhase__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1_);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1_, signerOrProvider);
  }

}

defineProperty._defineProperty(DropSinglePhase__factory, "abi", _abi$1_);

const _abi$1Z = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase1155.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "startTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "maxClaimableSupply",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "supplyClaimed",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "quantityLimitPerTransaction",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "waitTimeInSecondsBetweenClaims",
    type: "uint256"
  }, {
    internalType: "bytes32",
    name: "merkleRoot",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimedAt",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "_condition",
    type: "tuple"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase1155.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
class DropSinglePhase1155__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1Z);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1Z, signerOrProvider);
  }

}

defineProperty._defineProperty(DropSinglePhase1155__factory, "abi", _abi$1Z);

const _abi$1Y = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "_value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$I = "0x60806040523480156200001157600080fd5b506040516200163d3803806200163d8339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b6113ab80620002926000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80634e1273f4116100665780634e1273f41461014057806395d89b4114610160578063a22cb46514610168578063e985e9c51461017b578063f242432a146101a957600080fd5b8062fdd58e146100a257806301ffc9a7146100e057806306fdde03146101035780630e89341c146101185780632eb2c2d61461012b575b600080fd5b6100cd6100b0366004610c86565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100f36100ee366004610cc9565b6101bc565b60405190151581526020016100d7565b61010b61020e565b6040516100d79190610d3a565b61010b610126366004610d4d565b61029c565b61013e610139366004610eb2565b61033e565b005b61015361014e366004610f5c565b6103d2565b6040516100d79190611062565b61010b610509565b61013e610176366004611075565b610516565b6100f36101893660046110b1565b600360209081526000928352604080842090915290825290205460ff1681565b61013e6101b73660046110e4565b6105ce565b60006301ffc9a760e01b6001600160e01b0319831614806101ed5750636cdb3d1360e11b6001600160e01b03198316145b8061020857506303a24d0760e21b6001600160e01b03198316145b92915050565b6000805461021b90611149565b80601f016020809104026020016040519081016040528092919081815260200182805461024790611149565b80156102945780601f1061026957610100808354040283529160200191610294565b820191906000526020600020905b81548152906001019060200180831161027757829003601f168201915b505050505081565b60008181526004602052604090208054606091906102b990611149565b80601f01602080910402602001604051908101604052809291908181526020018280546102e590611149565b80156103325780601f1061030757610100808354040283529160200191610332565b820191906000526020600020905b81548152906001019060200180831161031557829003601f168201915b50505050509050919050565b6001600160a01b03851633148061037857506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6103be5760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b60448201526064015b60405180910390fd5b6103cb8585858585610656565b5050505050565b606081518351146104175760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016103b5565b6000835167ffffffffffffffff81111561043357610433610d66565b60405190808252806020026020018201604052801561045c578160200160208202803683370190505b50905060005b8451811015610501576002600086838151811061048157610481611184565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008583815181106104bd576104bd611184565b60200260200101518152602001908152602001600020548282815181106104e6576104e6611184565b60209081029190910101526104fa816111b0565b9050610462565b509392505050565b6001805461021b90611149565b336001600160a01b0383168114156105615760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b60448201526064016103b5565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03851633148061060857506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6106495760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b60448201526064016103b5565b6103cb8585858585610867565b81518351146106995760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016103b5565b6001600160a01b0384166106de5760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b60448201526064016103b5565b3360005b84518110156107f95760008582815181106106ff576106ff611184565b60200260200101519050600085838151811061071d5761071d611184565b6020908102919091018101516001600160a01b038b1660009081526002835260408082208683529093529190912054909150818110156107925760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b60448201526064016103b5565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d168352908152828220868352905290812080548492906107de9084906111cb565b92505081905550505050806107f2906111b0565b90506106e2565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108499291906111e3565b60405180910390a461085f8187878787876109e1565b505050505050565b6001600160a01b0384166108ac5760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b60448201526064016103b5565b336108c58187876108bc88610b42565b6103cb88610b42565b6001600160a01b03861660009081526002602090815260408083208784529091529020548381101561092c5760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b60448201526064016103b5565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a168352908152828220888352905290812080548692906109789084906111cb565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109d8828888888888610b8d565b50505050505050565b6001600160a01b0384163b1561085f5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a259089908990889088908890600401611211565b6020604051808303816000875af1925050508015610a60575060408051601f3d908101601f19168201909252610a5d9181019061126f565b60015b610af057610a6c61128c565b806308c379a01415610aa65750610a816112a8565b80610a8c5750610aa8565b8060405162461bcd60e51b81526004016103b59190610d3a565b505b60405162461bcd60e51b815260206004820152601060248201527f214552433131353552454345495645520000000000000000000000000000000060448201526064016103b5565b6001600160e01b0319811663bc197c8160e01b146109d85760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b60448201526064016103b5565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b7c57610b7c611184565b602090810291909101015292915050565b6001600160a01b0384163b1561085f5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610bd19089908990889088908890600401611332565b6020604051808303816000875af1925050508015610c0c575060408051601f3d908101601f19168201909252610c099181019061126f565b60015b610c1857610a6c61128c565b6001600160e01b0319811663f23a6e6160e01b146109d85760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b60448201526064016103b5565b80356001600160a01b0381168114610c8157600080fd5b919050565b60008060408385031215610c9957600080fd5b610ca283610c6a565b946020939093013593505050565b6001600160e01b031981168114610cc657600080fd5b50565b600060208284031215610cdb57600080fd5b8135610ce681610cb0565b9392505050565b6000815180845260005b81811015610d1357602081850181015186830182015201610cf7565b81811115610d25576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610ce66020830184610ced565b600060208284031215610d5f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610da257610da2610d66565b6040525050565b600067ffffffffffffffff821115610dc357610dc3610d66565b5060051b60200190565b600082601f830112610dde57600080fd5b81356020610deb82610da9565b604051610df88282610d7c565b83815260059390931b8501820192828101915086841115610e1857600080fd5b8286015b84811015610e335780358352918301918301610e1c565b509695505050505050565b600082601f830112610e4f57600080fd5b813567ffffffffffffffff811115610e6957610e69610d66565b604051610e80601f8301601f191660200182610d7c565b818152846020838601011115610e9557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610eca57600080fd5b610ed386610c6a565b9450610ee160208701610c6a565b9350604086013567ffffffffffffffff80821115610efe57600080fd5b610f0a89838a01610dcd565b94506060880135915080821115610f2057600080fd5b610f2c89838a01610dcd565b93506080880135915080821115610f4257600080fd5b50610f4f88828901610e3e565b9150509295509295909350565b60008060408385031215610f6f57600080fd5b823567ffffffffffffffff80821115610f8757600080fd5b818501915085601f830112610f9b57600080fd5b81356020610fa882610da9565b604051610fb58282610d7c565b83815260059390931b8501820192828101915089841115610fd557600080fd5b948201945b83861015610ffa57610feb86610c6a565b82529482019490820190610fda565b9650508601359250508082111561101057600080fd5b5061101d85828601610dcd565b9150509250929050565b600081518084526020808501945080840160005b838110156110575781518752958201959082019060010161103b565b509495945050505050565b602081526000610ce66020830184611027565b6000806040838503121561108857600080fd5b61109183610c6a565b9150602083013580151581146110a657600080fd5b809150509250929050565b600080604083850312156110c457600080fd5b6110cd83610c6a565b91506110db60208401610c6a565b90509250929050565b600080600080600060a086880312156110fc57600080fd5b61110586610c6a565b945061111360208701610c6a565b93506040860135925060608601359150608086013567ffffffffffffffff81111561113d57600080fd5b610f4f88828901610e3e565b600181811c9082168061115d57607f821691505b6020821081141561117e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156111c4576111c461119a565b5060010190565b600082198211156111de576111de61119a565b500190565b6040815260006111f66040830185611027565b82810360208401526112088185611027565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261123d60a0830186611027565b828103606084015261124f8186611027565b905082810360808401526112638185610ced565b98975050505050505050565b60006020828403121561128157600080fd5b8151610ce681610cb0565b600060033d11156112a55760046000803e5060005160e01c5b90565b600060443d10156112b65790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112e657505050505090565b82850191508151818111156112fe5750505050505090565b843d87010160208285010111156113185750505050505090565b61132760208286010187610d7c565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261136a60a0830184610ced565b97965050505050505056fea2646970667358221220a78bc4b9524fe341070526451f2ff81dbc7fea2739540f97ed1d7ef9e1c225d864736f6c634300080c0033";

const isSuperArgs$I = xs => xs.length > 1;

class ERC1155__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$I(args)) {
      super(...args);
    } else {
      super(_abi$1Y, _bytecode$I, args[0]);
    }
  }

  deploy(_name, _symbol, overrides) {
    return super.deploy(_name, _symbol, overrides || {});
  }

  getDeployTransaction(_name, _symbol, overrides) {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1Y);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1Y, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC1155__factory, "bytecode", _bytecode$I);

defineProperty._defineProperty(ERC1155__factory, "abi", _abi$1Y);

const _abi$1X = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "_value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "_tokenIds",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "_amounts",
    type: "uint256[]"
  }, {
    internalType: "string",
    name: "_baseURI",
    type: "string"
  }],
  name: "batchMintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "_tokenIds",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "_amounts",
    type: "uint256[]"
  }],
  name: "burnBatch",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_tokenURI",
    type: "string"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$H = "0x60806040523480156200001157600080fd5b506040516200376a3803806200376a833981016040819052620000349162000306565b8351849084906200004d90600090602085019062000193565b5080516200006390600190602084019062000193565b50505062000077336200009660201b60201c565b6200008c826001600160801b038316620000e8565b50505050620003ef565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115620001315760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b828054620001a190620003b2565b90600052602060002090601f016020900481019282620001c5576000855562000210565b82601f10620001e057805160ff191683800117855562000210565b8280016001018555821562000210579182015b8281111562000210578251825591602001919060010190620001f3565b506200021e92915062000222565b5090565b5b808211156200021e576000815560010162000223565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026157600080fd5b81516001600160401b03808211156200027e576200027e62000239565b604051601f8301601f19908116603f01168101908282118183101715620002a957620002a962000239565b81604052838152602092508683858801011115620002c657600080fd5b600091505b83821015620002ea5785820183015181830184015290820190620002cb565b83821115620002fc5760008385830101525b9695505050505050565b600080600080608085870312156200031d57600080fd5b84516001600160401b03808211156200033557600080fd5b62000343888389016200024f565b955060208701519150808211156200035a57600080fd5b5062000369878288016200024f565b604087015190945090506001600160a01b03811681146200038957600080fd5b60608601519092506001600160801b0381168114620003a757600080fd5b939692955090935050565b600181811c90821680620003c757607f821691505b60208210811415620003e957634e487b7160e01b600052602260045260246000fd5b50919050565b61336b80620003ff6000396000f3fe608060405234801561001057600080fd5b50600436106101c35760003560e01c80638da5cb5b116100f9578063b03f452811610097578063e8a3d48511610071578063e8a3d48514610429578063e985e9c514610431578063f242432a1461045f578063f5298aca1461047257600080fd5b8063b03f4528146103d8578063b24f2d39146103eb578063bd85b0391461040957600080fd5b806395d89b41116100d357806395d89b411461038a5780639bcf7a1514610392578063a22cb465146103a5578063ac9650d8146103b857600080fd5b80638da5cb5b14610349578063938e3d7b14610364578063949c09f71461037757600080fd5b80632eb2c2d6116101665780634e1273f4116101405780634e1273f4146102fb578063600dd5ea1461031b57806363b45e2d1461032e5780636b20c4541461033657600080fd5b80632eb2c2d6146102ab5780633b1475a7146102be5780634cc157df146102c657600080fd5b80630e89341c116101a25780630e89341c1461023e57806313af4035146102515780632419f51b146102665780632a55205a1461027957600080fd5b8062fdd58e146101c857806301ffc9a71461020657806306fdde0314610229575b600080fd5b6101f36101d63660046127cf565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61021961021436600461280f565b610485565b60405190151581526020016101fd565b6102316104f2565b6040516101fd9190612884565b61023161024c366004612897565b610580565b61026461025f3660046128b0565b61066e565b005b6101f3610274366004612897565b6106c4565b61028c6102873660046128cb565b610732565b604080516001600160a01b0390931683526020830191909152016101fd565b6102646102b9366004612a39565b61076f565b600b546101f3565b6102d96102d4366004612897565b6107fe565b604080516001600160a01b03909316835261ffff9091166020830152016101fd565b61030e610309366004612ae3565b610869565b6040516101fd9190612be9565b6102646103293660046127cf565b6109a0565b6009546101f3565b610264610344366004612bfc565b6109f3565b6006546040516001600160a01b0390911681526020016101fd565b610264610372366004612c70565b610ba9565b610264610385366004612ca5565b610bf7565b610231610e0f565b6102646103a0366004612d3e565b610e1c565b6102646103b3366004612d73565b610e71565b6103cb6103c6366004612daf565b610f2a565b6040516101fd9190612e24565b6102646103e6366004612e86565b61101f565b6007546001600160a01b03811690600160a01b900461ffff166102d9565b6101f3610417366004612897565b600c6020526000908152604090205481565b610231611119565b61021961043f366004612ee5565b600360209081526000928352604080842090915290825290205460ff1681565b61026461046d366004612f18565b611126565b610264610480366004612f7d565b6111ae565b60006301ffc9a760e01b6001600160e01b0319831614806104b65750636cdb3d1360e11b6001600160e01b03198316145b806104d157506303a24d0760e21b6001600160e01b03198316145b806104ec57506001600160e01b0319821663152a902d60e11b145b92915050565b600080546104ff90612fb0565b80601f016020809104026020016040519081016040528092919081815260200182805461052b90612fb0565b80156105785780601f1061054d57610100808354040283529160200191610578565b820191906000526020600020905b81548152906001019060200180831161055b57829003601f168201915b505050505081565b60008181526004602052604081208054606092919061059e90612fb0565b80601f01602080910402602001604051908101604052809291908181526020018280546105ca90612fb0565b80156106175780601f106105ec57610100808354040283529160200191610617565b820191906000526020600020905b8154815290600101906020018083116105fa57829003601f168201915b5050505050905060008151111561062e5792915050565b6000610639846112a9565b90508061064585611453565b604051602001610656929190612feb565b60405160208183030381529060405292505050919050565b610676611571565b6106b85760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6106c18161159e565b50565b60006106cf60095490565b821061070d5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016106af565b600982815481106107205761072061301a565b90600052602060002001549050919050565b600080600080610741866107fe565b90945084925061ffff16905061271061075a8287613046565b610764919061307b565b925050509250929050565b6001600160a01b0385163314806107a957506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6107ea5760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b60448201526064016106af565b6107f785858585856115fd565b5050505050565b6000818152600860209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610845578051602082015161085f565b6007546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b606081518351146108ae5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106af565b6000835167ffffffffffffffff8111156108ca576108ca6128ed565b6040519080825280602002602001820160405280156108f3578160200160208202803683370190505b50905060005b845181101561099857600260008683815181106109185761091861301a565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008583815181106109545761095461301a565b602002602001015181526020019081526020016000205482828151811061097d5761097d61301a565b60209081029190910101526109918161308f565b90506108f9565b509392505050565b6109a8611571565b6109e55760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016106af565b6109ef8282611814565b5050565b336001600160a01b038416811480610a3057506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b610a705760405162461bcd60e51b81526020600482015260116024820152702ab730b8383937bb32b21031b0b63632b960791b60448201526064016106af565b8151835114610ac15760405162461bcd60e51b815260206004820152600f60248201527f4c656e677468206d69736d61746368000000000000000000000000000000000060448201526064016106af565b60005b8351811015610b9757828181518110610adf57610adf61301a565b602002602001015160026000876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610b2057610b2061301a565b60200260200101518152602001908152602001600020541015610b855760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820746f6b656e73206f776e656400000000000000000060448201526064016106af565b610b906001826130aa565b9050610ac4565b50610ba38484846118c9565b50505050565b610bb1611571565b610bee5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016106af565b6106c181611ac3565b610bff611571565b610c4b5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e00000000000000000060448201526064016106af565b6000825111610c9c5760405162461bcd60e51b815260206004820152601460248201527f4d696e74696e67207a65726f20746f6b656e732e00000000000000000000000060448201526064016106af565b8151835114610ced5760405162461bcd60e51b815260206004820152601060248201527f4c656e677468206d69736d617463682e0000000000000000000000000000000060448201526064016106af565b6000610cf8600b5490565b9050806000805b8651811015610dcf57600019878281518110610d1d57610d1d61301a565b60200260200101511415610d685783878281518110610d3e57610d3e61301a565b6020908102919091010152610d546001856130aa565b9350610d616001836130aa565b9150610dbd565b83878281518110610d7b57610d7b61301a565b602002602001015110610dbd5760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b60448201526064016106af565b610dc86001826130aa565b9050610cff565b508015610de457610de1828286611ba5565b50505b82600b81905550610e0687878760405180602001604052806000815250611c12565b50505050505050565b600180546104ff90612fb0565b610e24611571565b610e615760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016106af565b610e6c838383611dae565b505050565b336001600160a01b038316811415610ebc5760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b60448201526064016106af565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191015b60405180910390a3505050565b60608167ffffffffffffffff811115610f4557610f456128ed565b604051908082528060200260200182016040528015610f7857816020015b6060815260200190600190039081610f635790505b50905060005b8281101561101857610fe830858584818110610f9c57610f9c61301a565b9050602002810190610fae91906130c2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611e7c92505050565b828281518110610ffa57610ffa61301a565b602002602001018190525080806110109061308f565b915050610f7e565b5092915050565b611027611571565b6110735760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e00000000000000000060448201526064016106af565b60008061107f600b5490565b90506000198514156110b6578091506001600b60008282546110a191906130aa565b909155506110b190508185611ea8565b6110f6565b8085106110f25760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b60448201526064016106af565b8491505b61111186838560405180602001604052806000815250611ec7565b505050505050565b600580546104ff90612fb0565b6001600160a01b03851633148061116057506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6111a15760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b60448201526064016106af565b6107f78585858585611fbf565b336001600160a01b0384168114806111eb57506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b61122b5760405162461bcd60e51b81526020600482015260116024820152702ab730b8383937bb32b21031b0b63632b960791b60448201526064016106af565b6001600160a01b038416600090815260026020908152604080832086845290915290205482111561129e5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820746f6b656e73206f776e656400000000000000000060448201526064016106af565b610ba3848484612127565b606060006112b660095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561130657602002820191906000526020600020905b8154815260200190600101908083116112f2575b5050505050905060005b8281101561140a5781818151811061132a5761132a61301a565b60200260200101518510156113f857600a600083838151811061134f5761134f61301a565b60200260200101518152602001908152602001600020805461137090612fb0565b80601f016020809104026020016040519081016040528092919081815260200182805461139c90612fb0565b80156113e95780601f106113be576101008083540402835291602001916113e9565b820191906000526020600020905b8154815290600101906020018083116113cc57829003601f168201915b50505050509350505050919050565b6114036001826130aa565b9050611310565b5060405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420746f6b656e4964000000000000000000000000000000000060448201526064016106af565b6060816114775750506040805180820190915260018152600360fc1b602082015290565b8160005b81156114a1578061148b8161308f565b915061149a9050600a8361307b565b915061147b565b60008167ffffffffffffffff8111156114bc576114bc6128ed565b6040519080825280601f01601f1916602001820160405280156114e6576020820181803683370190505b5090505b8415611569576114fb600183613110565b9150611508600a86613127565b6115139060306130aa565b60f81b8183815181106115285761152861301a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611562600a8661307b565b94506114ea565b949350505050565b60006115856006546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b81518351146116405760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106af565b6001600160a01b0384166116855760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b60448201526064016106af565b3361169481878787878761226f565b60005b84518110156117ae5760008582815181106116b4576116b461301a565b6020026020010151905060008583815181106116d2576116d261301a565b6020908102919091018101516001600160a01b038b1660009081526002835260408082208683529093529190912054909150818110156117475760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b60448201526064016106af565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d168352908152828220868352905290812080548492906117939084906130aa565b92505081905550505050806117a79061308f565b9050611697565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516117fe92919061313b565b60405180910390a461111181878787878761237b565b6127108111156118585760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016106af565b600780546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b0383166119105760405162461bcd60e51b815260206004820152600e60248201526d232927a6afad22a927afa0a2222960911b60448201526064016106af565b80518251146119535760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106af565b60003390506119768185600086866040518060200160405280600081525061226f565b60005b8351811015611a645760008482815181106119965761199661301a565b6020026020010151905060008483815181106119b4576119b461301a565b6020908102919091018101516001600160a01b0389166000908152600283526040808220868352909352919091205490915081811015611a295760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b60448201526064016106af565b6001600160a01b0388166000908152600260209081526040808320958352949052929092209103905580611a5c8161308f565b915050611979565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611ab592919061313b565b60405180910390a450505050565b600060058054611ad290612fb0565b80601f0160208091040260200160405190810160405280929190818152602001828054611afe90612fb0565b8015611b4b5780601f10611b2057610100808354040283529160200191611b4b565b820191906000526020600020905b815481529060010190602001808311611b2e57829003601f168201915b50508551939450611b679360059350602087019250905061271a565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611b99929190613169565b60405180910390a15050565b600080611bb284866130aa565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350611c0992909186019061271a565b50935093915050565b6001600160a01b038416611c575760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b60448201526064016106af565b8151835114611c9a5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106af565b33611caa8160008787878761226f565b60005b8451811015611d4657838181518110611cc857611cc861301a565b602002602001015160026000886001600160a01b03166001600160a01b031681526020019081526020016000206000878481518110611d0957611d0961301a565b602002602001015181526020019081526020016000206000828254611d2e91906130aa565b90915550819050611d3e8161308f565b915050611cad565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611d9792919061313b565b60405180910390a46107f78160008787878761237b565b612710811115611df25760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016106af565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600883528690209451855473ffffffffffffffffffffffffffffffffffffffff1916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d9101610f1d565b6060611ea1838360405180606001604052806027815260200161330f602791396124dc565b9392505050565b60008281526004602090815260409091208251610e6c9284019061271a565b6001600160a01b038416611f0c5760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b60448201526064016106af565b33611f2c81600087611f1d886125b9565b611f26886125b9565b8761226f565b6001600160a01b038516600090815260026020908152604080832087845290915281208054859290611f5f9084906130aa565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46107f781600087878787612604565b6001600160a01b0384166120045760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b60448201526064016106af565b33612014818787611f1d886125b9565b6001600160a01b03861660009081526002602090815260408083208784529091529020548381101561207b5760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b60448201526064016106af565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a168352908152828220888352905290812080548692906120c79084906130aa565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e06828888888888612604565b6001600160a01b03831661216e5760405162461bcd60e51b815260206004820152600e60248201526d232927a6afad22a927afa0a2222960911b60448201526064016106af565b3361219d8185600061217f876125b9565b612188876125b9565b6040518060200160405280600081525061226f565b6001600160a01b0384166000908152600260209081526040808320868452909152902054828110156122045760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b60448201526064016106af565b6001600160a01b03858116600081815260026020908152604080832089845282528083208887039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b0385166122f65760005b83518110156122f45782818151811061229b5761229b61301a565b6020026020010151600c60008684815181106122b9576122b961301a565b6020026020010151815260200190815260200160002060008282546122de91906130aa565b909155506122ed90508161308f565b9050612280565b505b6001600160a01b0384166111115760005b8351811015610e06578281815181106123225761232261301a565b6020026020010151600c60008684815181106123405761234061301a565b6020026020010151815260200190815260200160002060008282546123659190613110565b9091555061237490508161308f565b9050612307565b6001600160a01b0384163b156111115760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906123bf908990899088908890889060040161318e565b6020604051808303816000875af19250505080156123fa575060408051601f3d908101601f191682019092526123f7918101906131ec565b60015b61248a57612406613209565b806308c379a01415612440575061241b613225565b806124265750612442565b8060405162461bcd60e51b81526004016106af9190612884565b505b60405162461bcd60e51b815260206004820152601060248201527f214552433131353552454345495645520000000000000000000000000000000060448201526064016106af565b6001600160e01b0319811663bc197c8160e01b14610e065760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b60448201526064016106af565b60606001600160a01b0384163b6125445760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016106af565b600080856001600160a01b03168560405161255f91906132af565b600060405180830381855af49150503d806000811461259a576040519150601f19603f3d011682016040523d82523d6000602084013e61259f565b606091505b50915091506125af8282866126e1565b9695505050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106125f3576125f361301a565b602090810291909101015292915050565b6001600160a01b0384163b156111115760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061264890899089908890889088906004016132cb565b6020604051808303816000875af1925050508015612683575060408051601f3d908101601f19168201909252612680918101906131ec565b60015b61268f57612406613209565b6001600160e01b0319811663f23a6e6160e01b14610e065760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b60448201526064016106af565b606083156126f0575081611ea1565b8251156127005782518084602001fd5b8160405162461bcd60e51b81526004016106af9190612884565b82805461272690612fb0565b90600052602060002090601f016020900481019282612748576000855561278e565b82601f1061276157805160ff191683800117855561278e565b8280016001018555821561278e579182015b8281111561278e578251825591602001919060010190612773565b5061279a92915061279e565b5090565b5b8082111561279a576000815560010161279f565b80356001600160a01b03811681146127ca57600080fd5b919050565b600080604083850312156127e257600080fd5b6127eb836127b3565b946020939093013593505050565b6001600160e01b0319811681146106c157600080fd5b60006020828403121561282157600080fd5b8135611ea1816127f9565b60005b8381101561284757818101518382015260200161282f565b83811115610ba35750506000910152565b6000815180845261287081602086016020860161282c565b601f01601f19169290920160200192915050565b602081526000611ea16020830184612858565b6000602082840312156128a957600080fd5b5035919050565b6000602082840312156128c257600080fd5b611ea1826127b3565b600080604083850312156128de57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612929576129296128ed565b6040525050565b600067ffffffffffffffff82111561294a5761294a6128ed565b5060051b60200190565b600082601f83011261296557600080fd5b8135602061297282612930565b60405161297f8282612903565b83815260059390931b850182019282810191508684111561299f57600080fd5b8286015b848110156129ba57803583529183019183016129a3565b509695505050505050565b600082601f8301126129d657600080fd5b813567ffffffffffffffff8111156129f0576129f06128ed565b604051612a07601f8301601f191660200182612903565b818152846020838601011115612a1c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215612a5157600080fd5b612a5a866127b3565b9450612a68602087016127b3565b9350604086013567ffffffffffffffff80821115612a8557600080fd5b612a9189838a01612954565b94506060880135915080821115612aa757600080fd5b612ab389838a01612954565b93506080880135915080821115612ac957600080fd5b50612ad6888289016129c5565b9150509295509295909350565b60008060408385031215612af657600080fd5b823567ffffffffffffffff80821115612b0e57600080fd5b818501915085601f830112612b2257600080fd5b81356020612b2f82612930565b604051612b3c8282612903565b83815260059390931b8501820192828101915089841115612b5c57600080fd5b948201945b83861015612b8157612b72866127b3565b82529482019490820190612b61565b96505086013592505080821115612b9757600080fd5b50612ba485828601612954565b9150509250929050565b600081518084526020808501945080840160005b83811015612bde57815187529582019590820190600101612bc2565b509495945050505050565b602081526000611ea16020830184612bae565b600080600060608486031215612c1157600080fd5b612c1a846127b3565b9250602084013567ffffffffffffffff80821115612c3757600080fd5b612c4387838801612954565b93506040860135915080821115612c5957600080fd5b50612c6686828701612954565b9150509250925092565b600060208284031215612c8257600080fd5b813567ffffffffffffffff811115612c9957600080fd5b611569848285016129c5565b60008060008060808587031215612cbb57600080fd5b612cc4856127b3565b9350602085013567ffffffffffffffff80821115612ce157600080fd5b612ced88838901612954565b94506040870135915080821115612d0357600080fd5b612d0f88838901612954565b93506060870135915080821115612d2557600080fd5b50612d32878288016129c5565b91505092959194509250565b600080600060608486031215612d5357600080fd5b83359250612d63602085016127b3565b9150604084013590509250925092565b60008060408385031215612d8657600080fd5b612d8f836127b3565b915060208301358015158114612da457600080fd5b809150509250929050565b60008060208385031215612dc257600080fd5b823567ffffffffffffffff80821115612dda57600080fd5b818501915085601f830112612dee57600080fd5b813581811115612dfd57600080fd5b8660208260051b8501011115612e1257600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612e7957603f19888603018452612e67858351612858565b94509285019290850190600101612e4b565b5092979650505050505050565b60008060008060808587031215612e9c57600080fd5b612ea5856127b3565b935060208501359250604085013567ffffffffffffffff811115612ec857600080fd5b612ed4878288016129c5565b949793965093946060013593505050565b60008060408385031215612ef857600080fd5b612f01836127b3565b9150612f0f602084016127b3565b90509250929050565b600080600080600060a08688031215612f3057600080fd5b612f39866127b3565b9450612f47602087016127b3565b93506040860135925060608601359150608086013567ffffffffffffffff811115612f7157600080fd5b612ad6888289016129c5565b600080600060608486031215612f9257600080fd5b612f9b846127b3565b95602085013595506040909401359392505050565b600181811c90821680612fc457607f821691505b60208210811415612fe557634e487b7160e01b600052602260045260246000fd5b50919050565b60008351612ffd81846020880161282c565b83519083019061301181836020880161282c565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561306057613060613030565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261308a5761308a613065565b500490565b60006000198214156130a3576130a3613030565b5060010190565b600082198211156130bd576130bd613030565b500190565b6000808335601e198436030181126130d957600080fd5b83018035915067ffffffffffffffff8211156130f457600080fd5b60200191503681900382131561310957600080fd5b9250929050565b60008282101561312257613122613030565b500390565b60008261313657613136613065565b500690565b60408152600061314e6040830185612bae565b82810360208401526131608185612bae565b95945050505050565b60408152600061317c6040830185612858565b82810360208401526131608185612858565b60006001600160a01b03808816835280871660208401525060a060408301526131ba60a0830186612bae565b82810360608401526131cc8186612bae565b905082810360808401526131e08185612858565b98975050505050505050565b6000602082840312156131fe57600080fd5b8151611ea1816127f9565b600060033d11156132225760046000803e5060005160e01c5b90565b600060443d10156132335790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561326357505050505090565b828501915081518181111561327b5750505050505090565b843d87010160208285010111156132955750505050505090565b6132a460208286010187612903565b509095945050505050565b600082516132c181846020870161282c565b9190910192915050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261330360a0830184612858565b97965050505050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e202a6401daf0767a287f0dee3d2478621a0869c0f85f2e2d6a51398697f3e7764736f6c634300080c0033";

const isSuperArgs$H = xs => xs.length > 1;

class ERC1155Base__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$H(args)) {
      super(...args);
    } else {
      super(_abi$1X, _bytecode$H, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1X);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1X, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC1155Base__factory, "bytecode", _bytecode$H);

defineProperty._defineProperty(ERC1155Base__factory, "abi", _abi$1X);

const _abi$1W = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  name: "TokenURIRevealed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "_value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "_tokenIds",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "_amounts",
    type: "uint256[]"
  }],
  name: "burnBatch",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "encryptDecrypt",
  outputs: [{
    internalType: "bytes",
    name: "result",
    type: "bytes"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "encryptedData",
  outputs: [{
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "getRevealURI",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }],
  name: "isEncryptedBatch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [{
    internalType: "uint256",
    name: "batchId",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "reveal",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$G = "0x60806040523480156200001157600080fd5b5060405162003d3238038062003d3283398101604081905262000034916200030f565b8383838383838160009080519060200190620000529291906200019c565b508051620000689060019060208401906200019c565b5050506200007c336200009f60201b60201c565b62000091826001600160801b038316620000f1565b5050505050505050620003f8565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156200013a5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b828054620001aa90620003bb565b90600052602060002090601f016020900481019282620001ce576000855562000219565b82601f10620001e957805160ff191683800117855562000219565b8280016001018555821562000219579182015b8281111562000219578251825591602001919060010190620001fc565b50620002279291506200022b565b5090565b5b808211156200022757600081556001016200022c565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026a57600080fd5b81516001600160401b038082111562000287576200028762000242565b604051601f8301601f19908116603f01168101908282118183101715620002b257620002b262000242565b81604052838152602092508683858801011115620002cf57600080fd5b600091505b83821015620002f35785820183015181830184015290820190620002d4565b83821115620003055760008385830101525b9695505050505050565b600080600080608085870312156200032657600080fd5b84516001600160401b03808211156200033e57600080fd5b6200034c8883890162000258565b955060208701519150808211156200036357600080fd5b50620003728782880162000258565b604087015190945090506001600160a01b03811681146200039257600080fd5b60608601519092506001600160801b0381168114620003b057600080fd5b939692955090935050565b600181811c90821680620003d057607f821691505b60208210811415620003f257634e487b7160e01b600052602260045260246000fd5b50919050565b61392a80620004086000396000f3fe6080604052600436106101f85760003560e01c80638da5cb5b1161010d578063b24f2d39116100a0578063e71503221161006f578063e715032214610629578063e8a3d48514610649578063e985e9c51461065e578063f242432a14610699578063f5298aca146106b957600080fd5b8063b24f2d3914610591578063bd85b039146105bc578063ce805642146105e9578063d37c353b1461060957600080fd5b80639fc4d68f116100dc5780639fc4d68f14610504578063a05112fc14610524578063a22cb46514610544578063ac9650d81461056457600080fd5b80638da5cb5b14610487578063938e3d7b146104af57806395d89b41146104cf5780639bcf7a15146104e457600080fd5b80632eb2c2d6116101905780634cc157df1161015f5780634cc157df146103c35780634e1273f414610405578063600dd5ea1461043257806363b45e2d146104525780636b20c4541461046757600080fd5b80632eb2c2d61461034e5780633b1475a71461036e578063492e224b146103835780634bbb1abf146103a357600080fd5b806313af4035116101cc57806313af4035146102ba5780632419f51b146102dc5780632a55205a146102fc5780632bc43fd91461033b57600080fd5b8062fdd58e146101fd57806301ffc9a71461024857806306fdde03146102785780630e89341c1461029a575b600080fd5b34801561020957600080fd5b50610235610218366004612b6d565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561025457600080fd5b50610268610263366004612bad565b6106d9565b604051901515815260200161023f565b34801561028457600080fd5b5061028d610746565b60405161023f9190612c22565b3480156102a657600080fd5b5061028d6102b5366004612c35565b6107d4565b3480156102c657600080fd5b506102da6102d5366004612c4e565b610843565b005b3480156102e857600080fd5b506102356102f7366004612c35565b610899565b34801561030857600080fd5b5061031c610317366004612c69565b610907565b604080516001600160a01b03909316835260208301919091520161023f565b6102da610349366004612c8b565b610944565b34801561035a57600080fd5b506102da610369366004612e24565b6109f0565b34801561037a57600080fd5b50600b54610235565b34801561038f57600080fd5b5061026861039e366004612c35565b610a7f565b3480156103af57600080fd5b506102da6103be366004612c8b565b505050565b3480156103cf57600080fd5b506103e36103de366004612c35565b610aa5565b604080516001600160a01b03909316835261ffff90911660208301520161023f565b34801561041157600080fd5b50610425610420366004612ece565b610b10565b60405161023f9190612fd4565b34801561043e57600080fd5b506102da61044d366004612b6d565b610c47565b34801561045e57600080fd5b50600954610235565b34801561047357600080fd5b506102da610482366004612fe7565b610c9a565b34801561049357600080fd5b506006546040516001600160a01b03909116815260200161023f565b3480156104bb57600080fd5b506102da6104ca36600461305b565b610e50565b3480156104db57600080fd5b5061028d610e9e565b3480156104f057600080fd5b506102da6104ff3660046130a4565b610eab565b34801561051057600080fd5b5061028d61051f366004613122565b610efb565b34801561053057600080fd5b5061028d61053f366004612c35565b611088565b34801561055057600080fd5b506102da61055f36600461316e565b6110a1565b34801561057057600080fd5b5061058461057f3660046131aa565b61115a565b60405161023f919061321f565b34801561059d57600080fd5b506007546001600160a01b03811690600160a01b900461ffff166103e3565b3480156105c857600080fd5b506102356105d7366004612c35565b600c6020526000908152604090205481565b3480156105f557600080fd5b5061028d610604366004613122565b61124f565b34801561061557600080fd5b50610235610624366004613281565b611313565b34801561063557600080fd5b5061028d6106443660046132fb565b6113ab565b34801561065557600080fd5b5061028d611420565b34801561066a57600080fd5b50610268610679366004613357565b600360209081526000928352604080842090915290825290205460ff1681565b3480156106a557600080fd5b506102da6106b436600461338a565b61142d565b3480156106c557600080fd5b506102da6106d4366004612c8b565b6114b5565b60006301ffc9a760e01b6001600160e01b03198316148061070a5750636cdb3d1360e11b6001600160e01b03198316145b8061072557506303a24d0760e21b6001600160e01b03198316145b8061074057506001600160e01b0319821663152a902d60e11b145b92915050565b60008054610753906133ef565b80601f016020809104026020016040519081016040528092919081815260200182805461077f906133ef565b80156107cc5780601f106107a1576101008083540402835291602001916107cc565b820191906000526020600020905b8154815290600101906020018083116107af57829003601f168201915b505050505081565b606060006107e1836115b0565b50905060006107ef846116c3565b90506107fa82610a7f565b156108285780604051602001610810919061342a565b60405160208183030381529060405292505050919050565b8061083285611824565b60405160200161081092919061344f565b61084b611942565b61088d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6108968161196f565b50565b60006108a460095490565b82106108e25760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610884565b600982815481106108f5576108f561347e565b90600052602060002001549050919050565b60008060008061091686610aa5565b90945084925061ffff16905061271061092f82876134aa565b61093991906134df565b925050509250929050565b600b5482106109825760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b6044820152606401610884565b61099d838383604051806020016040528060008152506119ce565b81836001600160a01b0316336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de6846040516109e391815260200190565b60405180910390a4505050565b6001600160a01b038516331480610a2a57506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b610a6b5760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b6044820152606401610884565b610a788585858585611ac6565b5050505050565b6000818152600d602052604081208054829190610a9b906133ef565b9050119050919050565b6000818152600860209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610aec5780516020820151610b06565b6007546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60608151835114610b555760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610884565b6000835167ffffffffffffffff811115610b7157610b71612cbe565b604051908082528060200260200182016040528015610b9a578160200160208202803683370190505b50905060005b8451811015610c3f5760026000868381518110610bbf57610bbf61347e565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610bfb57610bfb61347e565b6020026020010151815260200190815260200160002054828281518110610c2457610c2461347e565b6020908102919091010152610c38816134f3565b9050610ba0565b509392505050565b610c4f611942565b610c8c5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610884565b610c968282611ce5565b5050565b336001600160a01b038416811480610cd757506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b610d175760405162461bcd60e51b81526020600482015260116024820152702ab730b8383937bb32b21031b0b63632b960791b6044820152606401610884565b8151835114610d685760405162461bcd60e51b815260206004820152600f60248201527f4c656e677468206d69736d6174636800000000000000000000000000000000006044820152606401610884565b60005b8351811015610e3e57828181518110610d8657610d8661347e565b602002602001015160026000876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610dc757610dc761347e565b60200260200101518152602001908152602001600020541015610e2c5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820746f6b656e73206f776e65640000000000000000006044820152606401610884565b610e3760018261350e565b9050610d6b565b50610e4a848484611d9a565b50505050565b610e58611942565b610e955760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610884565b61089681611f94565b60018054610753906133ef565b610eb3611942565b610ef05760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610884565b6103be838383612076565b6000838152600d6020526040812080546060929190610f19906133ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610f45906133ef565b8015610f925780601f10610f6757610100808354040283529160200191610f92565b820191906000526020600020905b815481529060010190602001808311610f7557829003601f168201915b50505050509050805160001415610feb5760405162461bcd60e51b815260206004820152601160248201527f4e6f7468696e6720746f2072657665616c0000000000000000000000000000006044820152606401610884565b600080828060200190518101906110029190613526565b915091506110118287876113ab565b9350808487874660405160200161102b94939291906135b2565b604051602081830303815290604052805190602001201461107e5760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610884565b5050509392505050565b600d6020526000908152604090208054610753906133ef565b336001600160a01b0383168114156110ec5760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b6044820152606401610884565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191015b60405180910390a3505050565b60608167ffffffffffffffff81111561117557611175612cbe565b6040519080825280602002602001820160405280156111a857816020015b60608152602001906001900390816111935790505b50905060005b8281101561124857611218308585848181106111cc576111cc61347e565b90506020028101906111de91906135db565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061214492505050565b82828151811061122a5761122a61347e565b60200260200101819052508080611240906134f3565b9150506111ae565b5092915050565b6060611259611942565b6112965760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610884565b60006112a185610899565b90506112ae818585610efb565b91506112c98160405180602001604052806000815250612170565b6112d3818361218f565b847f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d836040516113039190612c22565b60405180910390a2509392505050565b600081156113945760008061132a84860186613622565b91509150815160001415801561133f57508015155b156113915761139188600b54611355919061350e565b86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061217092505050565b50505b6113a186868686866121ae565b9695505050505050565b8251604080518083016020019091528181529060005b818110156114175760008585836040516020016113e093929190613667565b60408051601f1981840301815291905280516020918201208884018201511885840182015261141091508261350e565b90506113c1565b50509392505050565b60058054610753906133ef565b6001600160a01b03851633148061146757506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6114a85760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b6044820152606401610884565b610a7885858585856122f1565b336001600160a01b0384168114806114f257506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b6115325760405162461bcd60e51b81526020600482015260116024820152702ab730b8383937bb32b21031b0b63632b960791b6044820152606401610884565b6001600160a01b03841660009081526002602090815260408083208684529091529020548211156115a55760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820746f6b656e73206f776e65640000000000000000006044820152606401610884565b610e4a848484612462565b60008060006115be60095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561160e57602002820191906000526020600020905b8154815260200190600101908083116115fa575b5050505050905060005b8281101561167a578181815181106116325761163261347e565b6020026020010151861015611668578093508181815181106116565761165661347e565b60200260200101519450505050915091565b61167360018261350e565b9050611618565b5060405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420746f6b656e496400000000000000000000000000000000006044820152606401610884565b606060006116d060095490565b90506000600980548060200260200160405190810160405280929190818152602001828054801561172057602002820191906000526020600020905b81548152602001906001019080831161170c575b5050505050905060005b8281101561167a578181815181106117445761174461347e565b602002602001015185101561181257600a60008383815181106117695761176961347e565b60200260200101518152602001908152602001600020805461178a906133ef565b80601f01602080910402602001604051908101604052809291908181526020018280546117b6906133ef565b80156118035780601f106117d857610100808354040283529160200191611803565b820191906000526020600020905b8154815290600101906020018083116117e657829003601f168201915b50505050509350505050919050565b61181d60018261350e565b905061172a565b6060816118485750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611872578061185c816134f3565b915061186b9050600a836134df565b915061184c565b60008167ffffffffffffffff81111561188d5761188d612cbe565b6040519080825280601f01601f1916602001820160405280156118b7576020820181803683370190505b5090505b841561193a576118cc600183613679565b91506118d9600a86613690565b6118e490603061350e565b60f81b8183815181106118f9576118f961347e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611933600a866134df565b94506118bb565b949350505050565b60006119566006546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6001600160a01b038416611a135760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b6044820152606401610884565b33611a3381600087611a24886125aa565b611a2d886125aa565b876125f5565b6001600160a01b038516600090815260026020908152604080832087845290915281208054859290611a6690849061350e565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a7881600087878787612701565b8151835114611b095760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610884565b6001600160a01b038416611b4e5760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b6044820152606401610884565b33611b5d8187878787876125f5565b60005b8451811015611c77576000858281518110611b7d57611b7d61347e565b602002602001015190506000858381518110611b9b57611b9b61347e565b6020908102919091018101516001600160a01b038b166000908152600283526040808220868352909352919091205490915081811015611c105760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b6044820152606401610884565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d16835290815282822086835290529081208054849290611c5c90849061350e565b9250508190555050505080611c70906134f3565b9050611b60565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611cc79291906136a4565b60405180910390a4611cdd818787878787612862565b505050505050565b612710811115611d295760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610884565b600780546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b038316611de15760405162461bcd60e51b815260206004820152600e60248201526d232927a6afad22a927afa0a2222960911b6044820152606401610884565b8051825114611e245760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610884565b6000339050611e47818560008686604051806020016040528060008152506125f5565b60005b8351811015611f35576000848281518110611e6757611e6761347e565b602002602001015190506000848381518110611e8557611e8561347e565b6020908102919091018101516001600160a01b0389166000908152600283526040808220868352909352919091205490915081811015611efa5760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b6044820152606401610884565b6001600160a01b0388166000908152600260209081526040808320958352949052929092209103905580611f2d816134f3565b915050611e4a565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611f869291906136a4565b60405180910390a450505050565b600060058054611fa3906133ef565b80601f0160208091040260200160405190810160405280929190818152602001828054611fcf906133ef565b801561201c5780601f10611ff15761010080835404028352916020019161201c565b820191906000526020600020905b815481529060010190602001808311611fff57829003601f168201915b5050855193945061203893600593506020870192509050612ab8565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161206a9291906136d2565b60405180910390a15050565b6127108111156120ba5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610884565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600883528690209451855473ffffffffffffffffffffffffffffffffffffffff1916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910161114d565b606061216983836040518060600160405280602781526020016138ce6027913961293f565b9392505050565b6000828152600d6020908152604090912082516103be92840190612ab8565b6000828152600a6020908152604090912082516103be92840190612ab8565b60006121b8611942565b6121f55760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610884565b856122425760405162461bcd60e51b815260206004820152601060248201527f4d696e74696e67203020746f6b656e73000000000000000000000000000000006044820152606401610884565b6000600b54905061228a818888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612a1292505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d60016122c08a8461350e565b6122ca9190613679565b888888886040516122df959493929190613720565b60405180910390a25095945050505050565b6001600160a01b0384166123365760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b6044820152606401610884565b33612346818787611a24886125aa565b6001600160a01b0386166000908152600260209081526040808320878452909152902054838110156123ad5760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b6044820152606401610884565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a168352908152828220888352905290812080548692906123f990849061350e565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612459828888888888612701565b50505050505050565b6001600160a01b0383166124a95760405162461bcd60e51b815260206004820152600e60248201526d232927a6afad22a927afa0a2222960911b6044820152606401610884565b336124d8818560006124ba876125aa565b6124c3876125aa565b604051806020016040528060008152506125f5565b6001600160a01b03841660009081526002602090815260408083208684529091529020548281101561253f5760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b6044820152606401610884565b6001600160a01b03858116600081815260026020908152604080832089845282528083208887039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106125e4576125e461347e565b602090810291909101015292915050565b6001600160a01b03851661267c5760005b835181101561267a578281815181106126215761262161347e565b6020026020010151600c600086848151811061263f5761263f61347e565b602002602001015181526020019081526020016000206000828254612664919061350e565b909155506126739050816134f3565b9050612606565b505b6001600160a01b038416611cdd5760005b8351811015612459578281815181106126a8576126a861347e565b6020026020010151600c60008684815181106126c6576126c661347e565b6020026020010151815260200190815260200160002060008282546126eb9190613679565b909155506126fa9050816134f3565b905061268d565b6001600160a01b0384163b15611cdd5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906127459089908990889088908890600401613759565b6020604051808303816000875af1925050508015612780575060408051601f3d908101601f1916820190925261277d9181019061379c565b60015b6128105761278c6137b9565b806308c379a014156127c657506127a16137d5565b806127ac57506127c8565b8060405162461bcd60e51b81526004016108849190612c22565b505b60405162461bcd60e51b815260206004820152601060248201527f21455243313135355245434549564552000000000000000000000000000000006044820152606401610884565b6001600160e01b0319811663f23a6e6160e01b146124595760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b6044820152606401610884565b6001600160a01b0384163b15611cdd5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906128a6908990899088908890889060040161385f565b6020604051808303816000875af19250505080156128e1575060408051601f3d908101601f191682019092526128de9181019061379c565b60015b6128ed5761278c6137b9565b6001600160e01b0319811663bc197c8160e01b146124595760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b6044820152606401610884565b60606001600160a01b0384163b6129a75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610884565b600080856001600160a01b0316856040516129c291906138b1565b600060405180830381855af49150503d80600081146129fd576040519150601f19603f3d011682016040523d82523d6000602084013e612a02565b606091505b50915091506113a1828286612a7f565b600080612a1f848661350e565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350612a76929091860190612ab8565b50935093915050565b60608315612a8e575081612169565b825115612a9e5782518084602001fd5b8160405162461bcd60e51b81526004016108849190612c22565b828054612ac4906133ef565b90600052602060002090601f016020900481019282612ae65760008555612b2c565b82601f10612aff57805160ff1916838001178555612b2c565b82800160010185558215612b2c579182015b82811115612b2c578251825591602001919060010190612b11565b50612b38929150612b3c565b5090565b5b80821115612b385760008155600101612b3d565b80356001600160a01b0381168114612b6857600080fd5b919050565b60008060408385031215612b8057600080fd5b612b8983612b51565b946020939093013593505050565b6001600160e01b03198116811461089657600080fd5b600060208284031215612bbf57600080fd5b813561216981612b97565b60005b83811015612be5578181015183820152602001612bcd565b83811115610e4a5750506000910152565b60008151808452612c0e816020860160208601612bca565b601f01601f19169290920160200192915050565b6020815260006121696020830184612bf6565b600060208284031215612c4757600080fd5b5035919050565b600060208284031215612c6057600080fd5b61216982612b51565b60008060408385031215612c7c57600080fd5b50508035926020909101359150565b600080600060608486031215612ca057600080fd5b612ca984612b51565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612cfa57612cfa612cbe565b6040525050565b600067ffffffffffffffff821115612d1b57612d1b612cbe565b5060051b60200190565b600082601f830112612d3657600080fd5b81356020612d4382612d01565b604051612d508282612cd4565b83815260059390931b8501820192828101915086841115612d7057600080fd5b8286015b84811015612d8b5780358352918301918301612d74565b509695505050505050565b600067ffffffffffffffff821115612db057612db0612cbe565b50601f01601f191660200190565b6000612dc983612d96565b604051612dd68282612cd4565b809250848152858585011115612deb57600080fd5b8484602083013760006020868301015250509392505050565b600082601f830112612e1557600080fd5b61216983833560208501612dbe565b600080600080600060a08688031215612e3c57600080fd5b612e4586612b51565b9450612e5360208701612b51565b9350604086013567ffffffffffffffff80821115612e7057600080fd5b612e7c89838a01612d25565b94506060880135915080821115612e9257600080fd5b612e9e89838a01612d25565b93506080880135915080821115612eb457600080fd5b50612ec188828901612e04565b9150509295509295909350565b60008060408385031215612ee157600080fd5b823567ffffffffffffffff80821115612ef957600080fd5b818501915085601f830112612f0d57600080fd5b81356020612f1a82612d01565b604051612f278282612cd4565b83815260059390931b8501820192828101915089841115612f4757600080fd5b948201945b83861015612f6c57612f5d86612b51565b82529482019490820190612f4c565b96505086013592505080821115612f8257600080fd5b50612f8f85828601612d25565b9150509250929050565b600081518084526020808501945080840160005b83811015612fc957815187529582019590820190600101612fad565b509495945050505050565b6020815260006121696020830184612f99565b600080600060608486031215612ffc57600080fd5b61300584612b51565b9250602084013567ffffffffffffffff8082111561302257600080fd5b61302e87838801612d25565b9350604086013591508082111561304457600080fd5b5061305186828701612d25565b9150509250925092565b60006020828403121561306d57600080fd5b813567ffffffffffffffff81111561308457600080fd5b8201601f8101841361309557600080fd5b61193a84823560208401612dbe565b6000806000606084860312156130b957600080fd5b833592506130c960208501612b51565b9150604084013590509250925092565b60008083601f8401126130eb57600080fd5b50813567ffffffffffffffff81111561310357600080fd5b60208301915083602082850101111561311b57600080fd5b9250929050565b60008060006040848603121561313757600080fd5b83359250602084013567ffffffffffffffff81111561315557600080fd5b613161868287016130d9565b9497909650939450505050565b6000806040838503121561318157600080fd5b61318a83612b51565b91506020830135801515811461319f57600080fd5b809150509250929050565b600080602083850312156131bd57600080fd5b823567ffffffffffffffff808211156131d557600080fd5b818501915085601f8301126131e957600080fd5b8135818111156131f857600080fd5b8660208260051b850101111561320d57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561327457603f19888603018452613262858351612bf6565b94509285019290850190600101613246565b5092979650505050505050565b60008060008060006060868803121561329957600080fd5b85359450602086013567ffffffffffffffff808211156132b857600080fd5b6132c489838a016130d9565b909650945060408801359150808211156132dd57600080fd5b506132ea888289016130d9565b969995985093965092949392505050565b60008060006040848603121561331057600080fd5b833567ffffffffffffffff8082111561332857600080fd5b61333487838801612e04565b9450602086013591508082111561334a57600080fd5b50613161868287016130d9565b6000806040838503121561336a57600080fd5b61337383612b51565b915061338160208401612b51565b90509250929050565b600080600080600060a086880312156133a257600080fd5b6133ab86612b51565b94506133b960208701612b51565b93506040860135925060608601359150608086013567ffffffffffffffff8111156133e357600080fd5b612ec188828901612e04565b600181811c9082168061340357607f821691505b6020821081141561342457634e487b7160e01b600052602260045260246000fd5b50919050565b6000825161343c818460208701612bca565b600360fc1b920191825250600101919050565b60008351613461818460208801612bca565b835190830190613475818360208801612bca565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156134c4576134c4613494565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826134ee576134ee6134c9565b500490565b600060001982141561350757613507613494565b5060010190565b6000821982111561352157613521613494565b500190565b6000806040838503121561353957600080fd5b825167ffffffffffffffff81111561355057600080fd5b8301601f8101851361356157600080fd5b805161356c81612d96565b6040516135798282612cd4565b82815287602084860101111561358e57600080fd5b61359f836020830160208701612bca565b6020969096015195979596505050505050565b600085516135c4818460208a01612bca565b820184868237909301918252506020019392505050565b6000808335601e198436030181126135f257600080fd5b83018035915067ffffffffffffffff82111561360d57600080fd5b60200191503681900382131561311b57600080fd5b6000806040838503121561363557600080fd5b823567ffffffffffffffff81111561364c57600080fd5b61365885828601612e04565b95602094909401359450505050565b82848237909101908152602001919050565b60008282101561368b5761368b613494565b500390565b60008261369f5761369f6134c9565b500690565b6040815260006136b76040830185612f99565b82810360208401526136c98185612f99565b95945050505050565b6040815260006136e56040830185612bf6565b82810360208401526136c98185612bf6565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b85815260606020820152600061373a6060830186886136f7565b828103604084015261374d8185876136f7565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261379160a0830184612bf6565b979650505050505050565b6000602082840312156137ae57600080fd5b815161216981612b97565b600060033d11156137d25760046000803e5060005160e01c5b90565b600060443d10156137e35790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561381357505050505090565b828501915081518181111561382b5750505050505090565b843d87010160208285010111156138455750505050505090565b61385460208286010187612cd4565b509095945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261388b60a0830186612f99565b828103606084015261389d8186612f99565b9050828103608084015261374d8185612bf6565b600082516138c3818460208701612bca565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122092f408f021ceab37c2a78c7297af844870e68c7472090f4b8c081cbc2dd1874a64736f6c634300080c0033";

const isSuperArgs$G = xs => xs.length > 1;

class ERC1155DelayedReveal__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$G(args)) {
      super(...args);
    } else {
      super(_abi$1W, _bytecode$G, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1W);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1W, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC1155DelayedReveal__factory, "bytecode", _bytecode$G);

defineProperty._defineProperty(ERC1155DelayedReveal__factory, "abi", _abi$1W);

const _abi$1V = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  name: "TokenURIRevealed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "_value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase1155.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "startTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "maxClaimableSupply",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "supplyClaimed",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "quantityLimitPerTransaction",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "waitTimeInSecondsBetweenClaims",
    type: "uint256"
  }, {
    internalType: "bytes32",
    name: "merkleRoot",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "encryptDecrypt",
  outputs: [{
    internalType: "bytes",
    name: "result",
    type: "bytes"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "encryptedData",
  outputs: [{
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimedAt",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "getRevealURI",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }],
  name: "isEncryptedBatch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [{
    internalType: "uint256",
    name: "batchId",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "reveal",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "_condition",
    type: "tuple"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase1155.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$F = "0x60806040523480156200001157600080fd5b5060405162004a1938038062004a19833981016040819052620000349162000379565b8451859085906200004d906000906020850190620001e9565b50805162000063906001906020840190620001e9565b5050506200007733620000a260201b60201c565b6200008c836001600160801b038416620000f4565b62000097816200019f565b505050505062000466565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156200013d5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b828054620001f79062000429565b90600052602060002090601f0160209004810192826200021b576000855562000266565b82601f106200023657805160ff191683800117855562000266565b8280016001018555821562000266579182015b828111156200026657825182559160200191906001019062000249565b506200027492915062000278565b5090565b5b8082111562000274576000815560010162000279565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002b757600080fd5b81516001600160401b0380821115620002d457620002d46200028f565b604051601f8301601f19908116603f01168101908282118183101715620002ff57620002ff6200028f565b816040528381526020925086838588010111156200031c57600080fd5b600091505b8382101562000340578582018301518183018401529082019062000321565b83821115620003525760008385830101525b9695505050505050565b80516001600160a01b03811681146200037457600080fd5b919050565b600080600080600060a086880312156200039257600080fd5b85516001600160401b0380821115620003aa57600080fd5b620003b889838a01620002a5565b96506020880151915080821115620003cf57600080fd5b50620003de88828901620002a5565b945050620003ef604087016200035c565b60608701519093506001600160801b03811681146200040d57600080fd5b91506200041d608087016200035c565b90509295509295909350565b600181811c908216806200043e57607f821691505b602082108114156200046057634e487b7160e01b600052602260045260246000fd5b50919050565b6145a380620004766000396000f3fe6080604052600436106102245760003560e01c806386ee745d11610123578063afb82916116100ab578063e71503221161006f578063e715032214610709578063e8a3d48514610729578063e9703d251461073e578063e985e9c5146107e9578063f242432a1461082457600080fd5b8063afb8291614610651578063b24f2d3914610671578063bd85b0391461069c578063ce805642146106c9578063d37c353b146106e957600080fd5b80639bcf7a15116100f25780639bcf7a15146105a45780639fc4d68f146105c4578063a05112fc146105e4578063a22cb46514610604578063ac9650d81461062457600080fd5b806386ee745d1461051c5780638da5cb5b14610551578063938e3d7b1461056f57806395d89b411461058f57600080fd5b80632eb2c2d6116101b15780634e1273f4116101755780634e1273f414610463578063600dd5ea1461049057806363b45e2d146104b05780636f4f2837146104c55780637cb351f6146104e557600080fd5b80632eb2c2d6146103ac57806332df1279146103cc5780633b1475a7146103ec578063492e224b146104015780634cc157df1461042157600080fd5b80630e89341c116101f85780630e89341c146102f857806313af4035146103185780632419f51b1461033a57806327db5f081461035a5780632a55205a1461036d57600080fd5b8062fdd58e1461022957806301ffc9a71461027457806306fdde03146102a4578063079fe40e146102c6575b600080fd5b34801561023557600080fd5b506102616102443660046135d3565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561028057600080fd5b5061029461028f366004613613565b610844565b604051901515815260200161026b565b3480156102b057600080fd5b506102b96108b1565b60405161026b9190613688565b3480156102d257600080fd5b50600b546001600160a01b03165b6040516001600160a01b03909116815260200161026b565b34801561030457600080fd5b506102b961031336600461369b565b61093f565b34801561032457600080fd5b506103386103333660046136b4565b6109ae565b005b34801561034657600080fd5b5061026161035536600461369b565b610a04565b6103386103683660046137b8565b610a72565b34801561037957600080fd5b5061038d61038836600461385a565b610c84565b604080516001600160a01b03909316835260208301919091520161026b565b3480156103b857600080fd5b506103386103c7366004613911565b610cc1565b3480156103d857600080fd5b506103386103e73660046139c9565b610d50565b3480156103f857600080fd5b50600c54610261565b34801561040d57600080fd5b5061029461041c36600461369b565b610fde565b34801561042d57600080fd5b5061044161043c36600461369b565b611004565b604080516001600160a01b03909316835261ffff90911660208301520161026b565b34801561046f57600080fd5b5061048361047e366004613a18565b61106f565b60405161026b9190613b1e565b34801561049c57600080fd5b506103386104ab3660046135d3565b6111a6565b3480156104bc57600080fd5b50600954610261565b3480156104d157600080fd5b506103386104e03660046136b4565b6111f9565b3480156104f157600080fd5b50610505610500366004613b31565b611247565b60408051921515835260208301919091520161026b565b34801561052857600080fd5b5061053c610537366004613b92565b611478565b6040805192835260208301919091520161026b565b34801561055d57600080fd5b506006546001600160a01b03166102e0565b34801561057b57600080fd5b5061033861058a366004613bbe565b6114ca565b34801561059b57600080fd5b506102b9611518565b3480156105b057600080fd5b506103386105bf366004613c07565b611525565b3480156105d057600080fd5b506102b96105df366004613c7e565b61157a565b3480156105f057600080fd5b506102b96105ff36600461369b565b611707565b34801561061057600080fd5b5061033861061f366004613cca565b611720565b34801561063057600080fd5b5061064461063f366004613d01565b6117d9565b60405161026b9190613d76565b34801561065d57600080fd5b5061033861066c366004613dd8565b6118ce565b34801561067d57600080fd5b506007546001600160a01b03811690600160a01b900461ffff16610441565b3480156106a857600080fd5b506102616106b736600461369b565b60126020526000908152604090205481565b3480156106d557600080fd5b506102b96106e4366004613c7e565b611ae3565b3480156106f557600080fd5b50610261610704366004613e3b565b611ba7565b34801561071557600080fd5b506102b9610724366004613eb5565b611c3f565b34801561073557600080fd5b506102b9611cb4565b34801561074a57600080fd5b506107a561075936600461369b565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007909701549596949593949293919290916001600160a01b031688565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c08301526001600160a01b031660e08201526101000161026b565b3480156107f557600080fd5b50610294610804366004613f11565b600360209081526000928352604080842090915290825290205460ff1681565b34801561083057600080fd5b5061033861083f366004613f3b565b611cc1565b60006301ffc9a760e01b6001600160e01b0319831614806108755750636cdb3d1360e11b6001600160e01b03198316145b8061089057506303a24d0760e21b6001600160e01b03198316145b806108ab57506001600160e01b0319821663152a902d60e11b145b92915050565b600080546108be90613fa0565b80601f01602080910402602001604051908101604052809291908181526020018280546108ea90613fa0565b80156109375780601f1061090c57610100808354040283529160200191610937565b820191906000526020600020905b81548152906001019060200180831161091a57829003601f168201915b505050505081565b6060600061094c83611d49565b509050600061095a84611e5c565b905061096582610fde565b15610993578060405160200161097b9190613fd5565b60405160208183030381529060405292505050919050565b8061099d85611fbd565b60405160200161097b929190613ffa565b6109b66120db565b6109f85760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b610a0181612108565b50565b6000610a0f60095490565b8210610a4d5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016109ef565b60098281548110610a6057610a60614029565b90600052602060002001549050919050565b610a818688878787878761215a565b6000868152600e60209081526040808320815161010081018352815481526001820154818501526002820154818401526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b031660e0820152898452600f909252822054909180610b078a338b89611247565b915091506000866020013560001480610b22575060a0850151155b9050610b328b338c8c8c866118ce565b828015610b43575060008760200135115b15610b72576000848152601160209081526040808320600886901c845290915290208054600160ff85161b1790555b8985604001818151610b849190614055565b905250600084815260106020908152604080832033845282528083204290558d8352600e8252808320885181559188015160018301558701516002820155606087015160038201556080870151600482015560a0870151600582015560c0870151600682015560e0870151600790910180546001600160a01b0319166001600160a01b03909216919091179055610c1d908b8b8b6121e9565b610c288c8c8c6122b0565b8a6001600160a01b038d16336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68d604051610c6e91815260200190565b60405180910390a4505050505050505050505050565b600080600080610c9386611004565b90945084925061ffff169050612710610cac828761406d565b610cb691906140a2565b925050509250929050565b6001600160a01b038516331480610cfb57506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b610d3c5760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b60448201526064016109ef565b610d4985858585856122cb565b5050505050565b610d586120db565b610d955760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016109ef565b6000838152600e602090815260408083208151610100810183528154815260018201548185015260028201548184019081526003830154606083015260048301546080830152600583015460a0830152600683015460c08301526007909201546001600160a01b031660e0820152878552600f90935292205491519091908315610e5c575060003360405160609190911b6bffffffffffffffffffffffff191660208201524360348201526054016040516020818303038152906040528051906020012091505b8460200135811115610eb05760405162461bcd60e51b815260206004820152601260248201527f6d617820737570706c7920636c61696d6564000000000000000000000000000060448201526064016109ef565b6000604051806101000160405280876000013581526020018760200135815260200183815260200187606001358152602001876080013581526020018760a0013581526020018760c0013581526020018760e0016020810190610f1391906136b4565b6001600160a01b039081169091526000898152600e6020908152604080832085518155858301516001820155858201516002820155606086015160038201556080860151600482015560a0860151600582015560c0860151600682015560e0860151600790910180546001600160a01b0319169190951617909355600f90528190208590555190915087907f108e373025a2f7dad2e968ca6ce56d87eab1a9c17dc49817fee9e3da0dc9f8a190610fcd90899089906140b6565b60405180910390a250505050505050565b6000818152600d602052604081208054829190610ffa90613fa0565b9050119050919050565b6000818152600860209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561104b5780516020820151611065565b6007546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b606081518351146110b45760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016109ef565b6000835167ffffffffffffffff8111156110d0576110d06136e7565b6040519080825280602002602001820160405280156110f9578160200160208202803683370190505b50905060005b845181101561119e576002600086838151811061111e5761111e614029565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085838151811061115a5761115a614029565b602002602001015181526020019081526020016000205482828151811061118357611183614029565b602090810291909101015261119781614128565b90506110ff565b509392505050565b6111ae6120db565b6111eb5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016109ef565b6111f582826124e2565b5050565b6112016120db565b61123e5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016109ef565b610a0181612597565b6000848152600e60209081526040808320815161010081018352815481526001820154938101939093526002810154918301919091526003810154606083015260048101546080830152600581015460a08301819052600682015460c08401526007909101546001600160a01b031660e08301528291901561146e5761134c6112d08580614143565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516bffffffffffffffffffffffff1960608b901b166020808301919091528801356034820152605401604051602081830303815290604052805190602001206125e1565b90935091508261139e5760405162461bcd60e51b815260206004820152601060248201527f6e6f7420696e20616c6c6f776c6973740000000000000000000000000000000060448201526064016109ef565b6000878152600f6020908152604080832054835260118252808320600886901c8452909152902054600160ff84161b161561140b5760405162461bcd60e51b815260206004820152600d60248201526c1c1c9bdbd98818db185a5b5959609a1b60448201526064016109ef565b6020840135158015906114215750836020013585115b1561146e5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207174792070726f6f6600000000000000000000000000000060448201526064016109ef565b5094509492505050565b6000828152600f60209081526040808320548352601082528083206001600160a01b0385168452825280832054858452600e909252909120600401548101818110156114c357506000195b9250929050565b6114d26120db565b61150f5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016109ef565b610a01816126af565b600180546108be90613fa0565b61152d6120db565b61156a5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016109ef565b611575838383612791565b505050565b6000838152600d602052604081208054606092919061159890613fa0565b80601f01602080910402602001604051908101604052809291908181526020018280546115c490613fa0565b80156116115780601f106115e657610100808354040283529160200191611611565b820191906000526020600020905b8154815290600101906020018083116115f457829003601f168201915b5050505050905080516000141561166a5760405162461bcd60e51b815260206004820152601160248201527f4e6f7468696e6720746f2072657665616c00000000000000000000000000000060448201526064016109ef565b60008082806020019051810190611681919061418d565b91509150611690828787611c3f565b935080848787466040516020016116aa9493929190614219565b60405160208183030381529060405280519060200120146116fd5760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b60448201526064016109ef565b5050509392505050565b600d60205260009081526040902080546108be90613fa0565b336001600160a01b03831681141561176b5760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b60448201526064016109ef565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191015b60405180910390a3505050565b60608167ffffffffffffffff8111156117f4576117f46136e7565b60405190808252806020026020018201604052801561182757816020015b60608152602001906001900390816118125790505b50905060005b828110156118c7576118973085858481811061184b5761184b614029565b905060200281019061185d9190614242565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061285292505050565b8282815181106118a9576118a9614029565b602002602001018190525080806118bf90614128565b91505061182d565b5092915050565b6000868152600e6020908152604091829020825161010081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526007909101546001600160a01b0390811660e0830181905290851614158061195957508060c001518314155b156119a65760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207072696365206f722063757272656e63790000000000000060448201526064016109ef565b8415806119be57508180156119be5750806060015185115b15611a0b5760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207175616e746974790000000000000000000000000000000060448201526064016109ef565b8060200151858260400151611a209190614055565b1115611a6e5760405162461bcd60e51b815260206004820152601260248201527f65786365656473206d617820737570706c79000000000000000000000000000060448201526064016109ef565b600080611a7b8989611478565b915091504283600001511180611a9a57508115801590611a9a57508042105b15611ad85760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b60448201526064016109ef565b505050505050505050565b6060611aed6120db565b611b2a5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016109ef565b6000611b3585610a04565b9050611b4281858561157a565b9150611b5d816040518060200160405280600081525061287e565b611b67818361289d565b847f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d83604051611b979190613688565b60405180910390a2509392505050565b60008115611c2857600080611bbe84860186614289565b915091508151600014158015611bd357508015155b15611c2557611c2588600c54611be99190614055565b86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061287e92505050565b50505b611c3586868686866128bc565b9695505050505050565b8251604080518083016020019091528181529060005b81811015611cab576000858583604051602001611c74939291906142ce565b60408051601f19818403018152919052805160209182012088840182015118858401820152611ca4915082614055565b9050611c55565b50509392505050565b600580546108be90613fa0565b6001600160a01b038516331480611cfb57506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b611d3c5760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b60448201526064016109ef565b610d4985858585856129ff565b6000806000611d5760095490565b905060006009805480602002602001604051908101604052809291908181526020018280548015611da757602002820191906000526020600020905b815481526020019060010190808311611d93575b5050505050905060005b82811015611e1357818181518110611dcb57611dcb614029565b6020026020010151861015611e0157809350818181518110611def57611def614029565b60200260200101519450505050915091565b611e0c600182614055565b9050611db1565b5060405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420746f6b656e4964000000000000000000000000000000000060448201526064016109ef565b60606000611e6960095490565b905060006009805480602002602001604051908101604052809291908181526020018280548015611eb957602002820191906000526020600020905b815481526020019060010190808311611ea5575b5050505050905060005b82811015611e1357818181518110611edd57611edd614029565b6020026020010151851015611fab57600a6000838381518110611f0257611f02614029565b602002602001015181526020019081526020016000208054611f2390613fa0565b80601f0160208091040260200160405190810160405280929190818152602001828054611f4f90613fa0565b8015611f9c5780601f10611f7157610100808354040283529160200191611f9c565b820191906000526020600020905b815481529060010190602001808311611f7f57829003601f168201915b50505050509350505050919050565b611fb6600182614055565b9050611ec3565b606081611fe15750506040805180820190915260018152600360fc1b602082015290565b8160005b811561200b5780611ff581614128565b91506120049050600a836140a2565b9150611fe5565b60008167ffffffffffffffff811115612026576120266136e7565b6040519080825280601f01601f191660200182016040528015612050576020820181803683370190505b5090505b84156120d3576120656001836142e0565b9150612072600a866142f7565b61207d906030614055565b60f81b81838151811061209257612092614029565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506120cc600a866140a2565b9450612054565b949350505050565b60006120ef6006546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b33321461218f5760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b60448201526064016109ef565b600c5487106121e05760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f756768206d696e74656420746f6b656e73000000000000000060448201526064016109ef565b50505050505050565b806121f3576122aa565b60006121ff828561406d565b90506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612275578034146122755760405162461bcd60e51b815260206004820152601660248201527f4d7573742073656e6420746f74616c2070726963652e0000000000000000000060448201526064016109ef565b60006001600160a01b0386161561228c5785612299565b600b546001600160a01b03165b90506122a784338385612b76565b50505b50505050565b61157583838360405180602001604052806000815250612bc0565b815183511461230e5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016109ef565b6001600160a01b0384166123535760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b60448201526064016109ef565b33612362818787878787612ca9565b60005b845181101561247c57600085828151811061238257612382614029565b6020026020010151905060008583815181106123a0576123a0614029565b6020908102919091018101516001600160a01b038b1660009081526002835260408082208683529093529190912054909150818110156124155760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b60448201526064016109ef565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d16835290815282822086835290529081208054849290612461908490614055565b925050819055505050508061247590614128565b9050612365565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516124cc92919061430b565b60405180910390a46122a7818787878787612dc3565b6127108111156125265760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016109ef565b600780546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6000808281805b87518110156126a3576125fc60028361406d565b9150600088828151811061261257612612614029565b60200260200101519050808411612654576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612690565b604080516020810183905290810185905260600160405160208183030381529060405280519060200120935060018361268d9190614055565b92505b508061269b81614128565b9150506125e8565b50941495939450505050565b6000600580546126be90613fa0565b80601f01602080910402602001604051908101604052809291908181526020018280546126ea90613fa0565b80156127375780601f1061270c57610100808354040283529160200191612737565b820191906000526020600020905b81548152906001019060200180831161271a57829003601f168201915b505085519394506127539360059350602087019250905061351e565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612785929190614339565b60405180910390a15050565b6127108111156127d55760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b60448201526064016109ef565b6040805180820182526001600160a01b038481168083526020808401868152600089815260088352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91016117cc565b6060612877838360405180606001604052806027815260200161454760279139612f24565b9392505050565b6000828152600d6020908152604090912082516115759284019061351e565b6000828152600a6020908152604090912082516115759284019061351e565b60006128c66120db565b6129035760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016109ef565b856129505760405162461bcd60e51b815260206004820152601060248201527f4d696e74696e67203020746f6b656e730000000000000000000000000000000060448201526064016109ef565b6000600c549050612998818888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612ff792505050565b600c919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d60016129ce8a84614055565b6129d891906142e0565b888888886040516129ed959493929190614387565b60405180910390a25095945050505050565b6001600160a01b038416612a445760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b60448201526064016109ef565b33612a63818787612a5488613064565b612a5d88613064565b87612ca9565b6001600160a01b038616600090815260026020908152604080832087845290915290205483811015612aca5760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b60448201526064016109ef565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a16835290815282822088835290529081208054869290612b16908490614055565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46121e08288888888886130af565b80612b80576122aa565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612bb457612baf828261318c565b6122aa565b6122aa8484848461322f565b6001600160a01b038416612c055760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b60448201526064016109ef565b33612c1681600087612a5488613064565b6001600160a01b038516600090815260026020908152604080832087845290915281208054859290612c49908490614055565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d49816000878787876130af565b612cb78686868686866122a7565b6001600160a01b038516612d3e5760005b8351811015612d3c57828181518110612ce357612ce3614029565b602002602001015160126000868481518110612d0157612d01614029565b602002602001015181526020019081526020016000206000828254612d269190614055565b90915550612d35905081614128565b9050612cc8565b505b6001600160a01b0384166122a75760005b83518110156121e057828181518110612d6a57612d6a614029565b602002602001015160126000868481518110612d8857612d88614029565b602002602001015181526020019081526020016000206000828254612dad91906142e0565b90915550612dbc905081614128565b9050612d4f565b6001600160a01b0384163b156122a75760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190612e0790899089908890889088906004016143c0565b6020604051808303816000875af1925050508015612e42575060408051601f3d908101601f19168201909252612e3f91810190614412565b60015b612ed257612e4e61442f565b806308c379a01415612e885750612e6361444b565b80612e6e5750612e8a565b8060405162461bcd60e51b81526004016109ef9190613688565b505b60405162461bcd60e51b815260206004820152601060248201527f214552433131353552454345495645520000000000000000000000000000000060448201526064016109ef565b6001600160e01b0319811663bc197c8160e01b146121e05760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b60448201526064016109ef565b60606001600160a01b0384163b612f8c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016109ef565b600080856001600160a01b031685604051612fa791906144d5565b600060405180830381855af49150503d8060008114612fe2576040519150601f19603f3d011682016040523d82523d6000602084013e612fe7565b606091505b5091509150611c35828286613288565b6000806130048486614055565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a60209081526040909120855192945084935061305b92909186019061351e565b50935093915050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061309e5761309e614029565b602090810291909101015292915050565b6001600160a01b0384163b156122a75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906130f390899089908890889088906004016144f1565b6020604051808303816000875af192505050801561312e575060408051601f3d908101601f1916820190925261312b91810190614412565b60015b61313a57612e4e61442f565b6001600160e01b0319811663f23a6e6160e01b146121e05760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b60448201526064016109ef565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146131d9576040519150601f19603f3d011682016040523d82523d6000602084013e6131de565b606091505b50509050806115755760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c65640000000060448201526064016109ef565b816001600160a01b0316836001600160a01b0316141561324e576122aa565b6001600160a01b03831630141561327357612baf6001600160a01b03851683836132c1565b6122aa6001600160a01b038516848484613339565b60608315613297575081612877565b8251156132a75782518084602001fd5b8160405162461bcd60e51b81526004016109ef9190613688565b6040516001600160a01b03831660248201526044810182905261157590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152613371565b6040516001600160a01b03808516602483015283166044820152606481018290526122aa9085906323b872dd60e01b906084016132ed565b60006133c6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166134439092919063ffffffff16565b80519091501561157557808060200190518101906133e49190614529565b6115755760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109ef565b60606120d38484600085856001600160a01b0385163b6134a55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109ef565b600080866001600160a01b031685876040516134c191906144d5565b60006040518083038185875af1925050503d80600081146134fe576040519150601f19603f3d011682016040523d82523d6000602084013e613503565b606091505b5091509150613513828286613288565b979650505050505050565b82805461352a90613fa0565b90600052602060002090601f01602090048101928261354c5760008555613592565b82601f1061356557805160ff1916838001178555613592565b82800160010185558215613592579182015b82811115613592578251825591602001919060010190613577565b5061359e9291506135a2565b5090565b5b8082111561359e57600081556001016135a3565b80356001600160a01b03811681146135ce57600080fd5b919050565b600080604083850312156135e657600080fd5b6135ef836135b7565b946020939093013593505050565b6001600160e01b031981168114610a0157600080fd5b60006020828403121561362557600080fd5b8135612877816135fd565b60005b8381101561364b578181015183820152602001613633565b838111156122aa5750506000910152565b60008151808452613674816020860160208601613630565b601f01601f19169290920160200192915050565b602081526000612877602083018461365c565b6000602082840312156136ad57600080fd5b5035919050565b6000602082840312156136c657600080fd5b612877826135b7565b6000604082840312156136e157600080fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715613723576137236136e7565b6040525050565b600067ffffffffffffffff821115613744576137446136e7565b50601f01601f191660200190565b600061375d8361372a565b60405161376a82826136fd565b80925084815285858501111561377f57600080fd5b8484602083013760006020868301015250509392505050565b600082601f8301126137a957600080fd5b61287783833560208501613752565b600080600080600080600060e0888a0312156137d357600080fd5b6137dc886135b7565b965060208801359550604088013594506137f8606089016135b7565b93506080880135925060a088013567ffffffffffffffff8082111561381c57600080fd5b6138288b838c016136cf565b935060c08a013591508082111561383e57600080fd5b5061384b8a828b01613798565b91505092959891949750929550565b6000806040838503121561386d57600080fd5b50508035926020909101359150565b600067ffffffffffffffff821115613896576138966136e7565b5060051b60200190565b600082601f8301126138b157600080fd5b813560206138be8261387c565b6040516138cb82826136fd565b83815260059390931b85018201928281019150868411156138eb57600080fd5b8286015b8481101561390657803583529183019183016138ef565b509695505050505050565b600080600080600060a0868803121561392957600080fd5b613932866135b7565b9450613940602087016135b7565b9350604086013567ffffffffffffffff8082111561395d57600080fd5b61396989838a016138a0565b9450606088013591508082111561397f57600080fd5b61398b89838a016138a0565b935060808801359150808211156139a157600080fd5b506139ae88828901613798565b9150509295509295909350565b8015158114610a0157600080fd5b60008060008385036101408112156139e057600080fd5b84359350610100601f19820112156139f757600080fd5b50602084019150610120840135613a0d816139bb565b809150509250925092565b60008060408385031215613a2b57600080fd5b823567ffffffffffffffff80821115613a4357600080fd5b818501915085601f830112613a5757600080fd5b81356020613a648261387c565b604051613a7182826136fd565b83815260059390931b8501820192828101915089841115613a9157600080fd5b948201945b83861015613ab657613aa7866135b7565b82529482019490820190613a96565b96505086013592505080821115613acc57600080fd5b50613ad9858286016138a0565b9150509250929050565b600081518084526020808501945080840160005b83811015613b1357815187529582019590820190600101613af7565b509495945050505050565b6020815260006128776020830184613ae3565b60008060008060808587031215613b4757600080fd5b84359350613b57602086016135b7565b925060408501359150606085013567ffffffffffffffff811115613b7a57600080fd5b613b86878288016136cf565b91505092959194509250565b60008060408385031215613ba557600080fd5b82359150613bb5602084016135b7565b90509250929050565b600060208284031215613bd057600080fd5b813567ffffffffffffffff811115613be757600080fd5b8201601f81018413613bf857600080fd5b6120d384823560208401613752565b600080600060608486031215613c1c57600080fd5b83359250613c2c602085016135b7565b9150604084013590509250925092565b60008083601f840112613c4e57600080fd5b50813567ffffffffffffffff811115613c6657600080fd5b6020830191508360208285010111156114c357600080fd5b600080600060408486031215613c9357600080fd5b83359250602084013567ffffffffffffffff811115613cb157600080fd5b613cbd86828701613c3c565b9497909650939450505050565b60008060408385031215613cdd57600080fd5b613ce6836135b7565b91506020830135613cf6816139bb565b809150509250929050565b60008060208385031215613d1457600080fd5b823567ffffffffffffffff80821115613d2c57600080fd5b818501915085601f830112613d4057600080fd5b813581811115613d4f57600080fd5b8660208260051b8501011115613d6457600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613dcb57603f19888603018452613db985835161365c565b94509285019290850190600101613d9d565b5092979650505050505050565b60008060008060008060c08789031215613df157600080fd5b86359550613e01602088016135b7565b945060408701359350613e16606088016135b7565b92506080870135915060a0870135613e2d816139bb565b809150509295509295509295565b600080600080600060608688031215613e5357600080fd5b85359450602086013567ffffffffffffffff80821115613e7257600080fd5b613e7e89838a01613c3c565b90965094506040880135915080821115613e9757600080fd5b50613ea488828901613c3c565b969995985093965092949392505050565b600080600060408486031215613eca57600080fd5b833567ffffffffffffffff80821115613ee257600080fd5b613eee87838801613798565b94506020860135915080821115613f0457600080fd5b50613cbd86828701613c3c565b60008060408385031215613f2457600080fd5b613f2d836135b7565b9150613bb5602084016135b7565b600080600080600060a08688031215613f5357600080fd5b613f5c866135b7565b9450613f6a602087016135b7565b93506040860135925060608601359150608086013567ffffffffffffffff811115613f9457600080fd5b6139ae88828901613798565b600181811c90821680613fb457607f821691505b602082108114156136e157634e487b7160e01b600052602260045260246000fd5b60008251613fe7818460208701613630565b600360fc1b920191825250600101919050565b6000835161400c818460208801613630565b835190830190614020818360208801613630565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156140685761406861403f565b500190565b60008160001904831182151516156140875761408761403f565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826140b1576140b161408c565b500490565b600061012082019050833582526020840135602083015260408401356040830152606084013560608301526080840135608083015260a084013560a083015260c084013560c08301526001600160a01b0361411360e086016135b7565b1660e083015291151561010090910152919050565b600060001982141561413c5761413c61403f565b5060010190565b6000808335601e1984360301811261415a57600080fd5b83018035915067ffffffffffffffff82111561417557600080fd5b6020019150600581901b36038213156114c357600080fd5b600080604083850312156141a057600080fd5b825167ffffffffffffffff8111156141b757600080fd5b8301601f810185136141c857600080fd5b80516141d38161372a565b6040516141e082826136fd565b8281528760208486010111156141f557600080fd5b614206836020830160208701613630565b6020969096015195979596505050505050565b6000855161422b818460208a01613630565b820184868237909301918252506020019392505050565b6000808335601e1984360301811261425957600080fd5b83018035915067ffffffffffffffff82111561427457600080fd5b6020019150368190038213156114c357600080fd5b6000806040838503121561429c57600080fd5b823567ffffffffffffffff8111156142b357600080fd5b6142bf85828601613798565b95602094909401359450505050565b82848237909101908152602001919050565b6000828210156142f2576142f261403f565b500390565b6000826143065761430661408c565b500690565b60408152600061431e6040830185613ae3565b82810360208401526143308185613ae3565b95945050505050565b60408152600061434c604083018561365c565b8281036020840152614330818561365c565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8581526060602082015260006143a160608301868861435e565b82810360408401526143b481858761435e565b98975050505050505050565b60006001600160a01b03808816835280871660208401525060a060408301526143ec60a0830186613ae3565b82810360608401526143fe8186613ae3565b905082810360808401526143b4818561365c565b60006020828403121561442457600080fd5b8151612877816135fd565b600060033d11156144485760046000803e5060005160e01c5b90565b600060443d10156144595790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561448957505050505090565b82850191508151818111156144a15750505050505090565b843d87010160208285010111156144bb5750505050505090565b6144ca602082860101876136fd565b509095945050505050565b600082516144e7818460208701613630565b9190910192915050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261351360a083018461365c565b60006020828403121561453b57600080fd5b8151612877816139bb56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207e27878c6de817b772316ed9405e8d85cefc539751208a262ac63c80e7cac89664736f6c634300080c0033";

const isSuperArgs$F = xs => xs.length > 1;

class ERC1155Drop__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$F(args)) {
      super(...args);
    } else {
      super(_abi$1V, _bytecode$F, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1V);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1V, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC1155Drop__factory, "bytecode", _bytecode$F);

defineProperty._defineProperty(ERC1155Drop__factory, "abi", _abi$1V);

const _abi$1U = [{
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155BatchReceived",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$E = "0x608060405234801561001057600080fd5b506103d2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c36600461028d565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b4366004610337565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461015157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561019557610195610156565b604052919050565b600082601f8301126101ae57600080fd5b8135602067ffffffffffffffff8211156101ca576101ca610156565b8160051b6101d982820161016c565b92835284810182019282810190878511156101f357600080fd5b83870192505b84831015610212578235825291830191908301906101f9565b979650505050505050565b600082601f83011261022e57600080fd5b813567ffffffffffffffff81111561024857610248610156565b61025b601f8201601f191660200161016c565b81815284602083860101111561027057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156102a557600080fd5b6102ae8661012d565b94506102bc6020870161012d565b9350604086013567ffffffffffffffff808211156102d957600080fd5b6102e589838a0161019d565b945060608801359150808211156102fb57600080fd5b61030789838a0161019d565b9350608088013591508082111561031d57600080fd5b5061032a8882890161021d565b9150509295509295909350565b600080600080600060a0868803121561034f57600080fd5b6103588661012d565b94506103666020870161012d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561039057600080fd5b61032a8882890161021d56fea2646970667358221220c731b333d6c9a9d421b45fe8253d6437f66cabd2eecf4a215e25761b7db19e8264736f6c634300080c0033";

const isSuperArgs$E = xs => xs.length > 1;

class ERC1155Holder__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$E(args)) {
      super(...args);
    } else {
      super(_abi$1U, _bytecode$E, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1U);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1U, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC1155Holder__factory, "bytecode", _bytecode$E);

defineProperty._defineProperty(ERC1155Holder__factory, "abi", _abi$1U);

const _abi$1T = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "_value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "_tokenIds",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "_amounts",
    type: "uint256[]"
  }],
  name: "burnBatch",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [{
    internalType: "uint256",
    name: "batchId",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$D = "0x60806040523480156200001157600080fd5b50604051620035a0380380620035a0833981016040819052620000349162000306565b8351849084906200004d90600090602085019062000193565b5080516200006390600190602084019062000193565b50505062000077336200009660201b60201c565b6200008c826001600160801b038316620000e8565b50505050620003ef565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115620001315760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600780546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b828054620001a190620003b2565b90600052602060002090601f016020900481019282620001c5576000855562000210565b82601f10620001e057805160ff191683800117855562000210565b8280016001018555821562000210579182015b8281111562000210578251825591602001919060010190620001f3565b506200021e92915062000222565b5090565b5b808211156200021e576000815560010162000223565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026157600080fd5b81516001600160401b03808211156200027e576200027e62000239565b604051601f8301601f19908116603f01168101908282118183101715620002a957620002a962000239565b81604052838152602092508683858801011115620002c657600080fd5b600091505b83821015620002ea5785820183015181830184015290820190620002cb565b83821115620002fc5760008385830101525b9695505050505050565b600080600080608085870312156200031d57600080fd5b84516001600160401b03808211156200033557600080fd5b62000343888389016200024f565b955060208701519150808211156200035a57600080fd5b5062000369878288016200024f565b604087015190945090506001600160a01b03811681146200038957600080fd5b60608601519092506001600160801b0381168114620003a757600080fd5b939692955090935050565b600181811c90821680620003c757607f821691505b60208210811415620003e957634e487b7160e01b600052602260045260246000fd5b50919050565b6131a180620003ff6000396000f3fe6080604052600436106101c15760003560e01c806363b45e2d116100f7578063ac9650d811610095578063e8a3d48511610064578063e8a3d48514610572578063e985e9c514610587578063f242432a146105c2578063f5298aca146105e257600080fd5b8063ac9650d8146104cd578063b24f2d39146104fa578063bd85b03914610525578063d37c353b1461055257600080fd5b8063938e3d7b116100d1578063938e3d7b1461045857806395d89b41146104785780639bcf7a151461048d578063a22cb465146104ad57600080fd5b806363b45e2d146103fb5780636b20c454146104105780638da5cb5b1461043057600080fd5b80632bc43fd9116101645780634bbb1abf1161013e5780634bbb1abf1461034c5780634cc157df1461036c5780634e1273f4146103ae578063600dd5ea146103db57600080fd5b80632bc43fd9146103045780632eb2c2d6146103175780633b1475a71461033757600080fd5b80630e89341c116101a05780630e89341c1461026357806313af4035146102835780632419f51b146102a55780632a55205a146102c557600080fd5b8062fdd58e146101c657806301ffc9a71461021157806306fdde0314610241575b600080fd5b3480156101d257600080fd5b506101fe6101e13660046125cd565b600260209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561021d57600080fd5b5061023161022c36600461260d565b610602565b6040519015158152602001610208565b34801561024d57600080fd5b5061025661066f565b6040516102089190612682565b34801561026f57600080fd5b5061025661027e366004612695565b6106fd565b34801561028f57600080fd5b506102a361029e3660046126ae565b61073e565b005b3480156102b157600080fd5b506101fe6102c0366004612695565b610794565b3480156102d157600080fd5b506102e56102e03660046126c9565b610802565b604080516001600160a01b039093168352602083019190915201610208565b6102a36103123660046126eb565b61083f565b34801561032357600080fd5b506102a3610332366004612874565b6108eb565b34801561034357600080fd5b50600b546101fe565b34801561035857600080fd5b506102a36103673660046126eb565b505050565b34801561037857600080fd5b5061038c610387366004612695565b61097a565b604080516001600160a01b03909316835261ffff909116602083015201610208565b3480156103ba57600080fd5b506103ce6103c936600461291e565b6109e5565b6040516102089190612a24565b3480156103e757600080fd5b506102a36103f63660046125cd565b610b1c565b34801561040757600080fd5b506009546101fe565b34801561041c57600080fd5b506102a361042b366004612a37565b610b6f565b34801561043c57600080fd5b506006546040516001600160a01b039091168152602001610208565b34801561046457600080fd5b506102a3610473366004612aab565b610d25565b34801561048457600080fd5b50610256610d73565b34801561049957600080fd5b506102a36104a8366004612af4565b610d80565b3480156104b957600080fd5b506102a36104c8366004612b29565b610dd0565b3480156104d957600080fd5b506104ed6104e8366004612b65565b610e89565b6040516102089190612bda565b34801561050657600080fd5b506007546001600160a01b03811690600160a01b900461ffff1661038c565b34801561053157600080fd5b506101fe610540366004612695565b600c6020526000908152604090205481565b34801561055e57600080fd5b506101fe61056d366004612c85565b610f7e565b34801561057e57600080fd5b506102566110c1565b34801561059357600080fd5b506102316105a2366004612cff565b600360209081526000928352604080842090915290825290205460ff1681565b3480156105ce57600080fd5b506102a36105dd366004612d32565b6110ce565b3480156105ee57600080fd5b506102a36105fd3660046126eb565b611156565b60006301ffc9a760e01b6001600160e01b0319831614806106335750636cdb3d1360e11b6001600160e01b03198316145b8061064e57506303a24d0760e21b6001600160e01b03198316145b8061066957506001600160e01b0319821663152a902d60e11b145b92915050565b6000805461067c90612d97565b80601f01602080910402602001604051908101604052809291908181526020018280546106a890612d97565b80156106f55780601f106106ca576101008083540402835291602001916106f5565b820191906000526020600020905b8154815290600101906020018083116106d857829003601f168201915b505050505081565b6060600061070a83611251565b905080610716846113fb565b604051602001610727929190612dd2565b604051602081830303815290604052915050919050565b610746611519565b6107885760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b61079181611546565b50565b600061079f60095490565b82106107dd5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640161077f565b600982815481106107f0576107f0612e01565b90600052602060002001549050919050565b6000806000806108118661097a565b90945084925061ffff16905061271061082a8287612e2d565b6108349190612e62565b925050509250929050565b600b54821061087d5760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b604482015260640161077f565b610898838383604051806020016040528060008152506115a5565b81836001600160a01b0316336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de6846040516108de91815260200190565b60405180910390a4505050565b6001600160a01b03851633148061092557506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6109665760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b604482015260640161077f565b610973858585858561169d565b5050505050565b6000818152600860209081526040808320815180830190925280546001600160a01b0316808352600190910154928201929092528291156109c157805160208201516109db565b6007546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b60608151835114610a2a5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161077f565b6000835167ffffffffffffffff811115610a4657610a4661271e565b604051908082528060200260200182016040528015610a6f578160200160208202803683370190505b50905060005b8451811015610b145760026000868381518110610a9457610a94612e01565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000858381518110610ad057610ad0612e01565b6020026020010151815260200190815260200160002054828281518110610af957610af9612e01565b6020908102919091010152610b0d81612e76565b9050610a75565b509392505050565b610b24611519565b610b615760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161077f565b610b6b82826118bc565b5050565b336001600160a01b038416811480610bac57506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b610bec5760405162461bcd60e51b81526020600482015260116024820152702ab730b8383937bb32b21031b0b63632b960791b604482015260640161077f565b8151835114610c3d5760405162461bcd60e51b815260206004820152600f60248201527f4c656e677468206d69736d617463680000000000000000000000000000000000604482015260640161077f565b60005b8351811015610d1357828181518110610c5b57610c5b612e01565b602002602001015160026000876001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110610c9c57610c9c612e01565b60200260200101518152602001908152602001600020541015610d015760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820746f6b656e73206f776e6564000000000000000000604482015260640161077f565b610d0c600182612e91565b9050610c40565b50610d1f848484611971565b50505050565b610d2d611519565b610d6a5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161077f565b61079181611b6b565b6001805461067c90612d97565b610d88611519565b610dc55760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161077f565b610367838383611c4d565b336001600160a01b038316811415610e1b5760405162461bcd60e51b815260206004820152600e60248201526d20a8282927ab24a723afa9a2a62360911b604482015260640161077f565b6001600160a01b03818116600081815260036020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191015b60405180910390a3505050565b60608167ffffffffffffffff811115610ea457610ea461271e565b604051908082528060200260200182016040528015610ed757816020015b6060815260200190600190039081610ec25790505b50905060005b82811015610f7757610f4730858584818110610efb57610efb612e01565b9050602002810190610f0d9190612ea9565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d1b92505050565b828281518110610f5957610f59612e01565b60200260200101819052508080610f6f90612e76565b915050610edd565b5092915050565b6000610f88611519565b610fc55760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161077f565b856110125760405162461bcd60e51b815260206004820152601060248201527f4d696e74696e67203020746f6b656e7300000000000000000000000000000000604482015260640161077f565b6000600b54905061105a818888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d4792505050565b600b919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d60016110908a84612e91565b61109a9190612ef0565b888888886040516110af959493929190612f30565b60405180910390a25095945050505050565b6005805461067c90612d97565b6001600160a01b03851633148061110857506001600160a01b038516600090815260036020908152604080832033845290915290205460ff165b6111495760405162461bcd60e51b81526020600482015260126024820152710853d5d3915497d3d497d054141493d5915160721b604482015260640161077f565b6109738585858585611db4565b336001600160a01b03841681148061119357506001600160a01b0380851660009081526003602090815260408083209385168352929052205460ff165b6111d35760405162461bcd60e51b81526020600482015260116024820152702ab730b8383937bb32b21031b0b63632b960791b604482015260640161077f565b6001600160a01b03841660009081526002602090815260408083208684529091529020548211156112465760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820746f6b656e73206f776e6564000000000000000000604482015260640161077f565b610d1f848484611f25565b6060600061125e60095490565b9050600060098054806020026020016040519081016040528092919081815260200182805480156112ae57602002820191906000526020600020905b81548152602001906001019080831161129a575b5050505050905060005b828110156113b2578181815181106112d2576112d2612e01565b60200260200101518510156113a057600a60008383815181106112f7576112f7612e01565b60200260200101518152602001908152602001600020805461131890612d97565b80601f016020809104026020016040519081016040528092919081815260200182805461134490612d97565b80156113915780601f1061136657610100808354040283529160200191611391565b820191906000526020600020905b81548152906001019060200180831161137457829003601f168201915b50505050509350505050919050565b6113ab600182612e91565b90506112b8565b5060405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420746f6b656e49640000000000000000000000000000000000604482015260640161077f565b60608161141f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611449578061143381612e76565b91506114429050600a83612e62565b9150611423565b60008167ffffffffffffffff8111156114645761146461271e565b6040519080825280601f01601f19166020018201604052801561148e576020820181803683370190505b5090505b8415611511576114a3600183612ef0565b91506114b0600a86612f69565b6114bb906030612e91565b60f81b8183815181106114d0576114d0612e01565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061150a600a86612e62565b9450611492565b949350505050565b600061152d6006546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6001600160a01b0384166115ea5760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b604482015260640161077f565b3361160a816000876115fb8861206d565b6116048861206d565b876120b8565b6001600160a01b03851660009081526002602090815260408083208784529091528120805485929061163d908490612e91565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610973816000878787876121c4565b81518351146116e05760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161077f565b6001600160a01b0384166117255760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b604482015260640161077f565b336117348187878787876120b8565b60005b845181101561184e57600085828151811061175457611754612e01565b60200260200101519050600085838151811061177257611772612e01565b6020908102919091018101516001600160a01b038b1660009081526002835260408082208683529093529190912054909150818110156117e75760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b604482015260640161077f565b6001600160a01b03808b16600090815260026020818152604080842088855282528084208787039055938d16835290815282822086835290529081208054849290611833908490612e91565b925050819055505050508061184790612e76565b9050611737565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161189e929190612f7d565b60405180910390a46118b4818787878787612325565b505050505050565b6127108111156119005760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161077f565b600780546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6001600160a01b0383166119b85760405162461bcd60e51b815260206004820152600e60248201526d232927a6afad22a927afa0a2222960911b604482015260640161077f565b80518251146119fb5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161077f565b6000339050611a1e818560008686604051806020016040528060008152506120b8565b60005b8351811015611b0c576000848281518110611a3e57611a3e612e01565b602002602001015190506000848381518110611a5c57611a5c612e01565b6020908102919091018101516001600160a01b0389166000908152600283526040808220868352909352919091205490915081811015611ad15760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b604482015260640161077f565b6001600160a01b0388166000908152600260209081526040808320958352949052929092209103905580611b0481612e76565b915050611a21565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611b5d929190612f7d565b60405180910390a450505050565b600060058054611b7a90612d97565b80601f0160208091040260200160405190810160405280929190818152602001828054611ba690612d97565b8015611bf35780601f10611bc857610100808354040283529160200191611bf3565b820191906000526020600020905b815481529060010190602001808311611bd657829003601f168201915b50508551939450611c0f93600593506020870192509050612518565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611c41929190612fab565b60405180910390a15050565b612710811115611c915760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161077f565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600883528690209451855473ffffffffffffffffffffffffffffffffffffffff1916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d9101610e7c565b6060611d40838360405180606001604052806027815260200161314560279139612402565b9392505050565b600080611d548486612e91565b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018190556000818152600a602090815260409091208551929450849350611dab929091860190612518565b50935093915050565b6001600160a01b038416611df95760405162461bcd60e51b815260206004820152600c60248201526b2a27afad22a927afa0a2222960a11b604482015260640161077f565b33611e098187876115fb8861206d565b6001600160a01b038616600090815260026020908152604080832087845290915290205483811015611e705760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b604482015260640161077f565b6001600160a01b0380881660009081526002602081815260408084208a855282528084208987039055938a16835290815282822088835290529081208054869290611ebc908490612e91565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611f1c8288888888886121c4565b50505050505050565b6001600160a01b038316611f6c5760405162461bcd60e51b815260206004820152600e60248201526d232927a6afad22a927afa0a2222960911b604482015260640161077f565b33611f9b81856000611f7d8761206d565b611f868761206d565b604051806020016040528060008152506120b8565b6001600160a01b0384166000908152600260209081526040808320868452909152902054828110156120025760405162461bcd60e51b815260206004820152601060248201526f125394d551919250d251539517d0905360821b604482015260640161077f565b6001600160a01b03858116600081815260026020908152604080832089845282528083208887039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106120a7576120a7612e01565b602090810291909101015292915050565b6001600160a01b03851661213f5760005b835181101561213d578281815181106120e4576120e4612e01565b6020026020010151600c600086848151811061210257612102612e01565b6020026020010151815260200190815260200160002060008282546121279190612e91565b90915550612136905081612e76565b90506120c9565b505b6001600160a01b0384166118b45760005b8351811015611f1c5782818151811061216b5761216b612e01565b6020026020010151600c600086848151811061218957612189612e01565b6020026020010151815260200190815260200160002060008282546121ae9190612ef0565b909155506121bd905081612e76565b9050612150565b6001600160a01b0384163b156118b45760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906122089089908990889088908890600401612fd0565b6020604051808303816000875af1925050508015612243575060408051601f3d908101601f1916820190925261224091810190613013565b60015b6122d35761224f613030565b806308c379a01415612289575061226461304c565b8061226f575061228b565b8060405162461bcd60e51b815260040161077f9190612682565b505b60405162461bcd60e51b815260206004820152601060248201527f2145524331313535524543454956455200000000000000000000000000000000604482015260640161077f565b6001600160e01b0319811663f23a6e6160e01b14611f1c5760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b604482015260640161077f565b6001600160a01b0384163b156118b45760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061236990899089908890889088906004016130d6565b6020604051808303816000875af19250505080156123a4575060408051601f3d908101601f191682019092526123a191810190613013565b60015b6123b05761224f613030565b6001600160e01b0319811663bc197c8160e01b14611f1c5760405162461bcd60e51b815260206004820152600f60248201526e1513d2d15394d7d491529150d51151608a1b604482015260640161077f565b60606001600160a01b0384163b61246a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161077f565b600080856001600160a01b0316856040516124859190613128565b600060405180830381855af49150503d80600081146124c0576040519150601f19603f3d011682016040523d82523d6000602084013e6124c5565b606091505b50915091506124d58282866124df565b9695505050505050565b606083156124ee575081611d40565b8251156124fe5782518084602001fd5b8160405162461bcd60e51b815260040161077f9190612682565b82805461252490612d97565b90600052602060002090601f016020900481019282612546576000855561258c565b82601f1061255f57805160ff191683800117855561258c565b8280016001018555821561258c579182015b8281111561258c578251825591602001919060010190612571565b5061259892915061259c565b5090565b5b80821115612598576000815560010161259d565b80356001600160a01b03811681146125c857600080fd5b919050565b600080604083850312156125e057600080fd5b6125e9836125b1565b946020939093013593505050565b6001600160e01b03198116811461079157600080fd5b60006020828403121561261f57600080fd5b8135611d40816125f7565b60005b8381101561264557818101518382015260200161262d565b83811115610d1f5750506000910152565b6000815180845261266e81602086016020860161262a565b601f01601f19169290920160200192915050565b602081526000611d406020830184612656565b6000602082840312156126a757600080fd5b5035919050565b6000602082840312156126c057600080fd5b611d40826125b1565b600080604083850312156126dc57600080fd5b50508035926020909101359150565b60008060006060848603121561270057600080fd5b612709846125b1565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561275a5761275a61271e565b6040525050565b600067ffffffffffffffff82111561277b5761277b61271e565b5060051b60200190565b600082601f83011261279657600080fd5b813560206127a382612761565b6040516127b08282612734565b83815260059390931b85018201928281019150868411156127d057600080fd5b8286015b848110156127eb57803583529183019183016127d4565b509695505050505050565b600067ffffffffffffffff8311156128105761281061271e565b604051612827601f8501601f191660200182612734565b80915083815284848401111561283c57600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261286557600080fd5b611d40838335602085016127f6565b600080600080600060a0868803121561288c57600080fd5b612895866125b1565b94506128a3602087016125b1565b9350604086013567ffffffffffffffff808211156128c057600080fd5b6128cc89838a01612785565b945060608801359150808211156128e257600080fd5b6128ee89838a01612785565b9350608088013591508082111561290457600080fd5b5061291188828901612854565b9150509295509295909350565b6000806040838503121561293157600080fd5b823567ffffffffffffffff8082111561294957600080fd5b818501915085601f83011261295d57600080fd5b8135602061296a82612761565b6040516129778282612734565b83815260059390931b850182019282810191508984111561299757600080fd5b948201945b838610156129bc576129ad866125b1565b8252948201949082019061299c565b965050860135925050808211156129d257600080fd5b506129df85828601612785565b9150509250929050565b600081518084526020808501945080840160005b83811015612a19578151875295820195908201906001016129fd565b509495945050505050565b602081526000611d4060208301846129e9565b600080600060608486031215612a4c57600080fd5b612a55846125b1565b9250602084013567ffffffffffffffff80821115612a7257600080fd5b612a7e87838801612785565b93506040860135915080821115612a9457600080fd5b50612aa186828701612785565b9150509250925092565b600060208284031215612abd57600080fd5b813567ffffffffffffffff811115612ad457600080fd5b8201601f81018413612ae557600080fd5b611511848235602084016127f6565b600080600060608486031215612b0957600080fd5b83359250612b19602085016125b1565b9150604084013590509250925092565b60008060408385031215612b3c57600080fd5b612b45836125b1565b915060208301358015158114612b5a57600080fd5b809150509250929050565b60008060208385031215612b7857600080fd5b823567ffffffffffffffff80821115612b9057600080fd5b818501915085601f830112612ba457600080fd5b813581811115612bb357600080fd5b8660208260051b8501011115612bc857600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612c2f57603f19888603018452612c1d858351612656565b94509285019290850190600101612c01565b5092979650505050505050565b60008083601f840112612c4e57600080fd5b50813567ffffffffffffffff811115612c6657600080fd5b602083019150836020828501011115612c7e57600080fd5b9250929050565b600080600080600060608688031215612c9d57600080fd5b85359450602086013567ffffffffffffffff80821115612cbc57600080fd5b612cc889838a01612c3c565b90965094506040880135915080821115612ce157600080fd5b50612cee88828901612c3c565b969995985093965092949392505050565b60008060408385031215612d1257600080fd5b612d1b836125b1565b9150612d29602084016125b1565b90509250929050565b600080600080600060a08688031215612d4a57600080fd5b612d53866125b1565b9450612d61602087016125b1565b93506040860135925060608601359150608086013567ffffffffffffffff811115612d8b57600080fd5b61291188828901612854565b600181811c90821680612dab57607f821691505b60208210811415612dcc57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351612de481846020880161262a565b835190830190612df881836020880161262a565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612e4757612e47612e17565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612e7157612e71612e4c565b500490565b6000600019821415612e8a57612e8a612e17565b5060010190565b60008219821115612ea457612ea4612e17565b500190565b6000808335601e19843603018112612ec057600080fd5b83018035915067ffffffffffffffff821115612edb57600080fd5b602001915036819003821315612c7e57600080fd5b600082821015612f0257612f02612e17565b500390565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b858152606060208201526000612f4a606083018688612f07565b8281036040840152612f5d818587612f07565b98975050505050505050565b600082612f7857612f78612e4c565b500690565b604081526000612f9060408301856129e9565b8281036020840152612fa281856129e9565b95945050505050565b604081526000612fbe6040830185612656565b8281036020840152612fa28185612656565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261300860a0830184612656565b979650505050505050565b60006020828403121561302557600080fd5b8151611d40816125f7565b600060033d11156130495760046000803e5060005160e01c5b90565b600060443d101561305a5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561308a57505050505090565b82850191508151818111156130a25750505050505090565b843d87010160208285010111156130bc5750505050505090565b6130cb60208286010187612734565b509095945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261310260a08301866129e9565b828103606084015261311481866129e9565b90508281036080840152612f5d8185612656565b6000825161313a81846020870161262a565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ee5e4b69978a95db3af1bfd10bf8b213a2a05fe78bd9a17f50049acd1a4b69fb64736f6c634300080c0033";

const isSuperArgs$D = xs => xs.length > 1;

class ERC1155LazyMint__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$D(args)) {
      super(...args);
    } else {
      super(_abi$1T, _bytecode$D, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1T);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1T, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC1155LazyMint__factory, "bytecode", _bytecode$D);

defineProperty._defineProperty(ERC1155LazyMint__factory, "abi", _abi$1T);

const _abi$1S = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "Paused",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "Unpaused",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }],
  name: "burnBatch",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "mint",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "mintBatch",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155BatchReceived",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC721Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "pause",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "paused",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "unpause",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$C = "0x608060405234801561001057600080fd5b50612dd1806100206000396000f3fe608060405234801561001057600080fd5b50600436106101b85760003560e01c8063731133e9116100f9578063bd85b03911610097578063e985e9c511610071578063e985e9c514610415578063f23a6e6114610452578063f242432a14610471578063f5298aca1461048457600080fd5b8063bd85b039146103ce578063ca15c873146103ef578063d547741f1461040257600080fd5b806391d14854116100d357806391d148541461035b578063a217fddf14610394578063a22cb4651461039c578063bc197c81146103af57600080fd5b8063731133e9146103155780638456cb59146103285780639010d07c1461033057600080fd5b80632eb2c2d6116101665780633f4ba83a116101405780633f4ba83a146102ce5780634e1273f4146102d65780635c975abb146102f65780636b20c4541461030257600080fd5b80632eb2c2d6146102955780632f2ff15d146102a857806336568abe146102bb57600080fd5b8063150b7a0211610197578063150b7a02146102265780631f7fdffa1461025d578063248a9ca31461027257600080fd5b8062fdd58e146101bd57806301ffc9a7146101e35780630e89341c14610206575b600080fd5b6101d06101cb36600461239a565b610497565b6040519081526020015b60405180910390f35b6101f66101f13660046123dd565b610534565b60405190151581526020016101da565b6102196102143660046123fa565b61053f565b6040516101da919061246b565b610244610234366004612535565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016101da565b61027061026b366004612632565b6105d4565b005b6101d06102803660046123fa565b600090815260fb602052604090206001015490565b6102706102a33660046126bf565b610654565b6102706102b6366004612769565b6106f6565b6102706102c9366004612769565b610721565b6102706107ad565b6102e96102e4366004612795565b610825565b6040516101da919061289b565b6101c35460ff166101f6565b6102706103103660046128ae565b61094f565b610270610323366004612922565b6109d4565b610270610a4e565b61034361033e36600461296b565b610ac4565b6040516001600160a01b0390911681526020016101da565b6101f6610369366004612769565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6101d0600081565b6102706103aa36600461298d565b610ae4565b6102446103bd3660046126bf565b63bc197c8160e01b95945050505050565b6101d06103dc3660046123fa565b6000908152610227602052604090205490565b6101d06103fd3660046123fa565b610aef565b610270610410366004612769565b610b07565b6101f66104233660046129c9565b6001600160a01b0391821660009081526101606020908152604080832093909416825291909152205460ff1690565b6102446104603660046129f3565b63f23a6e6160e01b95945050505050565b61027061047f3660046129f3565b610b2d565b610270610492366004612a58565b610bb4565b60006001600160a01b0383166105085760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b50600081815261015f602090815260408083206001600160a01b03861684529091529020545b92915050565b600061052e82610c39565b6060610161805461054f90612a8b565b80601f016020809104026020016040519081016040528092919081815260200182805461057b90612a8b565b80156105c85780601f1061059d576101008083540402835291602001916105c8565b820191906000526020600020905b8154815290600101906020018083116105ab57829003601f168201915b50505050509050919050565b6105fe7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610369565b6106425760405162461bcd60e51b81526020600482015260156024820152746d7573742068617665206d696e74657220726f6c6560581b60448201526064016104ff565b61064e84848484610c79565b50505050565b6001600160a01b03851633148061067057506106708533610423565b6106e25760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016104ff565b6106ef8585858585610e50565b5050505050565b600082815260fb602052604090206001015461071281336110c1565b61071c8383611141565b505050565b6001600160a01b038116331461079f5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016104ff565b6107a98282611164565b5050565b6107d77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610369565b61081b5760405162461bcd60e51b81526020600482015260156024820152746d75737420686176652070617573657220726f6c6560581b60448201526064016104ff565b610823611187565b565b6060815183511461088a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016104ff565b6000835167ffffffffffffffff8111156108a6576108a661247e565b6040519080825280602002602001820160405280156108cf578160200160208202803683370190505b50905060005b84518110156109475761091a8582815181106108f3576108f3612ac6565b602002602001015185838151811061090d5761090d612ac6565b6020026020010151610497565b82828151811061092c5761092c612ac6565b602090810291909101015261094081612af2565b90506108d5565b509392505050565b6001600160a01b03831633148061096b575061096b8333610423565b6109c95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104ff565b61071c838383611225565b6109fe7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610369565b610a425760405162461bcd60e51b81526020600482015260156024820152746d7573742068617665206d696e74657220726f6c6560581b60448201526064016104ff565b61064e84848484611471565b610a787f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610369565b610abc5760405162461bcd60e51b81526020600482015260156024820152746d75737420686176652070617573657220726f6c6560581b60448201526064016104ff565b610823611584565b600082815261012d60205260408120610add908361160e565b9392505050565b6107a933838361161a565b600081815261012d6020526040812061052e906116fc565b600082815260fb6020526040902060010154610b2381336110c1565b61071c8383611164565b6001600160a01b038516331480610b495750610b498533610423565b610ba75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104ff565b6106ef8585858585611706565b6001600160a01b038316331480610bd05750610bd08333610423565b610c2e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104ff565b61071c8383836118aa565b60006001600160e01b03198216636cdb3d1360e11b1480610c6a57506001600160e01b031982166303a24d0760e21b145b8061052e575061052e82611a29565b6001600160a01b038416610cd95760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016104ff565b8151835114610d3b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104ff565b33610d4b81600087878787611a4e565b60005b8451811015610de857838181518110610d6957610d69612ac6565b602002602001015161015f6000878481518110610d8857610d88612ac6565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610dd09190612b0d565b90915550819050610de081612af2565b915050610d4e565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610e39929190612b25565b60405180910390a46106ef81600087878787611b6a565b8151835114610eb25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104ff565b6001600160a01b038416610f165760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016104ff565b33610f25818787878787611a4e565b60005b8451811015611053576000858281518110610f4557610f45612ac6565b602002602001015190506000858381518110610f6357610f63612ac6565b602090810291909101810151600084815261015f835260408082206001600160a01b038e168352909352919091205490915081811015610ff85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016104ff565b600083815261015f602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611038908490612b0d565b925050819055505050508061104c90612af2565b9050610f28565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516110a3929190612b25565b60405180910390a46110b9818787878787611b6a565b505050505050565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff166107a9576110ff816001600160a01b03166014611d10565b61110a836020611d10565b60405160200161111b929190612b53565b60408051601f198184030181529082905262461bcd60e51b82526104ff9160040161246b565b61114b8282611eb9565b600082815261012d6020526040902061071c9082611f5b565b61116e8282611f70565b600082815261012d6020526040902061071c9082611ff3565b6101c35460ff166111da5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104ff565b6101c3805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0383166112875760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104ff565b80518251146112e95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104ff565b600033905061130c81856000868660405180602001604052806000815250611a4e565b60005b835181101561141257600084828151811061132c5761132c612ac6565b60200260200101519050600084838151811061134a5761134a612ac6565b602090810291909101810151600084815261015f835260408082206001600160a01b038c1683529093529190912054909150818110156113d85760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104ff565b600092835261015f602090815260408085206001600160a01b038b168652909152909220910390558061140a81612af2565b91505061130f565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611463929190612b25565b60405180910390a450505050565b6001600160a01b0384166114d15760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016104ff565b336114f1816000876114e288612008565b6114eb88612008565b87611a4e565b600084815261015f602090815260408083206001600160a01b038916845290915281208054859290611524908490612b0d565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46106ef81600087878787612053565b6101c35460ff16156115d85760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016104ff565b6101c3805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112083390565b6000610add838361214f565b816001600160a01b0316836001600160a01b0316141561168e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016104ff565b6001600160a01b0383811660008181526101606020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600061052e825490565b6001600160a01b03841661176a5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016104ff565b3361177a8187876114e288612008565b600084815261015f602090815260408083206001600160a01b038a168452909152902054838110156118015760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016104ff565b600085815261015f602090815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611841908490612b0d565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46118a1828888888888612053565b50505050505050565b6001600160a01b03831661190c5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104ff565b3361193b8185600061191d87612008565b61192687612008565b60405180602001604052806000815250611a4e565b600083815261015f602090815260408083206001600160a01b0388168452909152902054828110156119bb5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104ff565b600084815261015f602090815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b60006001600160e01b03198216635a05180f60e01b148061052e575061052e82612179565b611a5c86868686868661219e565b6001600160a01b038516611ae45760005b8351811015611ae257828181518110611a8857611a88612ac6565b60200260200101516102276000868481518110611aa757611aa7612ac6565b602002602001015181526020019081526020016000206000828254611acc9190612b0d565b90915550611adb905081612af2565b9050611a6d565b505b6001600160a01b0384166110b95760005b83518110156118a157828181518110611b1057611b10612ac6565b60200260200101516102276000868481518110611b2f57611b2f612ac6565b602002602001015181526020019081526020016000206000828254611b549190612bd4565b90915550611b63905081612af2565b9050611af5565b6001600160a01b0384163b156110b95760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611bae9089908990889088908890600401612beb565b6020604051808303816000875af1925050508015611be9575060408051601f3d908101601f19168201909252611be691810190612c49565b60015b611c9f57611bf5612c66565b806308c379a01415611c2f5750611c0a612c82565b80611c155750611c31565b8060405162461bcd60e51b81526004016104ff919061246b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016104ff565b6001600160e01b0319811663bc197c8160e01b146118a15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016104ff565b60606000611d1f836002612d0c565b611d2a906002612b0d565b67ffffffffffffffff811115611d4257611d4261247e565b6040519080825280601f01601f191660200182016040528015611d6c576020820181803683370190505b509050600360fc1b81600081518110611d8757611d87612ac6565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611db657611db6612ac6565b60200101906001600160f81b031916908160001a9053506000611dda846002612d0c565b611de5906001612b0d565b90505b6001811115611e6a577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611e2657611e26612ac6565b1a60f81b828281518110611e3c57611e3c612ac6565b60200101906001600160f81b031916908160001a90535060049490941c93611e6381612d2b565b9050611de8565b508315610add5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104ff565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff166107a957600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611f173390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610add836001600160a01b038416612207565b600082815260fb602090815260408083206001600160a01b038516845290915290205460ff16156107a957600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610add836001600160a01b038416612256565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061204257612042612ac6565b602090810291909101015292915050565b6001600160a01b0384163b156110b95760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906120979089908990889088908890600401612d42565b6020604051808303816000875af19250505080156120d2575060408051601f3d908101601f191682019092526120cf91810190612c49565b60015b6120de57611bf5612c66565b6001600160e01b0319811663f23a6e6160e01b146118a15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016104ff565b600082600001828154811061216657612166612ac6565b9060005260206000200154905092915050565b60006001600160e01b03198216637965db0b60e01b148061052e575061052e82612349565b6101c35460ff16156110b95760405162461bcd60e51b815260206004820152602c60248201527f455243313135355061757361626c653a20746f6b656e207472616e736665722060448201526b1dda1a5b19481c185d5cd95960a21b60648201526084016104ff565b600081815260018301602052604081205461224e5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561052e565b50600061052e565b6000818152600183016020526040812054801561233f57600061227a600183612bd4565b855490915060009061228e90600190612bd4565b90508181146122f35760008660000182815481106122ae576122ae612ac6565b90600052602060002001549050808760000184815481106122d1576122d1612ac6565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061230457612304612d85565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061052e565b600091505061052e565b60006001600160e01b03198216630271189760e51b148061052e57506301ffc9a760e01b6001600160e01b031983161461052e565b80356001600160a01b038116811461239557600080fd5b919050565b600080604083850312156123ad57600080fd5b6123b68361237e565b946020939093013593505050565b6001600160e01b0319811681146123da57600080fd5b50565b6000602082840312156123ef57600080fd5b8135610add816123c4565b60006020828403121561240c57600080fd5b5035919050565b60005b8381101561242e578181015183820152602001612416565b8381111561064e5750506000910152565b60008151808452612457816020860160208601612413565b601f01601f19169290920160200192915050565b602081526000610add602083018461243f565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156124ba576124ba61247e565b6040525050565b600082601f8301126124d257600080fd5b813567ffffffffffffffff8111156124ec576124ec61247e565b604051612503601f8301601f191660200182612494565b81815284602083860101111561251857600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561254b57600080fd5b6125548561237e565b93506125626020860161237e565b925060408501359150606085013567ffffffffffffffff81111561258557600080fd5b612591878288016124c1565b91505092959194509250565b600067ffffffffffffffff8211156125b7576125b761247e565b5060051b60200190565b600082601f8301126125d257600080fd5b813560206125df8261259d565b6040516125ec8282612494565b83815260059390931b850182019282810191508684111561260c57600080fd5b8286015b848110156126275780358352918301918301612610565b509695505050505050565b6000806000806080858703121561264857600080fd5b6126518561237e565b9350602085013567ffffffffffffffff8082111561266e57600080fd5b61267a888389016125c1565b9450604087013591508082111561269057600080fd5b61269c888389016125c1565b935060608701359150808211156126b257600080fd5b50612591878288016124c1565b600080600080600060a086880312156126d757600080fd5b6126e08661237e565b94506126ee6020870161237e565b9350604086013567ffffffffffffffff8082111561270b57600080fd5b61271789838a016125c1565b9450606088013591508082111561272d57600080fd5b61273989838a016125c1565b9350608088013591508082111561274f57600080fd5b5061275c888289016124c1565b9150509295509295909350565b6000806040838503121561277c57600080fd5b8235915061278c6020840161237e565b90509250929050565b600080604083850312156127a857600080fd5b823567ffffffffffffffff808211156127c057600080fd5b818501915085601f8301126127d457600080fd5b813560206127e18261259d565b6040516127ee8282612494565b83815260059390931b850182019282810191508984111561280e57600080fd5b948201945b83861015612833576128248661237e565b82529482019490820190612813565b9650508601359250508082111561284957600080fd5b50612856858286016125c1565b9150509250929050565b600081518084526020808501945080840160005b8381101561289057815187529582019590820190600101612874565b509495945050505050565b602081526000610add6020830184612860565b6000806000606084860312156128c357600080fd5b6128cc8461237e565b9250602084013567ffffffffffffffff808211156128e957600080fd5b6128f5878388016125c1565b9350604086013591508082111561290b57600080fd5b50612918868287016125c1565b9150509250925092565b6000806000806080858703121561293857600080fd5b6129418561237e565b93506020850135925060408501359150606085013567ffffffffffffffff81111561258557600080fd5b6000806040838503121561297e57600080fd5b50508035926020909101359150565b600080604083850312156129a057600080fd5b6129a98361237e565b9150602083013580151581146129be57600080fd5b809150509250929050565b600080604083850312156129dc57600080fd5b6129e58361237e565b915061278c6020840161237e565b600080600080600060a08688031215612a0b57600080fd5b612a148661237e565b9450612a226020870161237e565b93506040860135925060608601359150608086013567ffffffffffffffff811115612a4c57600080fd5b61275c888289016124c1565b600080600060608486031215612a6d57600080fd5b612a768461237e565b95602085013595506040909401359392505050565b600181811c90821680612a9f57607f821691505b60208210811415612ac057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612b0657612b06612adc565b5060010190565b60008219821115612b2057612b20612adc565b500190565b604081526000612b386040830185612860565b8281036020840152612b4a8185612860565b95945050505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612b8b816017850160208801612413565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351612bc8816028840160208801612413565b01602801949350505050565b600082821015612be657612be6612adc565b500390565b60006001600160a01b03808816835280871660208401525060a06040830152612c1760a0830186612860565b8281036060840152612c298186612860565b90508281036080840152612c3d818561243f565b98975050505050505050565b600060208284031215612c5b57600080fd5b8151610add816123c4565b600060033d1115612c7f5760046000803e5060005160e01c5b90565b600060443d1015612c905790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612cc057505050505090565b8285019150815181811115612cd85750505050505090565b843d8701016020828501011115612cf25750505050505090565b612d0160208286010187612494565b509095945050505050565b6000816000190483118215151615612d2657612d26612adc565b500290565b600081612d3a57612d3a612adc565b506000190190565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612d7a60a083018461243f565b979650505050505050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220993ccb1cf3f8dd5da77c06a1f5c68ef96645c17803d1ec01fdc8ed650f830f3c64736f6c634300080c0033";

const isSuperArgs$C = xs => xs.length > 1;

class ERC1155PresetUpgradeable__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$C(args)) {
      super(...args);
    } else {
      super(_abi$1S, _bytecode$C, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1S);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1S, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC1155PresetUpgradeable__factory, "bytecode", _bytecode$C);

defineProperty._defineProperty(ERC1155PresetUpgradeable__factory, "abi", _abi$1S);

const _abi$1R = [{
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "onERC1155BatchReceived",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "onERC1155Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
class ERC1155Receiver__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1R);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1R, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC1155Receiver__factory, "abi", _abi$1R);

const _abi$1Q = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "_value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "_tokenIds",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "_amounts",
    type: "uint256[]"
  }, {
    internalType: "string",
    name: "_baseURI",
    type: "string"
  }],
  name: "batchMintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "_tokenIds",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "_amounts",
    type: "uint256[]"
  }],
  name: "burnBatch",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_tokenURI",
    type: "string"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$B = "";

const isSuperArgs$B = xs => xs.length > 1;

class ERC1155SignatureMint__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$B(args)) {
      super(...args);
    } else {
      super(_abi$1Q, _bytecode$B, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1Q);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1Q, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC1155SignatureMint__factory, "bytecode", _bytecode$B);

defineProperty._defineProperty(ERC1155SignatureMint__factory, "abi", _abi$1Q);

const _abi$1P = [{
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
class ERC165__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1P);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1P, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC165__factory, "abi", _abi$1P);

const _abi$1O = [{
  inputs: [{
    internalType: "string",
    name: "name_",
    type: "string"
  }, {
    internalType: "string",
    name: "symbol_",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$A = "0x60806040523480156200001157600080fd5b5060405162000b7038038062000b708339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b6108de80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100b95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d57600080fd5b8063395093511461013357806370a082311461014657806395d89b411461016f57600080fd5b806306fdde03146100be578063095ea7b3146100dc57806318160ddd146100ff57806323b872dd14610111578063313ce56714610124575b600080fd5b6100c66101d6565b6040516100d3919061071b565b60405180910390f35b6100ef6100ea36600461078c565b610268565b60405190151581526020016100d3565b6002545b6040519081526020016100d3565b6100ef61011f3660046107b6565b610280565b604051601281526020016100d3565b6100ef61014136600461078c565b6102a4565b6101036101543660046107f2565b6001600160a01b031660009081526020819052604090205490565b6100c66102e3565b6100ef61018536600461078c565b6102f2565b6100ef61019836600461078c565b610389565b6101036101ab366004610814565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101e590610847565b80601f016020809104026020016040519081016040528092919081815260200182805461021190610847565b801561025e5780601f106102335761010080835404028352916020019161025e565b820191906000526020600020905b81548152906001019060200180831161024157829003601f168201915b5050505050905090565b600033610276818585610397565b5060019392505050565b60003361028e8582856104bb565b61029985858561054d565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061027690829086906102de908790610882565b610397565b6060600480546101e590610847565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561037c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102998286868403610397565b60003361027681858561054d565b6001600160a01b0383166103f95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610373565b6001600160a01b03821661045a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610373565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610547578181101561053a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610373565b6105478484848403610397565b50505050565b6001600160a01b0383166105b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610373565b6001600160a01b0382166106135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610373565b6001600160a01b0383166000908152602081905260409020548181101561068b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610373565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106c2908490610882565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070e91815260200190565b60405180910390a3610547565b600060208083528351808285015260005b818110156107485785810183015185820160400152820161072c565b8181111561075a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461078757600080fd5b919050565b6000806040838503121561079f57600080fd5b6107a883610770565b946020939093013593505050565b6000806000606084860312156107cb57600080fd5b6107d484610770565b92506107e260208501610770565b9150604084013590509250925092565b60006020828403121561080457600080fd5b61080d82610770565b9392505050565b6000806040838503121561082757600080fd5b61083083610770565b915061083e60208401610770565b90509250929050565b600181811c9082168061085b57607f821691505b6020821081141561087c57634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156108a357634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220b0ce11044dead6f63c4264199cd8262550ed88a72bd36351f9833ee8f43a89ae64736f6c634300080c0033";

const isSuperArgs$A = xs => xs.length > 1;

class ERC20__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$A(args)) {
      super(...args);
    } else {
      super(_abi$1O, _bytecode$A, args[0]);
    }
  }

  deploy(name_, symbol_, overrides) {
    return super.deploy(name_, symbol_, overrides || {});
  }

  getDeployTransaction(name_, symbol_, overrides) {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1O);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1O, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC20__factory, "bytecode", _bytecode$A);

defineProperty._defineProperty(ERC20__factory, "abi", _abi$1O);

const _abi$1N = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$z = "0x6101006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b506040516200209b3803806200209b8339810160408190526200005991620003af565b818181818160059080519060200190620000759291906200023c565b5080516200008b9060069060208401906200023c565b50504660a052503060c052620000a0620000b9565b60805250620000b190503362000150565b505062000456565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620000e6620001a2565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b606060058054620001b39062000419565b80601f0160208091040260200160405190810160405280929190818152602001828054620001e19062000419565b8015620002325780601f10620002065761010080835404028352916020019162000232565b820191906000526020600020905b8154815290600101906020018083116200021457829003601f168201915b5050505050905090565b8280546200024a9062000419565b90600052602060002090601f0160209004810192826200026e5760008555620002b9565b82601f106200028957805160ff1916838001178555620002b9565b82800160010185558215620002b9579182015b82811115620002b95782518255916020019190600101906200029c565b50620002c7929150620002cb565b5090565b5b80821115620002c75760008155600101620002cc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200030a57600080fd5b81516001600160401b0380821115620003275762000327620002e2565b604051601f8301601f19908116603f01168101908282118183101715620003525762000352620002e2565b816040528381526020925086838588010111156200036f57600080fd5b600091505b8382101562000393578582018301518183018401529082019062000374565b83821115620003a55760008385830101525b9695505050505050565b60008060408385031215620003c357600080fd5b82516001600160401b0380821115620003db57600080fd5b620003e986838701620002f8565b935060208501519150808211156200040057600080fd5b506200040f85828601620002f8565b9150509250929050565b600181811c908216806200042e57607f821691505b602082108114156200045057634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051611c0b6200049060003960006108970152600061046c01526000610496015260006104c00152611c0b6000f3fe608060405234801561001057600080fd5b50600436106101475760003560e01c806370a08231116100c8578063a457c2d71161008c578063d505accf11610066578063d505accf146102e5578063dd62ed3e146102f8578063e8a3d4851461033157600080fd5b8063a457c2d71461029f578063a9059cbb146102b2578063ac9650d8146102c557600080fd5b806370a08231146102175780637ecebe00146102405780638da5cb5b14610269578063938e3d7b1461028457806395d89b411461029757600080fd5b8063313ce5671161010f578063313ce567146101c75780633644e515146101d657806339509351146101de57806342966c68146101f1578063449a52f81461020457600080fd5b806306fdde031461014c578063095ea7b31461016a57806313af40351461018d57806318160ddd146101a257806323b872dd146101b4575b600080fd5b610154610339565b6040516101619190611748565b60405180910390f35b61017d610178366004611777565b6103cb565b6040519015158152602001610161565b6101a061019b3660046117a1565b6103e3565b005b6004545b604051908152602001610161565b61017d6101c23660046117bc565b610439565b60405160128152602001610161565b6101a661045f565b61017d6101ec366004611777565b6104ef565b6101a06101ff3660046117f8565b61052e565b6101a0610212366004611777565b610597565b6101a66102253660046117a1565b6001600160a01b031660009081526002602052604090205490565b6101a661024e3660046117a1565b6001600160a01b031660009081526007602052604090205490565b6001546040516001600160a01b039091168152602001610161565b6101a0610292366004611827565b610646565b610154610694565b61017d6102ad366004611777565b6106a3565b61017d6102c0366004611777565b610740565b6102d86102d33660046118d8565b61074e565b604051610161919061194d565b6101a06102f33660046119af565b610843565b6101a6610306366004611a22565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6101546109ea565b60606005805461034890611a55565b80601f016020809104026020016040519081016040528092919081815260200182805461037490611a55565b80156103c15780601f10610396576101008083540402835291602001916103c1565b820191906000526020600020905b8154815290600101906020018083116103a457829003601f168201915b5050505050905090565b6000336103d9818585610a78565b5060019392505050565b6103eb610b9d565b61042d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b61043681610bca565b50565b600033610447858285610c29565b610452858585610cbb565b60019150505b9392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156104b857507f000000000000000000000000000000000000000000000000000000000000000046145b156104e257507f000000000000000000000000000000000000000000000000000000000000000090565b6104ea610e89565b905090565b3360008181526003602090815260408083206001600160a01b03871684529091528120549091906103d99082908690610529908790611aa0565b610a78565b3360009081526002602052604090205481111561058d5760405162461bcd60e51b815260206004820152601260248201527f6e6f7420656e6f7567682062616c616e636500000000000000000000000000006044820152606401610424565b6104363382610f1e565b61059f610b9d565b6105eb5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e0000000000000000006044820152606401610424565b806106385760405162461bcd60e51b815260206004820152601460248201527f4d696e74696e67207a65726f20746f6b656e732e0000000000000000000000006044820152606401610424565b6106428282611064565b5050565b61064e610b9d565b61068b5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610424565b61043681611143565b60606006805461034890611a55565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909190838110156107285760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610424565b6107358286868403610a78565b506001949350505050565b6000336103d9818585610cbb565b60608167ffffffffffffffff81111561076957610769611811565b60405190808252806020026020018201604052801561079c57816020015b60608152602001906001900390816107875790505b50905060005b8281101561083c5761080c308585848181106107c0576107c0611ab8565b90506020028101906107d29190611ace565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061122492505050565b82828151811061081e5761081e611ab8565b6020026020010181905250808061083490611b1c565b9150506107a2565b5092915050565b834211156108935760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610424565b60007f00000000000000000000000000000000000000000000000000000000000000008888886108c28c611249565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061096061091f61045f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b9050600061097082878787611271565b9050896001600160a01b0316816001600160a01b0316146109d35760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610424565b6109de8a8a8a610a78565b50505050505050505050565b600080546109f790611a55565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2390611a55565b8015610a705780601f10610a4557610100808354040283529160200191610a70565b820191906000526020600020905b815481529060010190602001808311610a5357829003601f168201915b505050505081565b6001600160a01b038316610ada5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610424565b6001600160a01b038216610b3b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610424565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610bb16001546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6001600160a01b038381166000908152600360209081526040808320938616835292905220546000198114610cb55781811015610ca85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610424565b610cb58484848403610a78565b50505050565b6001600160a01b038316610d1f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610424565b6001600160a01b038216610d815760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610424565b6001600160a01b03831660009081526002602052604090205481811015610df95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610424565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290610e30908490611aa0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e7c91815260200190565b60405180910390a3610cb5565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610eb4610339565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216610f7e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610424565b6001600160a01b03821660009081526002602052604090205481811015610ff25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610424565b6001600160a01b0383166000908152600260205260408120838303905560048054849290611021908490611b37565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610b90565b6001600160a01b0382166110ba5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610424565b80600460008282546110cc9190611aa0565b90915550506001600160a01b038216600090815260026020526040812080548392906110f9908490611aa0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080805461115190611a55565b80601f016020809104026020016040519081016040528092919081815260200182805461117d90611a55565b80156111ca5780601f1061119f576101008083540402835291602001916111ca565b820191906000526020600020905b8154815290600101906020018083116111ad57829003601f168201915b505085519394506111e693600093506020870192509050611657565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611218929190611b4e565b60405180910390a15050565b60606104588383604051806060016040528060278152602001611baf60279139611299565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600080600061128287878787611376565b9150915061128f81611463565b5095945050505050565b60606001600160a01b0384163b6113015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610424565b600080856001600160a01b03168560405161131c9190611b7c565b600060405180830381855af49150503d8060008114611357576040519150601f19603f3d011682016040523d82523d6000602084013e61135c565b606091505b509150915061136c82828661161e565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156113ad575060009050600361145a565b8460ff16601b141580156113c557508460ff16601c14155b156113d6575060009050600461145a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561142a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114535760006001925092505061145a565b9150600090505b94509492505050565b600081600481111561147757611477611b98565b14156114805750565b600181600481111561149457611494611b98565b14156114e25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610424565b60028160048111156114f6576114f6611b98565b14156115445760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610424565b600381600481111561155857611558611b98565b14156115b15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610424565b60048160048111156115c5576115c5611b98565b14156104365760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610424565b6060831561162d575081610458565b82511561163d5782518084602001fd5b8160405162461bcd60e51b81526004016104249190611748565b82805461166390611a55565b90600052602060002090601f01602090048101928261168557600085556116cb565b82601f1061169e57805160ff19168380011785556116cb565b828001600101855582156116cb579182015b828111156116cb5782518255916020019190600101906116b0565b506116d79291506116db565b5090565b5b808211156116d757600081556001016116dc565b60005b8381101561170b5781810151838201526020016116f3565b83811115610cb55750506000910152565b600081518084526117348160208601602086016116f0565b601f01601f19169290920160200192915050565b602081526000610458602083018461171c565b80356001600160a01b038116811461177257600080fd5b919050565b6000806040838503121561178a57600080fd5b6117938361175b565b946020939093013593505050565b6000602082840312156117b357600080fd5b6104588261175b565b6000806000606084860312156117d157600080fd5b6117da8461175b565b92506117e86020850161175b565b9150604084013590509250925092565b60006020828403121561180a57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561183957600080fd5b813567ffffffffffffffff8082111561185157600080fd5b818401915084601f83011261186557600080fd5b81358181111561187757611877611811565b604051601f8201601f19908116603f0116810190838211818310171561189f5761189f611811565b816040528281528760208487010111156118b857600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080602083850312156118eb57600080fd5b823567ffffffffffffffff8082111561190357600080fd5b818501915085601f83011261191757600080fd5b81358181111561192657600080fd5b8660208260051b850101111561193b57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156119a257603f1988860301845261199085835161171c565b94509285019290850190600101611974565b5092979650505050505050565b600080600080600080600060e0888a0312156119ca57600080fd5b6119d38861175b565b96506119e16020890161175b565b95506040880135945060608801359350608088013560ff81168114611a0557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611a3557600080fd5b611a3e8361175b565b9150611a4c6020840161175b565b90509250929050565b600181811c90821680611a6957607f821691505b6020821081141561126b57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611ab357611ab3611a8a565b500190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611ae557600080fd5b83018035915067ffffffffffffffff821115611b0057600080fd5b602001915036819003821315611b1557600080fd5b9250929050565b6000600019821415611b3057611b30611a8a565b5060010190565b600082821015611b4957611b49611a8a565b500390565b604081526000611b61604083018561171c565b8281036020840152611b73818561171c565b95945050505050565b60008251611b8e8184602087016116f0565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122096fb229df5661e63e1d29d6ba6f0c990ba06b34fe441a01cb496324e0e8d584564736f6c634300080c0033";

const isSuperArgs$z = xs => xs.length > 1;

class ERC20Base__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$z(args)) {
      super(...args);
    } else {
      super(_abi$1N, _bytecode$z, args[0]);
    }
  }

  deploy(_name, _symbol, overrides) {
    return super.deploy(_name, _symbol, overrides || {});
  }

  getDeployTransaction(_name, _symbol, overrides) {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1N);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1N, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC20Base__factory, "bytecode", _bytecode$z);

defineProperty._defineProperty(ERC20Base__factory, "abi", _abi$1N);

const _abi$1M = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "startTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "maxClaimableSupply",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "supplyClaimed",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "quantityLimitPerTransaction",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "waitTimeInSecondsBetweenClaims",
    type: "uint256"
  }, {
    internalType: "bytes32",
    name: "merkleRoot",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimedAt",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "_condition",
    type: "tuple"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$y = "0x6101006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b506040516200344238038062003442833981016040819052620000599162000405565b8282818181600590805190602001906200007592919062000292565b5080516200008b90600690602084019062000292565b50504660a052503060c052620000a0620000c5565b60805250620000b19050336200015c565b620000bc81620001ae565b505050620004cf565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620000f2620001f8565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600880546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b606060058054620002099062000492565b80601f0160208091040260200160405190810160405280929190818152602001828054620002379062000492565b8015620002885780601f106200025c5761010080835404028352916020019162000288565b820191906000526020600020905b8154815290600101906020018083116200026a57829003601f168201915b5050505050905090565b828054620002a09062000492565b90600052602060002090601f016020900481019282620002c457600085556200030f565b82601f10620002df57805160ff19168380011785556200030f565b828001600101855582156200030f579182015b828111156200030f578251825591602001919060010190620002f2565b506200031d92915062000321565b5090565b5b808211156200031d576000815560010162000322565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200036057600080fd5b81516001600160401b03808211156200037d576200037d62000338565b604051601f8301601f19908116603f01168101908282118183101715620003a857620003a862000338565b81604052838152602092508683858801011115620003c557600080fd5b600091505b83821015620003e95785820183015181830184015290820190620003ca565b83821115620003fb5760008385830101525b9695505050505050565b6000806000606084860312156200041b57600080fd5b83516001600160401b03808211156200043357600080fd5b62000441878388016200034e565b945060208601519150808211156200045857600080fd5b5062000467868287016200034e565b604086015190935090506001600160a01b03811681146200048757600080fd5b809150509250925092565b600181811c90821680620004a757607f821691505b60208210811415620004c957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051612f3962000509600039600061105d015260006107540152600061077e015260006107a80152612f396000f3fe6080604052600436106101b75760003560e01c80637ecebe00116100ec578063ac9650d81161008a578063d637ed5911610064578063d637ed591461050f578063dd62ed3e1461058f578063e8a3d485146105d5578063ffbb7a13146105ea57600080fd5b8063ac9650d81461048d578063b67875ce146104ba578063d505accf146104ef57600080fd5b806395d89b41116100c657806395d89b4114610418578063a457c2d71461042d578063a72e157d1461044d578063a9059cbb1461046d57600080fd5b80637ecebe00146103a45780638da5cb5b146103da578063938e3d7b146103f857600080fd5b80633644e515116101595780635ab31c1a116101335780635ab31c1a1461031b5780636f4f28371461032e57806370a082311461034e57806377312a9e1461038457600080fd5b80633644e515146102c657806339509351146102db57806342966c68146102fb57600080fd5b806313af40351161019557806313af40351461024957806318160ddd1461026b57806323b872dd1461028a578063313ce567146102aa57600080fd5b806306fdde03146101bc578063079fe40e146101e7578063095ea7b314610219575b600080fd5b3480156101c857600080fd5b506101d1610621565b6040516101de9190612790565b60405180910390f35b3480156101f357600080fd5b506008546001600160a01b03165b6040516001600160a01b0390911681526020016101de565b34801561022557600080fd5b506102396102343660046127bf565b6106b3565b60405190151581526020016101de565b34801561025557600080fd5b506102696102643660046127e9565b6106cb565b005b34801561027757600080fd5b506004545b6040519081526020016101de565b34801561029657600080fd5b506102396102a5366004612804565b610721565b3480156102b657600080fd5b50604051601281526020016101de565b3480156102d257600080fd5b5061027c610747565b3480156102e757600080fd5b506102396102f63660046127bf565b6107d7565b34801561030757600080fd5b50610269610316366004612840565b610816565b6102696103293660046128f7565b61087f565b34801561033a57600080fd5b506102696103493660046127e9565b6109a3565b34801561035a57600080fd5b5061027c6103693660046127e9565b6001600160a01b031660009081526002602052604090205490565b34801561039057600080fd5b5061026961039f3660046129b0565b6109f1565b3480156103b057600080fd5b5061027c6103bf3660046127e9565b6001600160a01b031660009081526007602052604090205490565b3480156103e657600080fd5b506001546001600160a01b0316610201565b34801561040457600080fd5b506102696104133660046129f1565b610bdc565b34801561042457600080fd5b506101d1610c2a565b34801561043957600080fd5b506102396104483660046127bf565b610c39565b34801561045957600080fd5b50610269610468366004612a3a565b610cd6565b34801561047957600080fd5b506102396104883660046127bf565b610ec9565b34801561049957600080fd5b506104ad6104a8366004612a95565b610ed7565b6040516101de9190612b0a565b3480156104c657600080fd5b506104da6104d53660046127e9565b610fcc565b604080519283526020830191909152016101de565b3480156104fb57600080fd5b5061026961050a366004612b6c565b611009565b34801561051b57600080fd5b50600954600a54600b54600c54600d54600e54600f5460105461054b97969594939291906001600160a01b031688565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c08301526001600160a01b031660e0820152610100016101de565b34801561059b57600080fd5b5061027c6105aa366004612bdf565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b3480156105e157600080fd5b506101d16111b0565b3480156105f657600080fd5b5061060a610605366004612c12565b61123e565b6040805192151583526020830191909152016101de565b60606005805461063090612c69565b80601f016020809104026020016040519081016040528092919081815260200182805461065c90612c69565b80156106a95780601f1061067e576101008083540402835291602001916106a9565b820191906000526020600020905b81548152906001019060200180831161068c57829003601f168201915b5050505050905090565b6000336106c181858561144a565b5060019392505050565b6106d361156f565b6107155760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b61071e8161159c565b50565b60003361072f8582856115ee565b61073a858585611680565b60019150505b9392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156107a057507f000000000000000000000000000000000000000000000000000000000000000046145b156107ca57507f000000000000000000000000000000000000000000000000000000000000000090565b6107d261184e565b905090565b3360008181526003602090815260408083206001600160a01b03871684529091528120549091906106c19082908690610811908790612cb4565b61144a565b336000908152600260205260409020548111156108755760405162461bcd60e51b815260206004820152601260248201527f6e6f7420656e6f7567682062616c616e63650000000000000000000000000000604482015260640161070c565b61071e33826118e3565b60115460008061089033898761123e565b9150915060008560200135600014806108a95750600e54155b90506108b8338a8a8a85610cd6565b8280156108c9575060008660200135115b156108f8576000848152601360209081526040808320600886901c845290915290208054600160ff85161b1790555b886009600201600082825461090d9190612cb4565b90915550506000848152601260209081526040808320338452909152812042905561093a908a8a8a611a36565b60006109468b8b611b57565b9050806001600160a01b038c16336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68d60405161098e91815260200190565b60405180910390a45050505050505050505050565b6109ab61156f565b6109e85760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161070c565b61071e81611b6c565b6109f961156f565b610a365760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161070c565b601154600b548215610a85575060003360405160609190911b6bffffffffffffffffffffffff191660208201524360348201526054016040516020818303038152906040528051906020012091505b8360200135811115610ad95760405162461bcd60e51b815260206004820152601260248201527f6d617820737570706c7920636c61696d65640000000000000000000000000000604482015260640161070c565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c0013581526020018560e0016020810190610b3a91906127e9565b6001600160a01b0390811690915281516009556020820151600a55604080830151600b556060830151600c556080830151600d5560a0830151600e5560c0830151600f5560e090920151601080546001600160a01b031916919092161790556011839055517f583ecce39d40d7b7653fd2cb1cdc19aa03714482ffd00fafa242355cdcd7908090610bce9086908690612ccc565b60405180910390a150505050565b610be461156f565b610c215760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161070c565b61071e81611bb6565b60606006805461063090612c69565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919083811015610cbe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161070c565b610ccb828686840361144a565b506001949350505050565b60408051610100810182526009548152600a546020820152600b5491810191909152600c546060820152600d546080820152600e5460a0820152600f5460c08201526010546001600160a01b0390811660e08301819052908516141580610d4157508060c001518314155b15610d8e5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207072696365206f722063757272656e637900000000000000604482015260640161070c565b841580610da65750818015610da65750806060015185115b15610df35760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207175616e7469747900000000000000000000000000000000604482015260640161070c565b8060200151858260400151610e089190612cb4565b1115610e565760405162461bcd60e51b815260206004820152601260248201527f65786365656473206d617820737570706c790000000000000000000000000000604482015260640161070c565b600080610e6288610fcc565b915091504283600001511180610e8157508115801590610e8157508042105b15610ebf5760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b604482015260640161070c565b5050505050505050565b6000336106c1818585611680565b60608167ffffffffffffffff811115610ef257610ef261286b565b604051908082528060200260200182016040528015610f2557816020015b6060815260200190600190039081610f105790505b50905060005b82811015610fc557610f9530858584818110610f4957610f49612d3e565b9050602002810190610f5b9190612d54565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c9792505050565b828281518110610fa757610fa7612d3e565b60200260200101819052508080610fbd90612da2565b915050610f2b565b5092915050565b60115460009081526012602090815260408083206001600160a01b0385168452909152902054600d5481018181101561100457506000195b915091565b834211156110595760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161070c565b60007f00000000000000000000000000000000000000000000000000000000000000008888886110888c611cbc565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006111266110e5610747565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b9050600061113682878787611ce4565b9050896001600160a01b0316816001600160a01b0316146111995760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161070c565b6111a48a8a8a61144a565b50505050505050505050565b600080546111bd90612c69565b80601f01602080910402602001604051908101604052809291908181526020018280546111e990612c69565b80156112365780601f1061120b57610100808354040283529160200191611236565b820191906000526020600020905b81548152906001019060200180831161121957829003601f168201915b505050505081565b60408051610100810182526009548152600a546020820152600b5491810191909152600c546060820152600d546080820152600e5460a08201819052600f5460c08301526010546001600160a01b031660e0830152600091829115611441576113266112aa8580612dbd565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516bffffffffffffffffffffffff1960608b901b16602080830191909152880135603482015260540160405160208183030381529060405280519060200120611d0c565b9093509150826113785760405162461bcd60e51b815260206004820152601060248201527f6e6f7420696e20616c6c6f776c69737400000000000000000000000000000000604482015260640161070c565b6011546000908152601360209081526040808320600886901c8452909152902054600160ff84161b16156113de5760405162461bcd60e51b815260206004820152600d60248201526c1c1c9bdbd98818db185a5b5959609a1b604482015260640161070c565b6020840135158015906113f45750836020013585115b156114415760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207174792070726f6f66000000000000000000000000000000604482015260640161070c565b50935093915050565b6001600160a01b0383166114ac5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161070c565b6001600160a01b03821661150d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161070c565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006115836001546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6001600160a01b03838116600090815260036020908152604080832093861683529290522054600019811461167a578181101561166d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161070c565b61167a848484840361144a565b50505050565b6001600160a01b0383166116e45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161070c565b6001600160a01b0382166117465760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161070c565b6001600160a01b038316600090815260026020526040902054818110156117be5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161070c565b6001600160a01b038085166000908152600260205260408082208585039055918516815290812080548492906117f5908490612cb4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161184191815260200190565b60405180910390a361167a565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611879610621565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b0382166119435760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161070c565b6001600160a01b038216600090815260026020526040902054818110156119b75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161070c565b6001600160a01b03831660009081526002602052604081208383039055600480548492906119e6908490612e07565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611562565b505050565b505050505050565b80611a405761167a565b6000670de0b6b3a7640000611a558386612e1e565b611a5f9190612e3d565b905060008111611ab15760405162461bcd60e51b815260206004820152601060248201527f7175616e7469747920746f6f206c6f7700000000000000000000000000000000604482015260640161070c565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611b2557803414611b255760405162461bcd60e51b815260206004820152601660248201527f4d7573742073656e6420746f74616c2070726963652e00000000000000000000604482015260640161070c565b60006001600160a01b03861615611b3c5785611b49565b6008546001600160a01b03165b9050611a2e84338385611dda565b6000611b638383611e24565b50600092915050565b600880546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b6000808054611bc490612c69565b80601f0160208091040260200160405190810160405280929190818152602001828054611bf090612c69565b8015611c3d5780601f10611c1257610100808354040283529160200191611c3d565b820191906000526020600020905b815481529060010190602001808311611c2057829003601f168201915b50508551939450611c599360009350602087019250905061269f565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611c8b929190612e5f565b60405180910390a15050565b60606107408383604051806060016040528060278152602001612edd60279139611f03565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b6000806000611cf587878787611fe0565b91509150611d02816120cd565b5095945050505050565b6000808281805b8751811015611dce57611d27600283612e1e565b91506000888281518110611d3d57611d3d612d3e565b60200260200101519050808411611d7f576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350611dbb565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183611db89190612cb4565b92505b5080611dc681612da2565b915050611d13565b50941495939450505050565b80611de45761167a565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611e1857611e138282612288565b61167a565b61167a8484848461232b565b6001600160a01b038216611e7a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161070c565b8060046000828254611e8c9190612cb4565b90915550506001600160a01b03821660009081526002602052604081208054839290611eb9908490612cb4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60606001600160a01b0384163b611f6b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161070c565b600080856001600160a01b031685604051611f869190612e8d565b600060405180830381855af49150503d8060008114611fc1576040519150601f19603f3d011682016040523d82523d6000602084013e611fc6565b606091505b5091509150611fd6828286612384565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561201757506000905060036120c4565b8460ff16601b1415801561202f57508460ff16601c14155b1561204057506000905060046120c4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612094573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166120bd576000600192509250506120c4565b9150600090505b94509492505050565b60008160048111156120e1576120e1612ea9565b14156120ea5750565b60018160048111156120fe576120fe612ea9565b141561214c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161070c565b600281600481111561216057612160612ea9565b14156121ae5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161070c565b60038160048111156121c2576121c2612ea9565b141561221b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161070c565b600481600481111561222f5761222f612ea9565b141561071e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161070c565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146122d5576040519150601f19603f3d011682016040523d82523d6000602084013e6122da565b606091505b5050905080611a295760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c656400000000604482015260640161070c565b816001600160a01b0316836001600160a01b0316141561234a5761167a565b6001600160a01b03831630141561236f57611e136001600160a01b03851683836123bd565b61167a6001600160a01b03851684848461244d565b60608315612393575081610740565b8251156123a35782518084602001fd5b8160405162461bcd60e51b815260040161070c9190612790565b6040516001600160a01b038316602482015260448101829052611a2990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612485565b6040516001600160a01b038085166024830152831660448201526064810182905261167a9085906323b872dd60e01b906084016123e9565b60006124da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125579092919063ffffffff16565b805190915015611a2957808060200190518101906124f89190612ebf565b611a295760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161070c565b6060612566848460008561256e565b949350505050565b6060824710156125cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161070c565b6001600160a01b0385163b6126265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161070c565b600080866001600160a01b031685876040516126429190612e8d565b60006040518083038185875af1925050503d806000811461267f576040519150601f19603f3d011682016040523d82523d6000602084013e612684565b606091505b5091509150612694828286612384565b979650505050505050565b8280546126ab90612c69565b90600052602060002090601f0160209004810192826126cd5760008555612713565b82601f106126e657805160ff1916838001178555612713565b82800160010185558215612713579182015b828111156127135782518255916020019190600101906126f8565b5061271f929150612723565b5090565b5b8082111561271f5760008155600101612724565b60005b8381101561275357818101518382015260200161273b565b8381111561167a5750506000910152565b6000815180845261277c816020860160208601612738565b601f01601f19169290920160200192915050565b6020815260006107406020830184612764565b80356001600160a01b03811681146127ba57600080fd5b919050565b600080604083850312156127d257600080fd5b6127db836127a3565b946020939093013593505050565b6000602082840312156127fb57600080fd5b610740826127a3565b60008060006060848603121561281957600080fd5b612822846127a3565b9250612830602085016127a3565b9150604084013590509250925092565b60006020828403121561285257600080fd5b5035919050565b600060408284031215611cde57600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561289c5761289c61286b565b604051601f8501601f19908116603f011681019082821181831017156128c4576128c461286b565b816040528093508581528686860111156128dd57600080fd5b858560208301376000602087830101525050509392505050565b60008060008060008060c0878903121561291057600080fd5b612919876127a3565b95506020870135945061292e604088016127a3565b935060608701359250608087013567ffffffffffffffff8082111561295257600080fd5b61295e8a838b01612859565b935060a089013591508082111561297457600080fd5b508701601f8101891361298657600080fd5b61299589823560208401612881565b9150509295509295509295565b801515811461071e57600080fd5b6000808284036101208112156129c557600080fd5b610100808212156129d557600080fd5b84935083013590506129e6816129a2565b809150509250929050565b600060208284031215612a0357600080fd5b813567ffffffffffffffff811115612a1a57600080fd5b8201601f81018413612a2b57600080fd5b61256684823560208401612881565b600080600080600060a08688031215612a5257600080fd5b612a5b866127a3565b945060208601359350612a70604087016127a3565b9250606086013591506080860135612a87816129a2565b809150509295509295909350565b60008060208385031215612aa857600080fd5b823567ffffffffffffffff80821115612ac057600080fd5b818501915085601f830112612ad457600080fd5b813581811115612ae357600080fd5b8660208260051b8501011115612af857600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612b5f57603f19888603018452612b4d858351612764565b94509285019290850190600101612b31565b5092979650505050505050565b600080600080600080600060e0888a031215612b8757600080fd5b612b90886127a3565b9650612b9e602089016127a3565b95506040880135945060608801359350608088013560ff81168114612bc257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612bf257600080fd5b612bfb836127a3565b9150612c09602084016127a3565b90509250929050565b600080600060608486031215612c2757600080fd5b612c30846127a3565b925060208401359150604084013567ffffffffffffffff811115612c5357600080fd5b612c5f86828701612859565b9150509250925092565b600181811c90821680612c7d57607f821691505b60208210811415611cde57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612cc757612cc7612c9e565b500190565b600061012082019050833582526020840135602083015260408401356040830152606084013560608301526080840135608083015260a084013560a083015260c084013560c08301526001600160a01b03612d2960e086016127a3565b1660e083015291151561010090910152919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612d6b57600080fd5b83018035915067ffffffffffffffff821115612d8657600080fd5b602001915036819003821315612d9b57600080fd5b9250929050565b6000600019821415612db657612db6612c9e565b5060010190565b6000808335601e19843603018112612dd457600080fd5b83018035915067ffffffffffffffff821115612def57600080fd5b6020019150600581901b3603821315612d9b57600080fd5b600082821015612e1957612e19612c9e565b500390565b6000816000190483118215151615612e3857612e38612c9e565b500290565b600082612e5a57634e487b7160e01b600052601260045260246000fd5b500490565b604081526000612e726040830185612764565b8281036020840152612e848185612764565b95945050505050565b60008251612e9f818460208701612738565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215612ed157600080fd5b8151610740816129a256fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c3edec7d4554f9982ee81506857dcb675559bf8d48d043869b257a3582044c1e64736f6c634300080c0033";

const isSuperArgs$y = xs => xs.length > 1;

class ERC20Drop__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$y(args)) {
      super(...args);
    } else {
      super(_abi$1M, _bytecode$y, args[0]);
    }
  }

  deploy(_name, _symbol, _primarySaleRecipient, overrides) {
    return super.deploy(_name, _symbol, _primarySaleRecipient, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _primarySaleRecipient, overrides) {
    return super.getDeployTransaction(_name, _symbol, _primarySaleRecipient, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1M);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1M, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC20Drop__factory, "bytecode", _bytecode$y);

defineProperty._defineProperty(ERC20Drop__factory, "abi", _abi$1M);

const _abi$1L = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "fromDelegate",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "toDelegate",
    type: "address"
  }],
  name: "DelegateChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegate",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "previousBalance",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newBalance",
    type: "uint256"
  }],
  name: "DelegateVotesChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint32",
    name: "pos",
    type: "uint32"
  }],
  name: "checkpoints",
  outputs: [{
    components: [{
      internalType: "uint32",
      name: "fromBlock",
      type: "uint32"
    }, {
      internalType: "uint224",
      name: "votes",
      type: "uint224"
    }],
    internalType: "struct ERC20Votes.Checkpoint",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "startTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "maxClaimableSupply",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "supplyClaimed",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "quantityLimitPerTransaction",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "waitTimeInSecondsBetweenClaims",
    type: "uint256"
  }, {
    internalType: "bytes32",
    name: "merkleRoot",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }],
  name: "delegate",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }, {
    internalType: "uint256",
    name: "nonce",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "expiry",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "delegateBySig",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "delegates",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimedAt",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastTotalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "getVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "numCheckpoints",
  outputs: [{
    internalType: "uint32",
    name: "",
    type: "uint32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "_condition",
    type: "tuple"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$x = "0x6101006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162003fb138038062003fb1833981016040819052620000599162000405565b8282818181600590805190602001906200007592919062000292565b5080516200008b90600690602084019062000292565b50504660a052503060c052620000a0620000c5565b60805250620000b19050336200015c565b620000bc81620001ae565b505050620004cf565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620000f2620001f8565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b606060058054620002099062000492565b80601f0160208091040260200160405190810160405280929190818152602001828054620002379062000492565b8015620002885780601f106200025c5761010080835404028352916020019162000288565b820191906000526020600020905b8154815290600101906020018083116200026a57829003601f168201915b5050505050905090565b828054620002a09062000492565b90600052602060002090601f016020900481019282620002c457600085556200030f565b82601f10620002df57805160ff19168380011785556200030f565b828001600101855582156200030f579182015b828111156200030f578251825591602001919060010190620002f2565b506200031d92915062000321565b5090565b5b808211156200031d576000815560010162000322565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200036057600080fd5b81516001600160401b03808211156200037d576200037d62000338565b604051601f8301601f19908116603f01168101908282118183101715620003a857620003a862000338565b81604052838152602092508683858801011115620003c557600080fd5b600091505b83821015620003e95785820183015181830184015290820190620003ca565b83821115620003fb5760008385830101525b9695505050505050565b6000806000606084860312156200041b57600080fd5b83516001600160401b03808211156200043357600080fd5b62000441878388016200034e565b945060208601519150808211156200045857600080fd5b5062000467868287016200034e565b604086015190935090506001600160a01b03811681146200048757600080fd5b809150509250925092565b600181811c90821680620004a757607f821691505b60208210811415620004c957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051613aa8620005096000396000611520015260006108ee01526000610918015260006109420152613aa86000f3fe60806040526004361061020f5760003560e01c80637ecebe0011610118578063ac9650d8116100a0578063d637ed591161006f578063d637ed591461065f578063dd62ed3e146106df578063e8a3d48514610725578063f1127ed81461073a578063ffbb7a131461078457600080fd5b8063ac9650d8146105bd578063b67875ce146105ea578063c3cda5201461061f578063d505accf1461063f57600080fd5b806395d89b41116100e757806395d89b41146105285780639ab24eb01461053d578063a457c2d71461055d578063a72e157d1461057d578063a9059cbb1461059d57600080fd5b80637ecebe00146104aa5780638da5cb5b146104ca5780638e539e8c146104e8578063938e3d7b1461050857600080fd5b80633a46b1a81161019b5780635c19a95c1161016a5780635c19a95c146103df5780636f4f2837146103ff5780636fcfff451461041f57806370a082311461045457806377312a9e1461048a57600080fd5b80633a46b1a81461035357806342966c6814610373578063587cde1e146103935780635ab31c1a146103cc57600080fd5b806318160ddd116101e257806318160ddd146102c357806323b872dd146102e2578063313ce567146103025780633644e5151461031e578063395093511461033357600080fd5b806306fdde0314610214578063079fe40e1461023f578063095ea7b31461027157806313af4035146102a1575b600080fd5b34801561022057600080fd5b506102296107bb565b604051610236919061326a565b60405180910390f35b34801561024b57600080fd5b50600b546001600160a01b03165b6040516001600160a01b039091168152602001610236565b34801561027d57600080fd5b5061029161028c366004613299565b61084d565b6040519015158152602001610236565b3480156102ad57600080fd5b506102c16102bc3660046132c3565b610865565b005b3480156102cf57600080fd5b506004545b604051908152602001610236565b3480156102ee57600080fd5b506102916102fd3660046132de565b6108bb565b34801561030e57600080fd5b5060405160128152602001610236565b34801561032a57600080fd5b506102d46108e1565b34801561033f57600080fd5b5061029161034e366004613299565b610971565b34801561035f57600080fd5b506102d461036e366004613299565b6109b0565b34801561037f57600080fd5b506102c161038e36600461331a565b610a23565b34801561039f57600080fd5b506102596103ae3660046132c3565b6001600160a01b039081166000908152600860205260409020541690565b6102c16103da3660046133d1565b610a8c565b3480156103eb57600080fd5b506102c16103fa3660046132c3565b610bb0565b34801561040b57600080fd5b506102c161041a3660046132c3565b610bba565b34801561042b57600080fd5b5061043f61043a3660046132c3565b610c08565b60405163ffffffff9091168152602001610236565b34801561046057600080fd5b506102d461046f3660046132c3565b6001600160a01b031660009081526002602052604090205490565b34801561049657600080fd5b506102c16104a536600461348a565b610c30565b3480156104b657600080fd5b506102d46104c53660046132c3565b610e1b565b3480156104d657600080fd5b506001546001600160a01b0316610259565b3480156104f457600080fd5b506102d461050336600461331a565b610e39565b34801561051457600080fd5b506102c16105233660046134cb565b610e95565b34801561053457600080fd5b50610229610ee3565b34801561054957600080fd5b506102d46105583660046132c3565b610ef2565b34801561056957600080fd5b50610291610578366004613299565b610f79565b34801561058957600080fd5b506102c1610598366004613514565b611016565b3480156105a957600080fd5b506102916105b8366004613299565b611209565b3480156105c957600080fd5b506105dd6105d836600461356f565b611217565b60405161023691906135e4565b3480156105f657600080fd5b5061060a6106053660046132c3565b61130c565b60408051928352602083019190915201610236565b34801561062b57600080fd5b506102c161063a366004613657565b611349565b34801561064b57600080fd5b506102c161065a3660046136af565b6114cc565b34801561066b57600080fd5b50600c54600d54600e54600f5460105460115460125460135461069b97969594939291906001600160a01b031688565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c08301526001600160a01b031660e082015261010001610236565b3480156106eb57600080fd5b506102d46106fa366004613719565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b34801561073157600080fd5b50610229611632565b34801561074657600080fd5b5061075a61075536600461374c565b6116c0565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610236565b34801561079057600080fd5b506107a461079f366004613781565b611744565b604080519215158352602083019190915201610236565b6060600580546107ca906137d8565b80601f01602080910402602001604051908101604052809291908181526020018280546107f6906137d8565b80156108435780601f1061081857610100808354040283529160200191610843565b820191906000526020600020905b81548152906001019060200180831161082657829003601f168201915b5050505050905090565b60003361085b818585611950565b5060019392505050565b61086d611a74565b6108af5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6108b881611aa1565b50565b6000336108c9858285611af3565b6108d4858585611b85565b60019150505b9392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561093a57507f000000000000000000000000000000000000000000000000000000000000000046145b1561096457507f000000000000000000000000000000000000000000000000000000000000000090565b61096c611d59565b905090565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919061085b90829086906109ab908790613823565b611950565b6000438210610a015760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016108a6565b6001600160a01b03831660009081526009602052604090206108da9083611dee565b33600090815260026020526040902054811115610a825760405162461bcd60e51b815260206004820152601260248201527f6e6f7420656e6f7567682062616c616e6365000000000000000000000000000060448201526064016108a6565b6108b83382611eab565b601454600080610a9d338987611744565b915091506000856020013560001480610ab65750601154155b9050610ac5338a8a8a85611016565b828015610ad6575060008660200135115b15610b05576000848152601660209081526040808320600886901c845290915290208054600160ff85161b1790555b88600c6002016000828254610b1a9190613823565b909155505060008481526015602090815260408083203384529091528120429055610b47908a8a8a611ecb565b6000610b538b8b611fec565b9050806001600160a01b038c16336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68d604051610b9b91815260200190565b60405180910390a45050505050505050505050565b6108b83382612001565b610bc2611a74565b610bff5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016108a6565b6108b88161207b565b6001600160a01b038116600090815260096020526040812054610c2a906120c5565b92915050565b610c38611a74565b610c755760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016108a6565b601454600e548215610cc4575060003360405160609190911b6bffffffffffffffffffffffff191660208201524360348201526054016040516020818303038152906040528051906020012091505b8360200135811115610d185760405162461bcd60e51b815260206004820152601260248201527f6d617820737570706c7920636c61696d6564000000000000000000000000000060448201526064016108a6565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c0013581526020018560e0016020810190610d7991906132c3565b6001600160a01b039081169091528151600c556020820151600d55604080830151600e556060830151600f55608083015160105560a083015160115560c083015160125560e090920151601380546001600160a01b031916919092161790556014839055517f583ecce39d40d7b7653fd2cb1cdc19aa03714482ffd00fafa242355cdcd7908090610e0d908690869061383b565b60405180910390a150505050565b6001600160a01b038116600090815260076020526040812054610c2a565b6000438210610e8a5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016108a6565b610c2a600a83611dee565b610e9d611a74565b610eda5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016108a6565b6108b88161212e565b6060600680546107ca906137d8565b6001600160a01b0381166000908152600960205260408120548015610f66576001600160a01b0383166000908152600960205260409020610f346001836138ad565b81548110610f4457610f446138c4565b60009182526020909120015464010000000090046001600160e01b0316610f69565b60005b6001600160e01b03169392505050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919083811015610ffe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016108a6565b61100b8286868403611950565b506001949350505050565b6040805161010081018252600c548152600d546020820152600e5491810191909152600f546060820152601054608082015260115460a082015260125460c08201526013546001600160a01b0390811660e0830181905290851614158061108157508060c001518314155b156110ce5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207072696365206f722063757272656e63790000000000000060448201526064016108a6565b8415806110e657508180156110e65750806060015185115b156111335760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207175616e746974790000000000000000000000000000000060448201526064016108a6565b80602001518582604001516111489190613823565b11156111965760405162461bcd60e51b815260206004820152601260248201527f65786365656473206d617820737570706c79000000000000000000000000000060448201526064016108a6565b6000806111a28861130c565b9150915042836000015111806111c1575081158015906111c157508042105b156111ff5760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b60448201526064016108a6565b5050505050505050565b60003361085b818585611b85565b60608167ffffffffffffffff81111561123257611232613345565b60405190808252806020026020018201604052801561126557816020015b60608152602001906001900390816112505790505b50905060005b82811015611305576112d530858584818110611289576112896138c4565b905060200281019061129b91906138da565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061220f92505050565b8282815181106112e7576112e76138c4565b602002602001018190525080806112fd90613928565b91505061126b565b5092915050565b60145460009081526015602090815260408083206001600160a01b038516845290915290205460105481018181101561134457506000195b915091565b834211156113995760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016108a6565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a001604051602081830303815290604052805190602001209050600061144e61140d6108e1565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b9050600061145e82878787612234565b90506114698161225c565b88146114b75760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016108a6565b6114c1818a612001565b505050505050505050565b8342111561151c5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016108a6565b60007f000000000000000000000000000000000000000000000000000000000000000088888861154b8c61225c565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006115a861140d6108e1565b905060006115b882878787612234565b9050896001600160a01b0316816001600160a01b03161461161b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016108a6565b6116268a8a8a611950565b50505050505050505050565b6000805461163f906137d8565b80601f016020809104026020016040519081016040528092919081815260200182805461166b906137d8565b80156116b85780601f1061168d576101008083540402835291602001916116b8565b820191906000526020600020905b81548152906001019060200180831161169b57829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b0383166000908152600960205260409020805463ffffffff8416908110611704576117046138c4565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6040805161010081018252600c548152600d546020820152600e5491810191909152600f546060820152601054608082015260115460a0820181905260125460c08301526013546001600160a01b031660e08301526000918291156119475761182c6117b08580613943565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516bffffffffffffffffffffffff1960608b901b16602080830191909152880135603482015260540160405160208183030381529060405280519060200120612284565b90935091508261187e5760405162461bcd60e51b815260206004820152601060248201527f6e6f7420696e20616c6c6f776c6973740000000000000000000000000000000060448201526064016108a6565b6014546000908152601660209081526040808320600886901c8452909152902054600160ff84161b16156118e45760405162461bcd60e51b815260206004820152600d60248201526c1c1c9bdbd98818db185a5b5959609a1b60448201526064016108a6565b6020840135158015906118fa5750836020013585115b156119475760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207174792070726f6f6600000000000000000000000000000060448201526064016108a6565b50935093915050565b6001600160a01b0383166119b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108a6565b6001600160a01b038216611a135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108a6565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000611a886001546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6001600160a01b038381166000908152600360209081526040808320938616835292905220546000198114611b7f5781811015611b725760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108a6565b611b7f8484848403611950565b50505050565b6001600160a01b038316611be95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016108a6565b6001600160a01b038216611c4b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108a6565b6001600160a01b03831660009081526002602052604090205481811015611cc35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016108a6565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290611cfa908490613823565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d4691815260200190565b60405180910390a3611b7f848484612357565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611d846107bb565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8154600090815b81811015611e52576000611e098284612389565b905084868281548110611e1e57611e1e6138c4565b60009182526020909120015463ffffffff161115611e3e57809250611e4c565b611e49816001613823565b91505b50611df5565b8115611e965784611e646001846138ad565b81548110611e7457611e746138c4565b60009182526020909120015464010000000090046001600160e01b0316611e99565b60005b6001600160e01b031695945050505050565b611eb582826123a4565b611b7f600a6124f983612505565b505050505050565b80611ed557611b7f565b6000670de0b6b3a7640000611eea838661398d565b611ef491906139ac565b905060008111611f465760405162461bcd60e51b815260206004820152601060248201527f7175616e7469747920746f6f206c6f770000000000000000000000000000000060448201526064016108a6565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611fba57803414611fba5760405162461bcd60e51b815260206004820152601660248201527f4d7573742073656e6420746f74616c2070726963652e0000000000000000000060448201526064016108a6565b60006001600160a01b03861615611fd15785611fde565b600b546001600160a01b03165b9050611ec38433838561267d565b6000611ff883836126c7565b50600092915050565b6001600160a01b03828116600081815260086020818152604080842080546002845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611b7f82848361275e565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600063ffffffff82111561212a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016108a6565b5090565b600080805461213c906137d8565b80601f0160208091040260200160405190810160405280929190818152602001828054612168906137d8565b80156121b55780601f1061218a576101008083540402835291602001916121b5565b820191906000526020600020905b81548152906001019060200180831161219857829003601f168201915b505085519394506121d193600093506020870192509050613182565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516122039291906139ce565b60405180910390a15050565b60606108da8383604051806060016040528060278152602001613a4c6027913961289b565b600080600061224587878787612978565b9150915061225281612a65565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b6000808281805b87518110156123465761229f60028361398d565b915060008882815181106122b5576122b56138c4565b602002602001015190508084116122f7576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612333565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836123309190613823565b92505b508061233e81613928565b91505061228b565b50941495939450505050565b505050565b6001600160a01b038381166000908152600860205260408082205485841683529120546123529291821691168361275e565b600061239860028484186139ac565b6108da90848416613823565b6001600160a01b0382166124045760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016108a6565b6001600160a01b038216600090815260026020526040902054818110156124785760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016108a6565b6001600160a01b03831660009081526002602052604081208383039055600480548492906124a79084906138ad565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361235283600084612357565b60006108da82846138ad565b825460009081908015612550578561251e6001836138ad565b8154811061252e5761252e6138c4565b60009182526020909120015464010000000090046001600160e01b0316612553565b60005b6001600160e01b0316925061256c83858763ffffffff16565b91506000811180156125aa575043866125866001846138ad565b81548110612596576125966138c4565b60009182526020909120015463ffffffff16145b1561260a576125b882612c20565b866125c46001846138ad565b815481106125d4576125d46138c4565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611947565b85604051806040016040528061261f436120c5565b63ffffffff16815260200161263385612c20565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff9093169290921791015550935093915050565b8061268757611b7f565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156126bb576126b68282612c89565b611b7f565b611b7f84848484612d2c565b6126d18282612d85565b6004546001600160e01b0310156127505760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f7465730000000000000000000000000000000060648201526084016108a6565b611b7f600a612e7083612505565b816001600160a01b0316836001600160a01b0316141580156127805750600081115b15612352576001600160a01b0383161561280e576001600160a01b038316600090815260096020526040812081906127bb906124f985612505565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612803929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615612352576001600160a01b0382166000908152600960205260408120819061284490612e7085612505565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161288c929190918252602082015260400190565b60405180910390a25050505050565b60606001600160a01b0384163b6129035760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016108a6565b600080856001600160a01b03168560405161291e91906139fc565b600060405180830381855af49150503d8060008114612959576040519150601f19603f3d011682016040523d82523d6000602084013e61295e565b606091505b509150915061296e828286612e7c565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156129af5750600090506003612a5c565b8460ff16601b141580156129c757508460ff16601c14155b156129d85750600090506004612a5c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612a2c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612a5557600060019250925050612a5c565b9150600090505b94509492505050565b6000816004811115612a7957612a79613a18565b1415612a825750565b6001816004811115612a9657612a96613a18565b1415612ae45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016108a6565b6002816004811115612af857612af8613a18565b1415612b465760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016108a6565b6003816004811115612b5a57612b5a613a18565b1415612bb35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016108a6565b6004816004811115612bc757612bc7613a18565b14156108b85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016108a6565b60006001600160e01b0382111561212a5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016108a6565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612cd6576040519150601f19603f3d011682016040523d82523d6000602084013e612cdb565b606091505b50509050806123525760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c65640000000060448201526064016108a6565b816001600160a01b0316836001600160a01b03161415612d4b57611b7f565b6001600160a01b038316301415612d70576126b66001600160a01b0385168383612eb5565b611b7f6001600160a01b038516848484612f30565b6001600160a01b038216612ddb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016108a6565b8060046000828254612ded9190613823565b90915550506001600160a01b03821660009081526002602052604081208054839290612e1a908490613823565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3612e6c60008383612357565b5050565b60006108da8284613823565b60608315612e8b5750816108da565b825115612e9b5782518084602001fd5b8160405162461bcd60e51b81526004016108a6919061326a565b6040516001600160a01b03831660248201526044810182905261235290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612f68565b6040516001600160a01b0380851660248301528316604482015260648101829052611b7f9085906323b872dd60e01b90608401612ee1565b6000612fbd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661303a9092919063ffffffff16565b8051909150156123525780806020019051810190612fdb9190613a2e565b6123525760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016108a6565b60606130498484600085613051565b949350505050565b6060824710156130b25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016108a6565b6001600160a01b0385163b6131095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108a6565b600080866001600160a01b0316858760405161312591906139fc565b60006040518083038185875af1925050503d8060008114613162576040519150601f19603f3d011682016040523d82523d6000602084013e613167565b606091505b5091509150613177828286612e7c565b979650505050505050565b82805461318e906137d8565b90600052602060002090601f0160209004810192826131b057600085556131f6565b82601f106131c957805160ff19168380011785556131f6565b828001600101855582156131f6579182015b828111156131f65782518255916020019190600101906131db565b5061212a9291505b8082111561212a57600081556001016131fe565b60005b8381101561322d578181015183820152602001613215565b83811115611b7f5750506000910152565b60008151808452613256816020860160208601613212565b601f01601f19169290920160200192915050565b6020815260006108da602083018461323e565b80356001600160a01b038116811461329457600080fd5b919050565b600080604083850312156132ac57600080fd5b6132b58361327d565b946020939093013593505050565b6000602082840312156132d557600080fd5b6108da8261327d565b6000806000606084860312156132f357600080fd5b6132fc8461327d565b925061330a6020850161327d565b9150604084013590509250925092565b60006020828403121561332c57600080fd5b5035919050565b60006040828403121561227e57600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561337657613376613345565b604051601f8501601f19908116603f0116810190828211818310171561339e5761339e613345565b816040528093508581528686860111156133b757600080fd5b858560208301376000602087830101525050509392505050565b60008060008060008060c087890312156133ea57600080fd5b6133f38761327d565b9550602087013594506134086040880161327d565b935060608701359250608087013567ffffffffffffffff8082111561342c57600080fd5b6134388a838b01613333565b935060a089013591508082111561344e57600080fd5b508701601f8101891361346057600080fd5b61346f8982356020840161335b565b9150509295509295509295565b80151581146108b857600080fd5b60008082840361012081121561349f57600080fd5b610100808212156134af57600080fd5b84935083013590506134c08161347c565b809150509250929050565b6000602082840312156134dd57600080fd5b813567ffffffffffffffff8111156134f457600080fd5b8201601f8101841361350557600080fd5b6130498482356020840161335b565b600080600080600060a0868803121561352c57600080fd5b6135358661327d565b94506020860135935061354a6040870161327d565b92506060860135915060808601356135618161347c565b809150509295509295909350565b6000806020838503121561358257600080fd5b823567ffffffffffffffff8082111561359a57600080fd5b818501915085601f8301126135ae57600080fd5b8135818111156135bd57600080fd5b8660208260051b85010111156135d257600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561363957603f1988860301845261362785835161323e565b9450928501929085019060010161360b565b5092979650505050505050565b803560ff8116811461329457600080fd5b60008060008060008060c0878903121561367057600080fd5b6136798761327d565b9550602087013594506040870135935061369560608801613646565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156136ca57600080fd5b6136d38861327d565b96506136e16020890161327d565b955060408801359450606088013593506136fd60808901613646565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561372c57600080fd5b6137358361327d565b91506137436020840161327d565b90509250929050565b6000806040838503121561375f57600080fd5b6137688361327d565b9150602083013563ffffffff811681146134c057600080fd5b60008060006060848603121561379657600080fd5b61379f8461327d565b925060208401359150604084013567ffffffffffffffff8111156137c257600080fd5b6137ce86828701613333565b9150509250925092565b600181811c908216806137ec57607f821691505b6020821081141561227e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156138365761383661380d565b500190565b600061012082019050833582526020840135602083015260408401356040830152606084013560608301526080840135608083015260a084013560a083015260c084013560c08301526001600160a01b0361389860e0860161327d565b1660e083015291151561010090910152919050565b6000828210156138bf576138bf61380d565b500390565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126138f157600080fd5b83018035915067ffffffffffffffff82111561390c57600080fd5b60200191503681900382131561392157600080fd5b9250929050565b600060001982141561393c5761393c61380d565b5060010190565b6000808335601e1984360301811261395a57600080fd5b83018035915067ffffffffffffffff82111561397557600080fd5b6020019150600581901b360382131561392157600080fd5b60008160001904831182151516156139a7576139a761380d565b500290565b6000826139c957634e487b7160e01b600052601260045260246000fd5b500490565b6040815260006139e1604083018561323e565b82810360208401526139f3818561323e565b95945050505050565b60008251613a0e818460208701613212565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215613a4057600080fd5b81516108da8161347c56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202b22af9ff92bf146eff784df6601ada1a7ed37eca95f5b139339b894103c2d6664736f6c634300080c0033";

const isSuperArgs$x = xs => xs.length > 1;

class ERC20DropVote__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$x(args)) {
      super(...args);
    } else {
      super(_abi$1L, _bytecode$x, args[0]);
    }
  }

  deploy(_name, _symbol, _primarySaleRecipient, overrides) {
    return super.deploy(_name, _symbol, _primarySaleRecipient, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _primarySaleRecipient, overrides) {
    return super.getDeployTransaction(_name, _symbol, _primarySaleRecipient, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1L);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1L, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC20DropVote__factory, "bytecode", _bytecode$x);

defineProperty._defineProperty(ERC20DropVote__factory, "abi", _abi$1L);

const _abi$1K = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class ERC20Permit__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1K);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1K, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC20Permit__factory, "abi", _abi$1K);

const _abi$1J = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$w = "0x6101c06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162003196380380620031968339810160408190526200005991620004d5565b6040518060400160405280601281526020017105369676e61747572654d696e7445524332360741b815250604051806040016040528060018152602001603160f81b8152508484818181818160059080519060200190620000bc92919062000362565b508051620000d290600690602084019062000362565b50504660a052503060c052620000e7620001a6565b60805250620000f89050336200022c565b505081516020808401919091208251918301919091206101608290526101808190524661012052600080516020620031768339815191526200017f8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6101005230610140526101a052506200019d9250839150506200027e565b5050506200059f565b600060008051602062003176833981519152620001c2620002c8565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600880546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b606060058054620002d99062000562565b80601f0160208091040260200160405190810160405280929190818152602001828054620003079062000562565b8015620003585780601f106200032c5761010080835404028352916020019162000358565b820191906000526020600020905b8154815290600101906020018083116200033a57829003601f168201915b5050505050905090565b828054620003709062000562565b90600052602060002090601f016020900481019282620003945760008555620003df565b82601f10620003af57805160ff1916838001178555620003df565b82800160010185558215620003df579182015b82811115620003df578251825591602001919060010190620003c2565b50620003ed929150620003f1565b5090565b5b80821115620003ed5760008155600101620003f2565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200043057600080fd5b81516001600160401b03808211156200044d576200044d62000408565b604051601f8301601f19908116603f0116810190828211818310171562000478576200047862000408565b816040528381526020925086838588010111156200049557600080fd5b600091505b83821015620004b957858201830151818301840152908201906200049a565b83821115620004cb5760008385830101525b9695505050505050565b600080600060608486031215620004eb57600080fd5b83516001600160401b03808211156200050357600080fd5b62000511878388016200041e565b945060208601519150808211156200052857600080fd5b5062000537868287016200041e565b604086015190935090506001600160a01b03811681146200055757600080fd5b809150509250925092565b600181811c908216806200057757607f821691505b602082108114156200059957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a051612b5b6200061b6000396000612022015260006120710152600061204c01526000611fa501526000611fcf01526000611ff901526000610c43015260006106500152600061067a015260006106a40152612b5b6000f3fe6080604052600436106101965760003560e01c806370a08231116100e1578063a457c2d71161008a578063c1b606e211610064578063c1b606e214610463578063d505accf146104a2578063dd62ed3e146104c2578063e8a3d4851461050857600080fd5b8063a457c2d7146103f6578063a9059cbb14610416578063ac9650d81461043657600080fd5b80638f0fefbb116100bb5780638f0fefbb146103ae578063938e3d7b146103c157806395d89b41146103e157600080fd5b806370a082311461033a5780637ecebe00146103705780638da5cb5b1461039057600080fd5b8063313ce5671161014357806342966c681161011d57806342966c68146102da578063449a52f8146102fa5780636f4f28371461031a57600080fd5b8063313ce567146102895780633644e515146102a557806339509351146102ba57600080fd5b806313af40351161017457806313af40351461022857806318160ddd1461024a57806323b872dd1461026957600080fd5b806306fdde031461019b578063079fe40e146101c6578063095ea7b3146101f8575b600080fd5b3480156101a757600080fd5b506101b061051d565b6040516101bd91906124e7565b60405180910390f35b3480156101d257600080fd5b506008546001600160a01b03165b6040516001600160a01b0390911681526020016101bd565b34801561020457600080fd5b50610218610213366004612516565b6105af565b60405190151581526020016101bd565b34801561023457600080fd5b50610248610243366004612540565b6105c7565b005b34801561025657600080fd5b506004545b6040519081526020016101bd565b34801561027557600080fd5b5061021861028436600461255b565b61061d565b34801561029557600080fd5b50604051601281526020016101bd565b3480156102b157600080fd5b5061025b610643565b3480156102c657600080fd5b506102186102d5366004612516565b6106d3565b3480156102e657600080fd5b506102486102f5366004612597565b610712565b34801561030657600080fd5b50610248610315366004612516565b61077b565b34801561032657600080fd5b50610248610335366004612540565b610821565b34801561034657600080fd5b5061025b610355366004612540565b6001600160a01b031660009081526002602052604090205490565b34801561037c57600080fd5b5061025b61038b366004612540565b61086f565b34801561039c57600080fd5b506001546001600160a01b03166101e0565b6101e06103bc3660046125b0565b61088f565b3480156103cd57600080fd5b506102486103dc366004612653565b6109af565b3480156103ed57600080fd5b506101b06109fd565b34801561040257600080fd5b50610218610411366004612516565b610a0c565b34801561042257600080fd5b50610218610431366004612516565b610aa9565b34801561044257600080fd5b50610456610451366004612704565b610ab7565b6040516101bd9190612779565b34801561046f57600080fd5b5061048361047e3660046125b0565b610bac565b6040805192151583526001600160a01b039091166020830152016101bd565b3480156104ae57600080fd5b506102486104bd3660046127db565b610bef565b3480156104ce57600080fd5b5061025b6104dd36600461284e565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b34801561051457600080fd5b506101b0610d96565b60606005805461052c90612881565b80601f016020809104026020016040519081016040528092919081815260200182805461055890612881565b80156105a55780601f1061057a576101008083540402835291602001916105a5565b820191906000526020600020905b81548152906001019060200180831161058857829003601f168201915b5050505050905090565b6000336105bd818585610e24565b5060019392505050565b6105cf610f49565b6106115760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b61061a81610f76565b50565b60003361062b858285610fd5565b610636858585611067565b60019150505b9392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561069c57507f000000000000000000000000000000000000000000000000000000000000000046145b156106c657507f000000000000000000000000000000000000000000000000000000000000000090565b6106ce611235565b905090565b3360008181526003602090815260408083206001600160a01b03871684529091528120549091906105bd908290869061070d9087906128cc565b610e24565b336000908152600260205260409020548111156107715760405162461bcd60e51b815260206004820152601260248201527f6e6f7420656e6f7567682062616c616e636500000000000000000000000000006044820152606401610608565b61061a33826112ca565b610783610f49565b6107cf5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e0000000000000000006044820152606401610608565b806108135760405162461bcd60e51b815260206004820152601460248201527326b4b73a34b733903d32b937903a37b5b2b7399760611b6044820152606401610608565b61081d8282611415565b5050565b610829610f49565b6108665760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610608565b61061a816114f4565b6001600160a01b0381166000908152600760205260408120545b92915050565b6000808460400135116108db5760405162461bcd60e51b815260206004820152601460248201527326b4b73a34b733903d32b937903a37b5b2b7399760611b6044820152606401610608565b6108e684848461154b565b90506000806108f86020870187612540565b6001600160a01b031614610918576109136020860186612540565b61091a565b335b905061094e61092f6040870160208801612540565b604087013561094460a0890160808a01612540565b886060013561165d565b61095c818660400135611415565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c678760405161099f91906128fb565b60405180910390a3509392505050565b6109b7610f49565b6109f45760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610608565b61061a81611786565b60606006805461052c90612881565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919083811015610a915760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610608565b610a9e8286868403610e24565b506001949350505050565b6000336105bd818585611067565b60608167ffffffffffffffff811115610ad257610ad261263d565b604051908082528060200260200182016040528015610b0557816020015b6060815260200190600190039081610af05790505b50905060005b82811015610ba557610b7530858584818110610b2957610b29612991565b9050602002810190610b3b91906129a7565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061186792505050565b828281518110610b8757610b87612991565b60200260200101819052508080610b9d906129ee565b915050610b0b565b5092915050565b600080610bba85858561188c565b60e086013560009081526009602052604090205490915060ff16158015610be55750610be5816118f0565b9150935093915050565b83421115610c3f5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610608565b60007f0000000000000000000000000000000000000000000000000000000000000000888888610c6e8c61191f565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d0c610ccb610643565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b90506000610d1c82878787611947565b9050896001600160a01b0316816001600160a01b031614610d7f5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610608565b610d8a8a8a8a610e24565b50505050505050505050565b60008054610da390612881565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcf90612881565b8015610e1c5780601f10610df157610100808354040283529160200191610e1c565b820191906000526020600020905b815481529060010190602001808311610dff57829003601f168201915b505050505081565b6001600160a01b038316610e865760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610608565b6001600160a01b038216610ee75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610608565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610f5d6001546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6001600160a01b03838116600090815260036020908152604080832093861683529290522054600019811461106157818110156110545760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610608565b6110618484848403610e24565b50505050565b6001600160a01b0383166110cb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610608565b6001600160a01b03821661112d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610608565b6001600160a01b038316600090815260026020526040902054818110156111a55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610608565b6001600160a01b038085166000908152600260205260408082208585039055918516815290812080548492906111dc9084906128cc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161122891815260200190565b60405180910390a3611061565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61126061051d565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b03821661132a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610608565b6001600160a01b0382166000908152600260205260409020548181101561139e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610608565b6001600160a01b03831660009081526002602052604081208383039055600480548492906113cd908490612a09565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610f3c565b505050565b6001600160a01b03821661146b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610608565b806004600082825461147d91906128cc565b90915550506001600160a01b038216600090815260026020526040812080548392906114aa9084906128cc565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600080611559858585610bac565b92509050806115aa5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964207265717565737400000000000000000000000000000000006044820152606401610608565b426115bb60c0870160a08801612a20565b6001600160801b0316111580156115ea57506115dd60e0860160c08701612a20565b6001600160801b03164211155b6116365760405162461bcd60e51b815260206004820152600f60248201527f52657175657374206578706972656400000000000000000000000000000000006044820152606401610608565b5060e0909301356000908152600960205260409020805460ff191660011790555090919050565b8061166757611061565b6000670de0b6b3a764000061167c8386612a3b565b6116869190612a5a565b9050600081116116d85760405162461bcd60e51b815260206004820152601060248201527f7175616e7469747920746f6f206c6f77000000000000000000000000000000006044820152606401610608565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561174c5780341461174c5760405162461bcd60e51b815260206004820152601660248201527f4d7573742073656e6420746f74616c2070726963652e000000000000000000006044820152606401610608565b60006001600160a01b038616156117635785611770565b6008546001600160a01b03165b905061177e8433838561196f565b505050505050565b600080805461179490612881565b80601f01602080910402602001604051908101604052809291908181526020018280546117c090612881565b801561180d5780601f106117e25761010080835404028352916020019161180d565b820191906000526020600020905b8154815290600101906020018083116117f057829003601f168201915b50508551939450611829936000935060208701925090506123f6565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161185b929190612a7c565b60405180910390a15050565b606061063c8383604051806060016040528060278152602001612aff602791396119b9565b60006118e883838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118e292506118d69150889050611a96565b80519060200120611b8a565b90611b97565b949350505050565b60006119046001546001600160a01b031690565b6001600160a01b0316826001600160a01b0316149050919050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600080600061195887878787611bbb565b9150915061196581611ca8565b5095945050505050565b8061197957611061565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156119ad576119a88282611e63565b611061565b61106184848484611f06565b60606001600160a01b0384163b611a215760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610608565b600080856001600160a01b031685604051611a3c9190612aaa565b600060405180830381855af49150503d8060008114611a77576040519150601f19603f3d011682016040523d82523d6000602084013e611a7c565b606091505b5091509150611a8c828286611f5f565b9695505050505050565b60607fd932100bc68de71f788489cd77585effe7e2226422dc347f9d7f9c20cd7cfd0b611ac66020840184612540565b611ad66040850160208601612540565b60408501356060860135611af060a0880160808901612540565b611b0060c0890160a08a01612a20565b611b1060e08a0160c08b01612a20565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b6000610889610ccb611f98565b6000806000611ba685856120bf565b91509150611bb381611ca8565b509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611bf25750600090506003611c9f565b8460ff16601b14158015611c0a57508460ff16601c14155b15611c1b5750600090506004611c9f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611c6f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611c9857600060019250925050611c9f565b9150600090505b94509492505050565b6000816004811115611cbc57611cbc612ac6565b1415611cc55750565b6001816004811115611cd957611cd9612ac6565b1415611d275760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610608565b6002816004811115611d3b57611d3b612ac6565b1415611d895760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610608565b6003816004811115611d9d57611d9d612ac6565b1415611df65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610608565b6004816004811115611e0a57611e0a612ac6565b141561061a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610608565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611eb0576040519150601f19603f3d011682016040523d82523d6000602084013e611eb5565b606091505b50509050806114105760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610608565b816001600160a01b0316836001600160a01b03161415611f2557611061565b6001600160a01b038316301415611f4a576119a86001600160a01b038516838361212f565b6110616001600160a01b0385168484846121bf565b60608315611f6e57508161063c565b825115611f7e5782518084602001fd5b8160405162461bcd60e51b815260040161060891906124e7565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611ff157507f000000000000000000000000000000000000000000000000000000000000000046145b1561201b57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156120f65760208301516040840151606085015160001a6120ea87828585611bbb565b94509450505050612128565b82516040141561212057602083015160408401516121158683836121f7565b935093505050612128565b506000905060025b9250929050565b6040516001600160a01b03831660248201526044810182905261141090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612249565b6040516001600160a01b03808516602483015283166044820152606481018290526110619085906323b872dd60e01b9060840161215b565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161222d60ff86901c601b6128cc565b905061223b87828885611bbb565b935093505050935093915050565b600061229e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661231b9092919063ffffffff16565b80519091501561141057808060200190518101906122bc9190612adc565b6114105760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610608565b60606118e88484600085856001600160a01b0385163b61237d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610608565b600080866001600160a01b031685876040516123999190612aaa565b60006040518083038185875af1925050503d80600081146123d6576040519150601f19603f3d011682016040523d82523d6000602084013e6123db565b606091505b50915091506123eb828286611f5f565b979650505050505050565b82805461240290612881565b90600052602060002090601f016020900481019282612424576000855561246a565b82601f1061243d57805160ff191683800117855561246a565b8280016001018555821561246a579182015b8281111561246a57825182559160200191906001019061244f565b5061247692915061247a565b5090565b5b80821115612476576000815560010161247b565b60005b838110156124aa578181015183820152602001612492565b838111156110615750506000910152565b600081518084526124d381602086016020860161248f565b601f01601f19169290920160200192915050565b60208152600061063c60208301846124bb565b80356001600160a01b038116811461251157600080fd5b919050565b6000806040838503121561252957600080fd5b612532836124fa565b946020939093013593505050565b60006020828403121561255257600080fd5b61063c826124fa565b60008060006060848603121561257057600080fd5b612579846124fa565b9250612587602085016124fa565b9150604084013590509250925092565b6000602082840312156125a957600080fd5b5035919050565b60008060008385036101208112156125c757600080fd5b610100808212156125d757600080fd5b859450840135905067ffffffffffffffff808211156125f557600080fd5b818601915086601f83011261260957600080fd5b81358181111561261857600080fd5b87602082850101111561262a57600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561266557600080fd5b813567ffffffffffffffff8082111561267d57600080fd5b818401915084601f83011261269157600080fd5b8135818111156126a3576126a361263d565b604051601f8201601f19908116603f011681019083821181831017156126cb576126cb61263d565b816040528281528760208487010111156126e457600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806020838503121561271757600080fd5b823567ffffffffffffffff8082111561272f57600080fd5b818501915085601f83011261274357600080fd5b81358181111561275257600080fd5b8660208260051b850101111561276757600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156127ce57603f198886030184526127bc8583516124bb565b945092850192908501906001016127a0565b5092979650505050505050565b600080600080600080600060e0888a0312156127f657600080fd5b6127ff886124fa565b965061280d602089016124fa565b95506040880135945060608801359350608088013560ff8116811461283157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561286157600080fd5b61286a836124fa565b9150612878602084016124fa565b90509250929050565b600181811c9082168061289557607f821691505b6020821081141561194157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156128df576128df6128b6565b500190565b80356001600160801b038116811461251157600080fd5b61010081016001600160a01b0380612912856124fa565b16835280612922602086016124fa565b166020840152604084013560408401526060840135606084015280612949608086016124fa565b1660808401525061295c60a084016128e4565b6001600160801b0380821660a08501528061297960c087016128e4565b1660c0850152505060e083013560e083015292915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126129be57600080fd5b83018035915067ffffffffffffffff8211156129d957600080fd5b60200191503681900382131561212857600080fd5b6000600019821415612a0257612a026128b6565b5060010190565b600082821015612a1b57612a1b6128b6565b500390565b600060208284031215612a3257600080fd5b61063c826128e4565b6000816000190483118215151615612a5557612a556128b6565b500290565b600082612a7757634e487b7160e01b600052601260045260246000fd5b500490565b604081526000612a8f60408301856124bb565b8281036020840152612aa181856124bb565b95945050505050565b60008251612abc81846020870161248f565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215612aee57600080fd5b8151801515811461063c57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212204a6725dc5bf0d5bfb90795c2805074983feff5bf55a28c2c20c889e3406800d364736f6c634300080c00338b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f";

const isSuperArgs$w = xs => xs.length > 1;

class ERC20SignatureMint__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$w(args)) {
      super(...args);
    } else {
      super(_abi$1J, _bytecode$w, args[0]);
    }
  }

  deploy(_name, _symbol, _primarySaleRecipient, overrides) {
    return super.deploy(_name, _symbol, _primarySaleRecipient, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _primarySaleRecipient, overrides) {
    return super.getDeployTransaction(_name, _symbol, _primarySaleRecipient, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1J);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1J, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC20SignatureMint__factory, "bytecode", _bytecode$w);

defineProperty._defineProperty(ERC20SignatureMint__factory, "abi", _abi$1J);

const _abi$1I = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "fromDelegate",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "toDelegate",
    type: "address"
  }],
  name: "DelegateChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegate",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "previousBalance",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newBalance",
    type: "uint256"
  }],
  name: "DelegateVotesChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint32",
    name: "pos",
    type: "uint32"
  }],
  name: "checkpoints",
  outputs: [{
    components: [{
      internalType: "uint32",
      name: "fromBlock",
      type: "uint32"
    }, {
      internalType: "uint224",
      name: "votes",
      type: "uint224"
    }],
    internalType: "struct ERC20Votes.Checkpoint",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }],
  name: "delegate",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }, {
    internalType: "uint256",
    name: "nonce",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "expiry",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "delegateBySig",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "delegates",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastTotalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "getVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "numCheckpoints",
  outputs: [{
    internalType: "uint32",
    name: "",
    type: "uint32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$v = "0x6101c06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162003ce238038062003ce28339810160408190526200005991620004d5565b6040518060400160405280601281526020017105369676e61747572654d696e7445524332360741b815250604051806040016040528060018152602001603160f81b8152508484818181818160059080519060200190620000bc92919062000362565b508051620000d290600690602084019062000362565b50504660a052503060c052620000e7620001a6565b60805250620000f89050336200022c565b50508151602080840191909120825191830191909120610160829052610180819052466101205260008051602062003cc28339815191526200017f8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6101005230610140526101a052506200019d9250839150506200027e565b5050506200059f565b600060008051602062003cc2833981519152620001c2620002c8565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b606060058054620002d99062000562565b80601f0160208091040260200160405190810160405280929190818152602001828054620003079062000562565b8015620003585780601f106200032c5761010080835404028352916020019162000358565b820191906000526020600020905b8154815290600101906020018083116200033a57829003601f168201915b5050505050905090565b828054620003709062000562565b90600052602060002090601f016020900481019282620003945760008555620003df565b82601f10620003af57805160ff1916838001178555620003df565b82800160010185558215620003df579182015b82811115620003df578251825591602001919060010190620003c2565b50620003ed929150620003f1565b5090565b5b80821115620003ed5760008155600101620003f2565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200043057600080fd5b81516001600160401b03808211156200044d576200044d62000408565b604051601f8301601f19908116603f0116810190828211818310171562000478576200047862000408565b816040528381526020925086838588010111156200049557600080fd5b600091505b83821015620004b957858201830151818301840152908201906200049a565b83821115620004cb5760008385830101525b9695505050505050565b600080600060608486031215620004eb57600080fd5b83516001600160401b03808211156200050357600080fd5b62000511878388016200041e565b945060208601519150808211156200052857600080fd5b5062000537868287016200041e565b604086015190935090506001600160a01b03811681146200055757600080fd5b809150509250925092565b600181811c908216806200057757607f821691505b602082108114156200059957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516136a76200061b6000396000612aec01526000612b3b01526000612b1601526000612a6f01526000612a9901526000612ac3015260006110f5015260006108000152600061082a0152600061085401526136a76000f3fe6080604052600436106101ee5760003560e01c806370a082311161010d578063a457c2d7116100a0578063c3cda5201161006f578063c3cda520146105e8578063d505accf14610608578063dd62ed3e14610628578063e8a3d4851461066e578063f1127ed81461068357600080fd5b8063a457c2d71461053c578063a9059cbb1461055c578063ac9650d81461057c578063c1b606e2146105a957600080fd5b80638f0fefbb116100dc5780638f0fefbb146104d4578063938e3d7b146104e757806395d89b41146105075780639ab24eb01461051c57600080fd5b806370a08231146104405780637ecebe00146104765780638da5cb5b146104965780638e539e8c146104b457600080fd5b80633950935111610185578063587cde1e11610154578063587cde1e146103925780635c19a95c146103cb5780636f4f2837146103eb5780636fcfff451461040b57600080fd5b806339509351146103125780633a46b1a81461033257806342966c6814610352578063449a52f81461037257600080fd5b806318160ddd116101c157806318160ddd146102a257806323b872dd146102c1578063313ce567146102e15780633644e515146102fd57600080fd5b806306fdde03146101f3578063079fe40e1461021e578063095ea7b31461025057806313af403514610280575b600080fd5b3480156101ff57600080fd5b506102086106cd565b6040516102159190612f93565b60405180910390f35b34801561022a57600080fd5b50600b546001600160a01b03165b6040516001600160a01b039091168152602001610215565b34801561025c57600080fd5b5061027061026b366004612fc2565b61075f565b6040519015158152602001610215565b34801561028c57600080fd5b506102a061029b366004612fec565b610777565b005b3480156102ae57600080fd5b506004545b604051908152602001610215565b3480156102cd57600080fd5b506102706102dc366004613007565b6107cd565b3480156102ed57600080fd5b5060405160128152602001610215565b34801561030957600080fd5b506102b36107f3565b34801561031e57600080fd5b5061027061032d366004612fc2565b610883565b34801561033e57600080fd5b506102b361034d366004612fc2565b6108c2565b34801561035e57600080fd5b506102a061036d366004613043565b610935565b34801561037e57600080fd5b506102a061038d366004612fc2565b610997565b34801561039e57600080fd5b506102386103ad366004612fec565b6001600160a01b039081166000908152600860205260409020541690565b3480156103d757600080fd5b506102a06103e6366004612fec565b610a3d565b3480156103f757600080fd5b506102a0610406366004612fec565b610a47565b34801561041757600080fd5b5061042b610426366004612fec565b610a95565b60405163ffffffff9091168152602001610215565b34801561044c57600080fd5b506102b361045b366004612fec565b6001600160a01b031660009081526002602052604090205490565b34801561048257600080fd5b506102b3610491366004612fec565b610abd565b3480156104a257600080fd5b506001546001600160a01b0316610238565b3480156104c057600080fd5b506102b36104cf366004613043565b610adb565b6102386104e236600461305c565b610b37565b3480156104f357600080fd5b506102a06105023660046130ff565b610c57565b34801561051357600080fd5b50610208610ca5565b34801561052857600080fd5b506102b3610537366004612fec565b610cb4565b34801561054857600080fd5b50610270610557366004612fc2565b610d3b565b34801561056857600080fd5b50610270610577366004612fc2565b610dd8565b34801561058857600080fd5b5061059c6105973660046131b0565b610de6565b6040516102159190613225565b3480156105b557600080fd5b506105c96105c436600461305c565b610edb565b6040805192151583526001600160a01b03909116602083015201610215565b3480156105f457600080fd5b506102a0610603366004613298565b610f1e565b34801561061457600080fd5b506102a06106233660046132f0565b6110a1565b34801561063457600080fd5b506102b361064336600461335a565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b34801561067a57600080fd5b50610208611207565b34801561068f57600080fd5b506106a361069e36600461338d565b611295565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610215565b6060600580546106dc906133cd565b80601f0160208091040260200160405190810160405280929190818152602001828054610708906133cd565b80156107555780601f1061072a57610100808354040283529160200191610755565b820191906000526020600020905b81548152906001019060200180831161073857829003601f168201915b5050505050905090565b60003361076d818585611319565b5060019392505050565b61077f61143d565b6107c15760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6107ca8161146a565b50565b6000336107db8582856114bc565b6107e685858561154e565b60019150505b9392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561084c57507f000000000000000000000000000000000000000000000000000000000000000046145b1561087657507f000000000000000000000000000000000000000000000000000000000000000090565b61087e611722565b905090565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919061076d90829086906108bd908790613418565b611319565b60004382106109135760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016107b8565b6001600160a01b03831660009081526009602052604090206107ec90836117b7565b8061093f3361045b565b101561098d5760405162461bcd60e51b815260206004820152601260248201527f6e6f7420656e6f7567682062616c616e6365000000000000000000000000000060448201526064016107b8565b6107ca3382611874565b61099f61143d565b6109eb5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e00000000000000000060448201526064016107b8565b80610a2f5760405162461bcd60e51b815260206004820152601460248201527326b4b73a34b733903d32b937903a37b5b2b7399760611b60448201526064016107b8565b610a39828261188c565b5050565b6107ca3382611923565b610a4f61143d565b610a8c5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016107b8565b6107ca8161199d565b6001600160a01b038116600090815260096020526040812054610ab7906119e7565b92915050565b6001600160a01b038116600090815260076020526040812054610ab7565b6000438210610b2c5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016107b8565b610ab7600a836117b7565b600080846040013511610b835760405162461bcd60e51b815260206004820152601460248201527326b4b73a34b733903d32b937903a37b5b2b7399760611b60448201526064016107b8565b610b8e848484611a50565b9050600080610ba06020870187612fec565b6001600160a01b031614610bc057610bbb6020860186612fec565b610bc2565b335b9050610bf6610bd76040870160208801612fec565b6040870135610bec60a0890160808a01612fec565b8860600135611b62565b610c0481866040013561188c565b806001600160a01b0316826001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c6787604051610c479190613447565b60405180910390a3509392505050565b610c5f61143d565b610c9c5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016107b8565b6107ca81611c8b565b6060600680546106dc906133cd565b6001600160a01b0381166000908152600960205260408120548015610d28576001600160a01b0383166000908152600960205260409020610cf66001836134dd565b81548110610d0657610d066134f4565b60009182526020909120015464010000000090046001600160e01b0316610d2b565b60005b6001600160e01b03169392505050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919083811015610dc05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107b8565b610dcd8286868403611319565b506001949350505050565b60003361076d81858561154e565b60608167ffffffffffffffff811115610e0157610e016130e9565b604051908082528060200260200182016040528015610e3457816020015b6060815260200190600190039081610e1f5790505b50905060005b82811015610ed457610ea430858584818110610e5857610e586134f4565b9050602002810190610e6a919061350a565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d6c92505050565b828281518110610eb657610eb66134f4565b60200260200101819052508080610ecc90613551565b915050610e3a565b5092915050565b600080610ee9858585611d91565b60e08601356000908152600c602052604090205490915060ff16158015610f145750610f1481611df5565b9150935093915050565b83421115610f6e5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016107b8565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a0016040516020818303038152906040528051906020012090506000611023610fe26107f3565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b9050600061103382878787611e24565b905061103e81611e4c565b881461108c5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016107b8565b611096818a611923565b505050505050505050565b834211156110f15760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016107b8565b60007f00000000000000000000000000000000000000000000000000000000000000008888886111208c611e4c565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061117d610fe26107f3565b9050600061118d82878787611e24565b9050896001600160a01b0316816001600160a01b0316146111f05760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016107b8565b6111fb8a8a8a611319565b50505050505050505050565b60008054611214906133cd565b80601f0160208091040260200160405190810160405280929190818152602001828054611240906133cd565b801561128d5780601f106112625761010080835404028352916020019161128d565b820191906000526020600020905b81548152906001019060200180831161127057829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b0383166000908152600960205260409020805463ffffffff84169081106112d9576112d96134f4565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b03831661137b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107b8565b6001600160a01b0382166113dc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107b8565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006114516001546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6001600160a01b038381166000908152600360209081526040808320938616835292905220546000198114611548578181101561153b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107b8565b6115488484848403611319565b50505050565b6001600160a01b0383166115b25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107b8565b6001600160a01b0382166116145760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107b8565b6001600160a01b0383166000908152600260205260409020548181101561168c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107b8565b6001600160a01b038085166000908152600260205260408082208585039055918516815290812080548492906116c3908490613418565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161170f91815260200190565b60405180910390a3611548848484611e79565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61174d6106cd565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8154600090815b8181101561181b5760006117d28284611eab565b9050848682815481106117e7576117e76134f4565b60009182526020909120015463ffffffff16111561180757809250611815565b611812816001613418565b91505b506117be565b811561185f578461182d6001846134dd565b8154811061183d5761183d6134f4565b60009182526020909120015464010000000090046001600160e01b0316611862565b60005b6001600160e01b031695945050505050565b61187e8282611ec6565b611548600a61201b83612027565b61189682826121a0565b6004546001600160e01b0310156119155760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f7465730000000000000000000000000000000060648201526084016107b8565b611548600a61228783612027565b6001600160a01b03828116600081815260086020818152604080842080546002845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611548828483612293565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600063ffffffff821115611a4c5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016107b8565b5090565b600080611a5e858585610edb565b9250905080611aaf5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642072657175657374000000000000000000000000000000000060448201526064016107b8565b42611ac060c0870160a0880161356c565b6001600160801b031611158015611aef5750611ae260e0860160c0870161356c565b6001600160801b03164211155b611b3b5760405162461bcd60e51b815260206004820152600f60248201527f526571756573742065787069726564000000000000000000000000000000000060448201526064016107b8565b5060e0909301356000908152600c60205260409020805460ff191660011790555090919050565b80611b6c57611548565b6000670de0b6b3a7640000611b818386613587565b611b8b91906135a6565b905060008111611bdd5760405162461bcd60e51b815260206004820152601060248201527f7175616e7469747920746f6f206c6f770000000000000000000000000000000060448201526064016107b8565b6001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611c5157803414611c515760405162461bcd60e51b815260206004820152601660248201527f4d7573742073656e6420746f74616c2070726963652e0000000000000000000060448201526064016107b8565b60006001600160a01b03861615611c685785611c75565b600b546001600160a01b03165b9050611c83843383856123d0565b505050505050565b6000808054611c99906133cd565b80601f0160208091040260200160405190810160405280929190818152602001828054611cc5906133cd565b8015611d125780601f10611ce757610100808354040283529160200191611d12565b820191906000526020600020905b815481529060010190602001808311611cf557829003601f168201915b50508551939450611d2e93600093506020870192509050612eab565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611d609291906135c8565b60405180910390a15050565b60606107ec838360405180606001604052806027815260200161364b6027913961241a565b6000611ded83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611de79250611ddb91508890506124f7565b805190602001206125eb565b906125f8565b949350505050565b6000611e096001546001600160a01b031690565b6001600160a01b0316826001600160a01b0316149050919050565b6000806000611e358787878761261c565b91509150611e4281612709565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b505050565b6001600160a01b03838116600090815260086020526040808220548584168352912054611e7492918216911683612293565b6000611eba60028484186135a6565b6107ec90848416613418565b6001600160a01b038216611f265760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016107b8565b6001600160a01b03821660009081526002602052604090205481811015611f9a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107b8565b6001600160a01b0383166000908152600260205260408120838303905560048054849290611fc99084906134dd565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3611e7483600084611e79565b60006107ec82846134dd565b82546000908190801561207257856120406001836134dd565b81548110612050576120506134f4565b60009182526020909120015464010000000090046001600160e01b0316612075565b60005b6001600160e01b0316925061208e83858763ffffffff16565b91506000811180156120cc575043866120a86001846134dd565b815481106120b8576120b86134f4565b60009182526020909120015463ffffffff16145b1561212c576120da826128c4565b866120e66001846134dd565b815481106120f6576120f66134f4565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550612197565b856040518060400160405280612141436119e7565b63ffffffff168152602001612155856128c4565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b6001600160a01b0382166121f65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107b8565b80600460008282546122089190613418565b90915550506001600160a01b03821660009081526002602052604081208054839290612235908490613418565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610a3960008383611e79565b60006107ec8284613418565b816001600160a01b0316836001600160a01b0316141580156122b55750600081115b15611e74576001600160a01b03831615612343576001600160a01b038316600090815260096020526040812081906122f09061201b85612027565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612338929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611e74576001600160a01b038216600090815260096020526040812081906123799061228785612027565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516123c1929190918252602082015260400190565b60405180910390a25050505050565b806123da57611548565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561240e57612409828261292d565b611548565b611548848484846129d0565b60606001600160a01b0384163b6124825760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016107b8565b600080856001600160a01b03168560405161249d91906135f6565b600060405180830381855af49150503d80600081146124d8576040519150601f19603f3d011682016040523d82523d6000602084013e6124dd565b606091505b50915091506124ed828286612a29565b9695505050505050565b60607fd932100bc68de71f788489cd77585effe7e2226422dc347f9d7f9c20cd7cfd0b6125276020840184612fec565b6125376040850160208601612fec565b6040850135606086013561255160a0880160808901612fec565b61256160c0890160a08a0161356c565b61257160e08a0160c08b0161356c565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b6000610ab7610fe2612a62565b60008060006126078585612b89565b9150915061261481612709565b509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156126535750600090506003612700565b8460ff16601b1415801561266b57508460ff16601c14155b1561267c5750600090506004612700565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156126d0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166126f957600060019250925050612700565b9150600090505b94509492505050565b600081600481111561271d5761271d613612565b14156127265750565b600181600481111561273a5761273a613612565b14156127885760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107b8565b600281600481111561279c5761279c613612565b14156127ea5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107b8565b60038160048111156127fe576127fe613612565b14156128575760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107b8565b600481600481111561286b5761286b613612565b14156107ca5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016107b8565b60006001600160e01b03821115611a4c5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016107b8565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461297a576040519150601f19603f3d011682016040523d82523d6000602084013e61297f565b606091505b5050905080611e745760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c65640000000060448201526064016107b8565b816001600160a01b0316836001600160a01b031614156129ef57611548565b6001600160a01b038316301415612a14576124096001600160a01b0385168383612bf9565b6115486001600160a01b038516848484612c74565b60608315612a385750816107ec565b825115612a485782518084602001fd5b8160405162461bcd60e51b81526004016107b89190612f93565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015612abb57507f000000000000000000000000000000000000000000000000000000000000000046145b15612ae557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080825160411415612bc05760208301516040840151606085015160001a612bb48782858561261c565b94509450505050612bf2565b825160401415612bea5760208301516040840151612bdf868383612cac565b935093505050612bf2565b506000905060025b9250929050565b6040516001600160a01b038316602482015260448101829052611e7490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612cfe565b6040516001600160a01b03808516602483015283166044820152606481018290526115489085906323b872dd60e01b90608401612c25565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612ce260ff86901c601b613418565b9050612cf08782888561261c565b935093505050935093915050565b6000612d53826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612dd09092919063ffffffff16565b805190915015611e745780806020019051810190612d719190613628565b611e745760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107b8565b6060611ded8484600085856001600160a01b0385163b612e325760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107b8565b600080866001600160a01b03168587604051612e4e91906135f6565b60006040518083038185875af1925050503d8060008114612e8b576040519150601f19603f3d011682016040523d82523d6000602084013e612e90565b606091505b5091509150612ea0828286612a29565b979650505050505050565b828054612eb7906133cd565b90600052602060002090601f016020900481019282612ed95760008555612f1f565b82601f10612ef257805160ff1916838001178555612f1f565b82800160010185558215612f1f579182015b82811115612f1f578251825591602001919060010190612f04565b50611a4c9291505b80821115611a4c5760008155600101612f27565b60005b83811015612f56578181015183820152602001612f3e565b838111156115485750506000910152565b60008151808452612f7f816020860160208601612f3b565b601f01601f19169290920160200192915050565b6020815260006107ec6020830184612f67565b80356001600160a01b0381168114612fbd57600080fd5b919050565b60008060408385031215612fd557600080fd5b612fde83612fa6565b946020939093013593505050565b600060208284031215612ffe57600080fd5b6107ec82612fa6565b60008060006060848603121561301c57600080fd5b61302584612fa6565b925061303360208501612fa6565b9150604084013590509250925092565b60006020828403121561305557600080fd5b5035919050565b600080600083850361012081121561307357600080fd5b6101008082121561308357600080fd5b859450840135905067ffffffffffffffff808211156130a157600080fd5b818601915086601f8301126130b557600080fd5b8135818111156130c457600080fd5b8760208285010111156130d657600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561311157600080fd5b813567ffffffffffffffff8082111561312957600080fd5b818401915084601f83011261313d57600080fd5b81358181111561314f5761314f6130e9565b604051601f8201601f19908116603f01168101908382118183101715613177576131776130e9565b8160405282815287602084870101111561319057600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080602083850312156131c357600080fd5b823567ffffffffffffffff808211156131db57600080fd5b818501915085601f8301126131ef57600080fd5b8135818111156131fe57600080fd5b8660208260051b850101111561321357600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561327a57603f19888603018452613268858351612f67565b9450928501929085019060010161324c565b5092979650505050505050565b803560ff81168114612fbd57600080fd5b60008060008060008060c087890312156132b157600080fd5b6132ba87612fa6565b955060208701359450604087013593506132d660608801613287565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561330b57600080fd5b61331488612fa6565b965061332260208901612fa6565b9550604088013594506060880135935061333e60808901613287565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561336d57600080fd5b61337683612fa6565b915061338460208401612fa6565b90509250929050565b600080604083850312156133a057600080fd5b6133a983612fa6565b9150602083013563ffffffff811681146133c257600080fd5b809150509250929050565b600181811c908216806133e157607f821691505b60208210811415611e6e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561342b5761342b613402565b500190565b80356001600160801b0381168114612fbd57600080fd5b61010081016001600160a01b038061345e85612fa6565b1683528061346e60208601612fa6565b16602084015260408401356040840152606084013560608401528061349560808601612fa6565b166080840152506134a860a08401613430565b6001600160801b0380821660a0850152806134c560c08701613430565b1660c0850152505060e083013560e083015292915050565b6000828210156134ef576134ef613402565b500390565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261352157600080fd5b83018035915067ffffffffffffffff82111561353c57600080fd5b602001915036819003821315612bf257600080fd5b600060001982141561356557613565613402565b5060010190565b60006020828403121561357e57600080fd5b6107ec82613430565b60008160001904831182151516156135a1576135a1613402565b500290565b6000826135c357634e487b7160e01b600052601260045260246000fd5b500490565b6040815260006135db6040830185612f67565b82810360208401526135ed8185612f67565b95945050505050565b60008251613608818460208701612f3b565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561363a57600080fd5b815180151581146107ec57600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122047447de33955c672a3bb3d879d60692b85a5f77bfb7fa454bcaaea6eb96f155664736f6c634300080c00338b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f";

const isSuperArgs$v = xs => xs.length > 1;

class ERC20SignatureMintVote__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$v(args)) {
      super(...args);
    } else {
      super(_abi$1I, _bytecode$v, args[0]);
    }
  }

  deploy(_name, _symbol, _primarySaleRecipient, overrides) {
    return super.deploy(_name, _symbol, _primarySaleRecipient, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _primarySaleRecipient, overrides) {
    return super.getDeployTransaction(_name, _symbol, _primarySaleRecipient, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1I);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1I, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC20SignatureMintVote__factory, "bytecode", _bytecode$v);

defineProperty._defineProperty(ERC20SignatureMintVote__factory, "abi", _abi$1I);

const _abi$1H = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "fromDelegate",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "toDelegate",
    type: "address"
  }],
  name: "DelegateChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegate",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "previousBalance",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newBalance",
    type: "uint256"
  }],
  name: "DelegateVotesChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint32",
    name: "pos",
    type: "uint32"
  }],
  name: "checkpoints",
  outputs: [{
    components: [{
      internalType: "uint32",
      name: "fromBlock",
      type: "uint32"
    }, {
      internalType: "uint224",
      name: "votes",
      type: "uint224"
    }],
    internalType: "struct ERC20Votes.Checkpoint",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }],
  name: "delegate",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }, {
    internalType: "uint256",
    name: "nonce",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "expiry",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "delegateBySig",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "delegates",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastTotalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "getVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "numCheckpoints",
  outputs: [{
    internalType: "uint32",
    name: "",
    type: "uint32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$u = "0x6101006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162002c2a38038062002c2a8339810160408190526200005991620003af565b818181818160059080519060200190620000759291906200023c565b5080516200008b9060069060208401906200023c565b50504660a052503060c052620000a0620000b9565b60805250620000b190503362000150565b505062000456565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620000e6620001a2565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b606060058054620001b39062000419565b80601f0160208091040260200160405190810160405280929190818152602001828054620001e19062000419565b8015620002325780601f10620002065761010080835404028352916020019162000232565b820191906000526020600020905b8154815290600101906020018083116200021457829003601f168201915b5050505050905090565b8280546200024a9062000419565b90600052602060002090601f0160209004810192826200026e5760008555620002b9565b82601f106200028957805160ff1916838001178555620002b9565b82800160010185558215620002b9579182015b82811115620002b95782518255916020019190600101906200029c565b50620002c7929150620002cb565b5090565b5b80821115620002c75760008155600101620002cc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200030a57600080fd5b81516001600160401b0380821115620003275762000327620002e2565b604051601f8301601f19908116603f01168101908282118183101715620003525762000352620002e2565b816040528381526020925086838588010111156200036f57600080fd5b600091505b8382101562000393578582018301518183018401529082019062000374565b83821115620003a55760008385830101525b9695505050505050565b60008060408385031215620003c357600080fd5b82516001600160401b0380821115620003db57600080fd5b620003e986838701620002f8565b935060208501519150808211156200040057600080fd5b506200040f85828601620002f8565b9150509250929050565b600181811c908216806200042e57607f821691505b602082108114156200045057634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161279a620004906000396000610d29015260006105dc0152600061060601526000610630015261279a6000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063a457c2d7116100a2578063d505accf11610071578063d505accf14610418578063dd62ed3e1461042b578063e8a3d48514610464578063f1127ed81461046c57600080fd5b8063a457c2d7146103bf578063a9059cbb146103d2578063ac9650d8146103e5578063c3cda5201461040557600080fd5b80638e539e8c116100de5780638e539e8c1461037e578063938e3d7b1461039157806395d89b41146103a45780639ab24eb0146103ac57600080fd5b806370a08231146103315780637ecebe001461035a5780638da5cb5b1461036d57600080fd5b80633950935111610171578063449a52f81161014b578063449a52f81461029f578063587cde1e146102b25780635c19a95c146102f65780636fcfff451461030957600080fd5b806339509351146102665780633a46b1a81461027957806342966c681461028c57600080fd5b806318160ddd116101ad57806318160ddd1461022a57806323b872dd1461023c578063313ce5671461024f5780633644e5151461025e57600080fd5b806306fdde03146101d4578063095ea7b3146101f257806313af403514610215575b600080fd5b6101dc6104a9565b6040516101e99190612215565b60405180910390f35b610205610200366004612244565b61053b565b60405190151581526020016101e9565b61022861022336600461226e565b610553565b005b6004545b6040519081526020016101e9565b61020561024a366004612289565b6105a9565b604051601281526020016101e9565b61022e6105cf565b610205610274366004612244565b61065f565b61022e610287366004612244565b61069e565b61022861029a3660046122c5565b610711565b6102286102ad366004612244565b610773565b6102de6102c036600461226e565b6001600160a01b039081166000908152600860205260409020541690565b6040516001600160a01b0390911681526020016101e9565b61022861030436600461226e565b610822565b61031c61031736600461226e565b61082c565b60405163ffffffff90911681526020016101e9565b61022e61033f36600461226e565b6001600160a01b031660009081526002602052604090205490565b61022e61036836600461226e565b610854565b6001546001600160a01b03166102de565b61022e61038c3660046122c5565b610872565b61022861039f3660046122f4565b6108ce565b6101dc61091c565b61022e6103ba36600461226e565b61092b565b6102056103cd366004612244565b6109b2565b6102056103e0366004612244565b610a4f565b6103f86103f33660046123a5565b610a5d565b6040516101e9919061241a565b61022861041336600461248d565b610b52565b6102286104263660046124e5565b610cd5565b61022e61043936600461254f565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6101dc610e3b565b61047f61047a366004612582565b610ec9565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101e9565b6060600580546104b8906125c2565b80601f01602080910402602001604051908101604052809291908181526020018280546104e4906125c2565b80156105315780601f1061050657610100808354040283529160200191610531565b820191906000526020600020905b81548152906001019060200180831161051457829003601f168201915b5050505050905090565b600033610549818585610f4d565b5060019392505050565b61055b611071565b61059d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6105a68161109e565b50565b6000336105b78582856110fd565b6105c285858561118f565b60019150505b9392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561062857507f000000000000000000000000000000000000000000000000000000000000000046145b1561065257507f000000000000000000000000000000000000000000000000000000000000000090565b61065a611363565b905090565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909190610549908290869061069990879061260d565b610f4d565b60004382106106ef5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610594565b6001600160a01b03831660009081526009602052604090206105c890836113f8565b8061071b3361033f565b10156107695760405162461bcd60e51b815260206004820152601260248201527f6e6f7420656e6f7567682062616c616e636500000000000000000000000000006044820152606401610594565b6105a633826114b5565b61077b611071565b6107c75760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e0000000000000000006044820152606401610594565b806108145760405162461bcd60e51b815260206004820152601460248201527f4d696e74696e67207a65726f20746f6b656e732e0000000000000000000000006044820152606401610594565b61081e82826114cd565b5050565b6105a63382611564565b6001600160a01b03811660009081526009602052604081205461084e906115eb565b92915050565b6001600160a01b03811660009081526007602052604081205461084e565b60004382106108c35760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610594565b61084e600a836113f8565b6108d6611071565b6109135760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610594565b6105a681611654565b6060600680546104b8906125c2565b6001600160a01b038116600090815260096020526040812054801561099f576001600160a01b038316600090815260096020526040902061096d600183612625565b8154811061097d5761097d61263c565b60009182526020909120015464010000000090046001600160e01b03166109a2565b60005b6001600160e01b03169392505050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919083811015610a375760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610594565b610a448286868403610f4d565b506001949350505050565b60003361054981858561118f565b60608167ffffffffffffffff811115610a7857610a786122de565b604051908082528060200260200182016040528015610aab57816020015b6060815260200190600190039081610a965790505b50905060005b82811015610b4b57610b1b30858584818110610acf57610acf61263c565b9050602002810190610ae19190612652565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061173592505050565b828281518110610b2d57610b2d61263c565b60200260200101819052508080610b43906126a0565b915050610ab1565b5092915050565b83421115610ba25760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610594565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009060a0016040516020818303038152906040528051906020012090506000610c57610c166105cf565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b90506000610c678287878761175a565b9050610c7281611782565b8814610cc05760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610594565b610cca818a611564565b505050505050505050565b83421115610d255760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610594565b60007f0000000000000000000000000000000000000000000000000000000000000000888888610d548c611782565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610db1610c166105cf565b90506000610dc18287878761175a565b9050896001600160a01b0316816001600160a01b031614610e245760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610594565b610e2f8a8a8a610f4d565b50505050505050505050565b60008054610e48906125c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e74906125c2565b8015610ec15780601f10610e9657610100808354040283529160200191610ec1565b820191906000526020600020905b815481529060010190602001808311610ea457829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b0383166000908152600960205260409020805463ffffffff8416908110610f0d57610f0d61263c565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610faf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610594565b6001600160a01b0382166110105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610594565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006110856001546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6001600160a01b038381166000908152600360209081526040808320938616835292905220546000198114611189578181101561117c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610594565b6111898484848403610f4d565b50505050565b6001600160a01b0383166111f35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610594565b6001600160a01b0382166112555760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610594565b6001600160a01b038316600090815260026020526040902054818110156112cd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610594565b6001600160a01b0380851660009081526002602052604080822085850390559185168152908120805484929061130490849061260d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161135091815260200190565b60405180910390a36111898484846117af565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61138e6104a9565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8154600090815b8181101561145c57600061141382846117e1565b9050848682815481106114285761142861263c565b60009182526020909120015463ffffffff16111561144857809250611456565b61145381600161260d565b91505b506113ff565b81156114a0578461146e600184612625565b8154811061147e5761147e61263c565b60009182526020909120015464010000000090046001600160e01b03166114a3565b60005b6001600160e01b031695945050505050565b6114bf82826117fc565b611189600a6119518361195d565b6114d78282611ad6565b6004546001600160e01b0310156115565760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152608401610594565b611189600a611bbd8361195d565b6001600160a01b038281166000818152600860208181526040808420805460028452828620549490935287871673ffffffffffffffffffffffffffffffffffffffff198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611189828483611bc9565b600063ffffffff8211156116505760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610594565b5090565b6000808054611662906125c2565b80601f016020809104026020016040519081016040528092919081815260200182805461168e906125c2565b80156116db5780601f106116b0576101008083540402835291602001916116db565b820191906000526020600020905b8154815290600101906020018083116116be57829003601f168201915b505085519394506116f79360009350602087019250905061212d565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516117299291906126bb565b60405180910390a15050565b60606105c8838360405180606001604052806027815260200161273e60279139611d06565b600080600061176b87878787611de3565b9150915061177881611ed0565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b505050565b6001600160a01b038381166000908152600860205260408082205485841683529120546117aa92918216911683611bc9565b60006117f060028484186126e9565b6105c89084841661260d565b6001600160a01b03821661185c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610594565b6001600160a01b038216600090815260026020526040902054818110156118d05760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610594565b6001600160a01b03831660009081526002602052604081208383039055600480548492906118ff908490612625565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36117aa836000846117af565b60006105c88284612625565b8254600090819080156119a85785611976600183612625565b815481106119865761198661263c565b60009182526020909120015464010000000090046001600160e01b03166119ab565b60005b6001600160e01b031692506119c483858763ffffffff16565b9150600081118015611a02575043866119de600184612625565b815481106119ee576119ee61263c565b60009182526020909120015463ffffffff16145b15611a6257611a108261208b565b86611a1c600184612625565b81548110611a2c57611a2c61263c565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611acd565b856040518060400160405280611a77436115eb565b63ffffffff168152602001611a8b8561208b565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b6001600160a01b038216611b2c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610594565b8060046000828254611b3e919061260d565b90915550506001600160a01b03821660009081526002602052604081208054839290611b6b90849061260d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361081e600083836117af565b60006105c8828461260d565b816001600160a01b0316836001600160a01b031614158015611beb5750600081115b156117aa576001600160a01b03831615611c79576001600160a01b03831660009081526009602052604081208190611c26906119518561195d565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611c6e929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156117aa576001600160a01b03821660009081526009602052604081208190611caf90611bbd8561195d565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611cf7929190918252602082015260400190565b60405180910390a25050505050565b60606001600160a01b0384163b611d6e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610594565b600080856001600160a01b031685604051611d89919061270b565b600060405180830381855af49150503d8060008114611dc4576040519150601f19603f3d011682016040523d82523d6000602084013e611dc9565b606091505b5091509150611dd98282866120f4565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611e1a5750600090506003611ec7565b8460ff16601b14158015611e3257508460ff16601c14155b15611e435750600090506004611ec7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611e97573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ec057600060019250925050611ec7565b9150600090505b94509492505050565b6000816004811115611ee457611ee4612727565b1415611eed5750565b6001816004811115611f0157611f01612727565b1415611f4f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610594565b6002816004811115611f6357611f63612727565b1415611fb15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610594565b6003816004811115611fc557611fc5612727565b141561201e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610594565b600481600481111561203257612032612727565b14156105a65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610594565b60006001600160e01b038211156116505760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610594565b606083156121035750816105c8565b8251156121135782518084602001fd5b8160405162461bcd60e51b81526004016105949190612215565b828054612139906125c2565b90600052602060002090601f01602090048101928261215b57600085556121a1565b82601f1061217457805160ff19168380011785556121a1565b828001600101855582156121a1579182015b828111156121a1578251825591602001919060010190612186565b506116509291505b8082111561165057600081556001016121a9565b60005b838110156121d85781810151838201526020016121c0565b838111156111895750506000910152565b600081518084526122018160208601602086016121bd565b601f01601f19169290920160200192915050565b6020815260006105c860208301846121e9565b80356001600160a01b038116811461223f57600080fd5b919050565b6000806040838503121561225757600080fd5b61226083612228565b946020939093013593505050565b60006020828403121561228057600080fd5b6105c882612228565b60008060006060848603121561229e57600080fd5b6122a784612228565b92506122b560208501612228565b9150604084013590509250925092565b6000602082840312156122d757600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561230657600080fd5b813567ffffffffffffffff8082111561231e57600080fd5b818401915084601f83011261233257600080fd5b813581811115612344576123446122de565b604051601f8201601f19908116603f0116810190838211818310171561236c5761236c6122de565b8160405282815287602084870101111561238557600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080602083850312156123b857600080fd5b823567ffffffffffffffff808211156123d057600080fd5b818501915085601f8301126123e457600080fd5b8135818111156123f357600080fd5b8660208260051b850101111561240857600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561246f57603f1988860301845261245d8583516121e9565b94509285019290850190600101612441565b5092979650505050505050565b803560ff8116811461223f57600080fd5b60008060008060008060c087890312156124a657600080fd5b6124af87612228565b955060208701359450604087013593506124cb6060880161247c565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561250057600080fd5b61250988612228565b965061251760208901612228565b955060408801359450606088013593506125336080890161247c565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561256257600080fd5b61256b83612228565b915061257960208401612228565b90509250929050565b6000806040838503121561259557600080fd5b61259e83612228565b9150602083013563ffffffff811681146125b757600080fd5b809150509250929050565b600181811c908216806125d657607f821691505b602082108114156117a457634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612620576126206125f7565b500190565b600082821015612637576126376125f7565b500390565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261266957600080fd5b83018035915067ffffffffffffffff82111561268457600080fd5b60200191503681900382131561269957600080fd5b9250929050565b60006000198214156126b4576126b46125f7565b5060010190565b6040815260006126ce60408301856121e9565b82810360208401526126e081856121e9565b95945050505050565b60008261270657634e487b7160e01b600052601260045260246000fd5b500490565b6000825161271d8184602087016121bd565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220003c2b5f8e5bcc361d0d84a0ff01e8caf94386745ea71c8b7875bf671d6e327f64736f6c634300080c0033";

const isSuperArgs$u = xs => xs.length > 1;

class ERC20Vote__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$u(args)) {
      super(...args);
    } else {
      super(_abi$1H, _bytecode$u, args[0]);
    }
  }

  deploy(_name, _symbol, overrides) {
    return super.deploy(_name, _symbol, overrides || {});
  }

  getDeployTransaction(_name, _symbol, overrides) {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1H);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1H, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC20Vote__factory, "bytecode", _bytecode$u);

defineProperty._defineProperty(ERC20Vote__factory, "abi", _abi$1H);

const _abi$1G = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "fromDelegate",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "toDelegate",
    type: "address"
  }],
  name: "DelegateChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegate",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "previousBalance",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newBalance",
    type: "uint256"
  }],
  name: "DelegateVotesChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint32",
    name: "pos",
    type: "uint32"
  }],
  name: "checkpoints",
  outputs: [{
    components: [{
      internalType: "uint32",
      name: "fromBlock",
      type: "uint32"
    }, {
      internalType: "uint224",
      name: "votes",
      type: "uint224"
    }],
    internalType: "struct ERC20Votes.Checkpoint",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }],
  name: "delegate",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }, {
    internalType: "uint256",
    name: "nonce",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "expiry",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "delegateBySig",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "delegates",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastTotalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "getVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "numCheckpoints",
  outputs: [{
    internalType: "uint32",
    name: "",
    type: "uint32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class ERC20Votes__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1G);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1G, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC20Votes__factory, "abi", _abi$1G);

const _abi$1F = [{
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
class ERC2771Context__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1F);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1F, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC2771Context__factory, "abi", _abi$1F);

const _abi$1E = [{
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
class ERC2771ContextUpgradeable__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1E);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1E, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC2771ContextUpgradeable__factory, "abi", _abi$1E);

const _abi$1D = [{
  inputs: [{
    internalType: "string",
    name: "name_",
    type: "string"
  }, {
    internalType: "string",
    name: "symbol_",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [],
  name: "ApprovalCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalToCurrentOwner",
  type: "error"
}, {
  inputs: [],
  name: "ApproveToCaller",
  type: "error"
}, {
  inputs: [],
  name: "BalanceQueryForZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintZeroQuantity",
  type: "error"
}, {
  inputs: [],
  name: "OwnerQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "TransferCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "TransferFromIncorrectOwner",
  type: "error"
}, {
  inputs: [],
  name: "TransferToNonERC721ReceiverImplementer",
  type: "error"
}, {
  inputs: [],
  name: "TransferToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "URIQueryForNonexistentToken",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$t = "0x60806040523480156200001157600080fd5b506040516200129b3803806200129b8339810160408190526200003491620001df565b8151620000499060029060208501906200006c565b5080516200005f9060039060208401906200006c565b5050600080555062000286565b8280546200007a9062000249565b90600052602060002090601f0160209004810192826200009e5760008555620000e9565b82601f10620000b957805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e9578251825591602001919060010190620000cc565b50620000f7929150620000fb565b5090565b5b80821115620000f75760008155600101620000fc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013a57600080fd5b81516001600160401b038082111562000157576200015762000112565b604051601f8301601f19908116603f0116810190828211818310171562000182576200018262000112565b816040528381526020925086838588010111156200019f57600080fd5b600091505b83821015620001c35785820183015181830184015290820190620001a4565b83821115620001d55760008385830101525b9695505050505050565b60008060408385031215620001f357600080fd5b82516001600160401b03808211156200020b57600080fd5b620002198683870162000128565b935060208501519150808211156200023057600080fd5b506200023f8582860162000128565b9150509250929050565b600181811c908216806200025e57607f821691505b602082108114156200028057634e487b7160e01b600052602260045260246000fd5b50919050565b61100580620002966000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018257806342842e0e1461019557600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610bb9565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e9190610c2e565b61013f61013a366004610c41565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610c76565b610373565b005b600154600054035b60405190815260200161010e565b61016a610190366004610ca0565b6103fa565b61016a6101a3366004610ca0565b610405565b61013f6101b6366004610c41565b610420565b6101746101c9366004610cdc565b610432565b61011f610481565b61016a6101e4366004610cf7565b610490565b61016a6101f7366004610d49565b610526565b61011f61020a366004610c41565b610570565b61010261021d366004610e25565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061027c57506001600160e01b03198216635b5e139f60e01b145b8061029757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102ac90610e58565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610e58565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033a82610602565b610357576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061037e82610420565b9050806001600160a01b0316836001600160a01b031614156103b35760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146103ea576103cd813361021d565b6103ea576040516367d9dca160e11b815260040160405180910390fd5b6103f583838361062d565b505050565b6103f5838383610696565b6103f583838360405180602001604052806000815250610526565b600061042b82610885565b5192915050565b60006001600160a01b03821661045b576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ac90610e58565b6001600160a01b0382163314156104ba5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610531848484610696565b6001600160a01b0383163b1561056a5761054d848484846109a1565b61056a576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061057b82610602565b61059857604051630a14c4b560e41b815260040160405180910390fd5b60006105af60408051602081019091526000815290565b90508051600014156105d057604051806020016040528060008152506105fb565b806105da84610a8a565b6040516020016105eb929190610e93565b6040516020818303038152906040525b9392505050565b6000805482108015610297575050600090815260046020526040902054600160e01b900460ff161590565b600082815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006106a182610885565b9050836001600160a01b031681600001516001600160a01b0316146106d85760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b03861614806106f657506106f6853361021d565b806107115750336107068461032f565b6001600160a01b0316145b90508061073157604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661075857604051633a954ecd60e21b815260040160405180910390fd5b6107646000848761062d565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b4290921691909102178355870180845292208054919390911661083a57600054821461083a578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b60408051606081018252600080825260208201819052918101919091528160005481101561098857600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906109865780516001600160a01b03161561091c579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff1615159281019290925215610981579392505050565b61091c565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906109d6903390899088908890600401610ec2565b6020604051808303816000875af1925050508015610a11575060408051601f3d908101601f19168201909252610a0e91810190610efe565b60015b610a6c573d808015610a3f576040519150601f19603f3d011682016040523d82523d6000602084013e610a44565b606091505b508051610a64576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b606081610aae5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ad85780610ac281610f31565b9150610ad19050600a83610f62565b9150610ab2565b60008167ffffffffffffffff811115610af357610af3610d33565b6040519080825280601f01601f191660200182016040528015610b1d576020820181803683370190505b5090505b8415610a8257610b32600183610f76565b9150610b3f600a86610f8d565b610b4a906030610fa1565b60f81b818381518110610b5f57610b5f610fb9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610b99600a86610f62565b9450610b21565b6001600160e01b031981168114610bb657600080fd5b50565b600060208284031215610bcb57600080fd5b81356105fb81610ba0565b60005b83811015610bf1578181015183820152602001610bd9565b8381111561056a5750506000910152565b60008151808452610c1a816020860160208601610bd6565b601f01601f19169290920160200192915050565b6020815260006105fb6020830184610c02565b600060208284031215610c5357600080fd5b5035919050565b80356001600160a01b0381168114610c7157600080fd5b919050565b60008060408385031215610c8957600080fd5b610c9283610c5a565b946020939093013593505050565b600080600060608486031215610cb557600080fd5b610cbe84610c5a565b9250610ccc60208501610c5a565b9150604084013590509250925092565b600060208284031215610cee57600080fd5b6105fb82610c5a565b60008060408385031215610d0a57600080fd5b610d1383610c5a565b915060208301358015158114610d2857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610d5f57600080fd5b610d6885610c5a565b9350610d7660208601610c5a565b925060408501359150606085013567ffffffffffffffff80821115610d9a57600080fd5b818701915087601f830112610dae57600080fd5b813581811115610dc057610dc0610d33565b604051601f8201601f19908116603f01168101908382118183101715610de857610de8610d33565b816040528281528a6020848701011115610e0157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610e3857600080fd5b610e4183610c5a565b9150610e4f60208401610c5a565b90509250929050565b600181811c90821680610e6c57607f821691505b60208210811415610e8d57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610ea5818460208801610bd6565b835190830190610eb9818360208801610bd6565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152610ef46080830184610c02565b9695505050505050565b600060208284031215610f1057600080fd5b81516105fb81610ba0565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610f4557610f45610f1b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610f7157610f71610f4c565b500490565b600082821015610f8857610f88610f1b565b500390565b600082610f9c57610f9c610f4c565b500690565b60008219821115610fb457610fb4610f1b565b500190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122023b1b0349ee29f092390375a0ad5954f2fc2624ab988f602e4e7bb3d74a9314664736f6c634300080c0033";

const isSuperArgs$t = xs => xs.length > 1;

class ERC721A__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$t(args)) {
      super(...args);
    } else {
      super(_abi$1D, _bytecode$t, args[0]);
    }
  }

  deploy(name_, symbol_, overrides) {
    return super.deploy(name_, symbol_, overrides || {});
  }

  getDeployTransaction(name_, symbol_, overrides) {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1D);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1D, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC721A__factory, "bytecode", _bytecode$t);

defineProperty._defineProperty(ERC721A__factory, "abi", _abi$1D);

const _abi$1C = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [],
  name: "ApprovalCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalToCurrentOwner",
  type: "error"
}, {
  inputs: [],
  name: "ApproveToCaller",
  type: "error"
}, {
  inputs: [],
  name: "BalanceQueryForZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintZeroQuantity",
  type: "error"
}, {
  inputs: [],
  name: "OwnerQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "TransferCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "TransferFromIncorrectOwner",
  type: "error"
}, {
  inputs: [],
  name: "TransferToNonERC721ReceiverImplementer",
  type: "error"
}, {
  inputs: [],
  name: "TransferToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "URIQueryForNonexistentToken",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURI",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "batchMintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "isApprovedOrOwner",
  outputs: [{
    internalType: "bool",
    name: "isApprovedOrOwnerOf",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "string",
    name: "_tokenURI",
    type: "string"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$s = "0x60806040523480156200001157600080fd5b5060405162002a3238038062002a32833981016040819052620000349162000304565b8351849084906200004d90600290602085019062000191565b5080516200006390600390602084019062000191565b50506000805550620000753362000094565b6200008a826001600160801b038316620000e6565b50505050620003ed565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156200012f5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b8280546200019f90620003b0565b90600052602060002090601f016020900481019282620001c357600085556200020e565b82601f10620001de57805160ff19168380011785556200020e565b828001600101855582156200020e579182015b828111156200020e578251825591602001919060010190620001f1565b506200021c92915062000220565b5090565b5b808211156200021c576000815560010162000221565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200025f57600080fd5b81516001600160401b03808211156200027c576200027c62000237565b604051601f8301601f19908116603f01168101908282118183101715620002a757620002a762000237565b81604052838152602092508683858801011115620002c457600080fd5b600091505b83821015620002e85785820183015181830184015290820190620002c9565b83821115620002fa5760008385830101525b9695505050505050565b600080600080608085870312156200031b57600080fd5b84516001600160401b03808211156200033357600080fd5b62000341888389016200024d565b955060208701519150808211156200035857600080fd5b5062000367878288016200024d565b604087015190945090506001600160a01b03811681146200038757600080fd5b60608601519092506001600160801b0381168114620003a557600080fd5b939692955090935050565b600181811c90821680620003c557607f821691505b60208210811415620003e757634e487b7160e01b600052602260045260246000fd5b50919050565b61263580620003fd6000396000f3fe608060405234801561001057600080fd5b50600436106101e45760003560e01c8063600dd5ea1161010f5780639bcf7a15116100a2578063b88d4fde11610071578063b88d4fde14610454578063c87b56dd14610467578063e8a3d4851461047a578063e985e9c51461048257600080fd5b80639bcf7a15146103f0578063a22cb46514610403578063ac9650d814610416578063b24f2d391461043657600080fd5b8063754a81d9116100de578063754a81d9146103b15780638da5cb5b146103c4578063938e3d7b146103d557806395d89b41146103e857600080fd5b8063600dd5ea146103705780636352211e1461038357806363b45e2d1461039657806370a082311461039e57600080fd5b806323b872dd1161018757806342842e0e1161015657806342842e0e1461030257806342966c6814610315578063430c2081146103285780634cc157df1461033b57600080fd5b806323b872dd146102a25780632419f51b146102b55780632a55205a146102c85780633b1475a7146102fa57600080fd5b8063081812fc116101c3578063081812fc1461023b578063095ea7b31461026657806313af40351461027957806318160ddd1461028c57600080fd5b806275a317146101e957806301ffc9a7146101fe57806306fdde0314610226575b600080fd5b6101fc6101f7366004611f92565b6104be565b005b61021161020c366004611ff6565b610548565b60405190151581526020015b60405180910390f35b61022e6105b5565b60405161021d919061206b565b61024e61024936600461207e565b610647565b6040516001600160a01b03909116815260200161021d565b6101fc610274366004612097565b61068b565b6101fc6102873660046120c1565b610712565b600154600054035b60405190815260200161021d565b6101fc6102b03660046120dc565b610763565b6102946102c336600461207e565b61076e565b6102db6102d6366004612118565b6107dc565b604080516001600160a01b03909316835260208301919091520161021d565b600054610294565b6101fc6103103660046120dc565b610819565b6101fc61032336600461207e565b610834565b610211610336366004612097565b61083f565b61034e61034936600461207e565b6108be565b604080516001600160a01b03909316835261ffff90911660208301520161021d565b6101fc61037e366004612097565b610929565b61024e61039136600461207e565b610978565b600c54610294565b6102946103ac3660046120c1565b61098a565b6101fc6103bf36600461213a565b6109d9565b6009546001600160a01b031661024e565b6101fc6103e33660046121b8565b610a53565b61022e610aa1565b6101fc6103fe3660046121ed565b610ab0565b6101fc610411366004612212565b610b00565b61042961042436600461224e565b610b96565b60405161021d91906122c3565b600a546001600160a01b03811690600160a01b900461ffff1661034e565b6101fc610462366004612325565b610c8b565b61022e61047536600461207e565b610ccf565b61022e610dbd565b610211610490366004612381565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6104c6610e4b565b6105175760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e00000000000000000060448201526064015b60405180910390fd5b61052961052360005490565b82610e78565b61054482600160405180602001604052806000815250610eff565b5050565b60006301ffc9a760e01b6001600160e01b03198316148061057957506380ac58cd60e01b6001600160e01b03198316145b806105945750635b5e139f60e01b6001600160e01b03198316145b806105af57506001600160e01b0319821663152a902d60e11b145b92915050565b6060600280546105c4906123b4565b80601f01602080910402602001604051908101604052809291908181526020018280546105f0906123b4565b801561063d5780601f106106125761010080835404028352916020019161063d565b820191906000526020600020905b81548152906001019060200180831161062057829003601f168201915b5050505050905090565b6000610652826110c4565b61066f576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061069682610978565b9050806001600160a01b0316836001600160a01b031614156106cb5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614610702576106e58133610490565b610702576040516367d9dca160e11b815260040160405180910390fd5b61070d8383836110ef565b505050565b61071a610e4b565b6107575760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161050e565b6107608161114b565b50565b61070d83838361119d565b6000610779600c5490565b82106107b75760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640161050e565b600c82815481106107ca576107ca6123ef565b90600052602060002001549050919050565b6000806000806107eb866108be565b90945084925061ffff169050612710610804828761241b565b61080e9190612450565b925050509250929050565b61070d83838360405180602001604052806000815250610c8b565b61076081600161138c565b60008061084b83610978565b9050806001600160a01b0316846001600160a01b0316148061089257506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b806108b65750836001600160a01b03166108ab84610647565b6001600160a01b0316145b949350505050565b6000818152600b60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610905578051602082015161091f565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b610931610e4b565b61096e5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161050e565b6105448282611567565b60006109838261161c565b5192915050565b60006001600160a01b0382166109b3576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6109e1610e4b565b610a2d5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e000000000000000000604482015260640161050e565b610a40610a3960005490565b8484611738565b5050610a4d848483610eff565b50505050565b610a5b610e4b565b610a985760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161050e565b610760816117a5565b6060600380546105c4906123b4565b610ab8610e4b565b610af55760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161050e565b61070d838383611887565b6001600160a01b038216331415610b2a5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60608167ffffffffffffffff811115610bb157610bb1611eef565b604051908082528060200260200182016040528015610be457816020015b6060815260200190600190039081610bcf5790505b50905060005b82811015610c8457610c5430858584818110610c0857610c086123ef565b9050602002810190610c1a9190612464565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061195092505050565b828281518110610c6657610c666123ef565b60200260200101819052508080610c7c906124b2565b915050610bea565b5092915050565b610c9684848461119d565b6001600160a01b0383163b15610a4d57610cb28484848461197c565b610a4d576040516368d2bf6b60e11b815260040160405180910390fd5b6000818152600e6020526040812080546060929190610ced906123b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610d19906123b4565b8015610d665780601f10610d3b57610100808354040283529160200191610d66565b820191906000526020600020905b815481529060010190602001808311610d4957829003601f168201915b50505050509050600081511115610d7d5792915050565b6000610d8884611a64565b905080610d9485611c0e565b604051602001610da59291906124cd565b60405160208183030381529060405292505050919050565b60088054610dca906123b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610df6906123b4565b8015610e435780601f10610e1857610100808354040283529160200191610e43565b820191906000526020600020905b815481529060010190602001808311610e2657829003601f168201915b505050505081565b6000610e5f6009546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b6000828152600e602052604090208054610e91906123b4565b159050610ee05760405162461bcd60e51b815260206004820152600f60248201527f55524920616c7265616479207365740000000000000000000000000000000000604482015260640161050e565b6000828152600e60209081526040909120825161070d92840190611e3a565b6000546001600160a01b038416610f2857604051622e076360e81b815260040160405180910390fd5b82610f465760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b1561106f575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4611038600087848060010195508761197c565b611055576040516368d2bf6b60e11b815260040160405180910390fd5b808210610fed57826000541461106a57600080fd5b6110b4565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808210611070575b506000908155610a4d9085838684565b60008054821080156105af575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006111a88261161c565b9050836001600160a01b031681600001516001600160a01b0316146111df5760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b03861614806111fd57506111fd8533610490565b8061121857503361120d84610647565b6001600160a01b0316145b90508061123857604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661125f57604051633a954ecd60e21b815260040160405180910390fd5b61126b600084876110ef565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611341576000548214611341578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b60006113978361161c565b805190915082156113fd576000336001600160a01b03831614806113c057506113c08233610490565b806113db5750336113d086610647565b6001600160a01b0316145b9050806113fb57604051632ce44b5f60e11b815260040160405180910390fd5b505b611409600085836110ef565b6001600160a01b038082166000818152600560209081526040808320805470010000000000000000000000000000000060001967ffffffffffffffff80841691909101811667ffffffffffffffff19841681178390048216600190810183169093027fffffffffffffffff0000000000000000ffffffffffffffff0000000000000000909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661151d57600054821461151d578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060018054810190555050565b6127108111156115ab5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161050e565b600a80546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b60408051606081018252600080825260208201819052918101919091528160005481101561171f57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff1615159181018290529061171d5780516001600160a01b0316156116b3579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff1615159281019290925215611718579392505050565b6116b3565b505b604051636f96cda160e11b815260040160405180910390fd5b60008061174584866124fc565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d60209081526040909120855192945084935061179c929091860190611e3a565b50935093915050565b6000600880546117b4906123b4565b80601f01602080910402602001604051908101604052809291908181526020018280546117e0906123b4565b801561182d5780601f106118025761010080835404028352916020019161182d565b820191906000526020600020905b81548152906001019060200180831161181057829003601f168201915b5050855193945061184993600893506020870192509050611e3a565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161187b929190612514565b60405180910390a15050565b6127108111156118cb5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161050e565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b606061197583836040518060600160405280602781526020016125d960279139611d24565b9392505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906119b1903390899088908890600401612542565b6020604051808303816000875af19250505080156119ec575060408051601f3d908101601f191682019092526119e991810190612574565b60015b611a47573d808015611a1a576040519150601f19603f3d011682016040523d82523d6000602084013e611a1f565b606091505b508051611a3f576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60606000611a71600c5490565b90506000600c805480602002602001604051908101604052809291908181526020018280548015611ac157602002820191906000526020600020905b815481526020019060010190808311611aad575b5050505050905060005b82811015611bc557818181518110611ae557611ae56123ef565b6020026020010151851015611bb357600d6000838381518110611b0a57611b0a6123ef565b602002602001015181526020019081526020016000208054611b2b906123b4565b80601f0160208091040260200160405190810160405280929190818152602001828054611b57906123b4565b8015611ba45780601f10611b7957610100808354040283529160200191611ba4565b820191906000526020600020905b815481529060010190602001808311611b8757829003601f168201915b50505050509350505050919050565b611bbe6001826124fc565b9050611acb565b5060405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420746f6b656e49640000000000000000000000000000000000604482015260640161050e565b606081611c325750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c5c5780611c46816124b2565b9150611c559050600a83612450565b9150611c36565b60008167ffffffffffffffff811115611c7757611c77611eef565b6040519080825280601f01601f191660200182016040528015611ca1576020820181803683370190505b5090505b84156108b657611cb6600183612591565b9150611cc3600a866125a8565b611cce9060306124fc565b60f81b818381518110611ce357611ce36123ef565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611d1d600a86612450565b9450611ca5565b60606001600160a01b0384163b611d8c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161050e565b600080856001600160a01b031685604051611da791906125bc565b600060405180830381855af49150503d8060008114611de2576040519150601f19603f3d011682016040523d82523d6000602084013e611de7565b606091505b5091509150611df7828286611e01565b9695505050505050565b60608315611e10575081611975565b825115611e205782518084602001fd5b8160405162461bcd60e51b815260040161050e919061206b565b828054611e46906123b4565b90600052602060002090601f016020900481019282611e685760008555611eae565b82601f10611e8157805160ff1916838001178555611eae565b82800160010185558215611eae579182015b82811115611eae578251825591602001919060010190611e93565b50611eba929150611ebe565b5090565b5b80821115611eba5760008155600101611ebf565b80356001600160a01b0381168114611eea57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611f1657600080fd5b813567ffffffffffffffff80821115611f3157611f31611eef565b604051601f8301601f19908116603f01168101908282118183101715611f5957611f59611eef565b81604052838152866020858801011115611f7257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611fa557600080fd5b611fae83611ed3565b9150602083013567ffffffffffffffff811115611fca57600080fd5b611fd685828601611f05565b9150509250929050565b6001600160e01b03198116811461076057600080fd5b60006020828403121561200857600080fd5b813561197581611fe0565b60005b8381101561202e578181015183820152602001612016565b83811115610a4d5750506000910152565b60008151808452612057816020860160208601612013565b601f01601f19169290920160200192915050565b602081526000611975602083018461203f565b60006020828403121561209057600080fd5b5035919050565b600080604083850312156120aa57600080fd5b6120b383611ed3565b946020939093013593505050565b6000602082840312156120d357600080fd5b61197582611ed3565b6000806000606084860312156120f157600080fd5b6120fa84611ed3565b925061210860208501611ed3565b9150604084013590509250925092565b6000806040838503121561212b57600080fd5b50508035926020909101359150565b6000806000806080858703121561215057600080fd5b61215985611ed3565b935060208501359250604085013567ffffffffffffffff8082111561217d57600080fd5b61218988838901611f05565b9350606087013591508082111561219f57600080fd5b506121ac87828801611f05565b91505092959194509250565b6000602082840312156121ca57600080fd5b813567ffffffffffffffff8111156121e157600080fd5b6108b684828501611f05565b60008060006060848603121561220257600080fd5b8335925061210860208501611ed3565b6000806040838503121561222557600080fd5b61222e83611ed3565b91506020830135801515811461224357600080fd5b809150509250929050565b6000806020838503121561226157600080fd5b823567ffffffffffffffff8082111561227957600080fd5b818501915085601f83011261228d57600080fd5b81358181111561229c57600080fd5b8660208260051b85010111156122b157600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561231857603f1988860301845261230685835161203f565b945092850192908501906001016122ea565b5092979650505050505050565b6000806000806080858703121561233b57600080fd5b61234485611ed3565b935061235260208601611ed3565b925060408501359150606085013567ffffffffffffffff81111561237557600080fd5b6121ac87828801611f05565b6000806040838503121561239457600080fd5b61239d83611ed3565b91506123ab60208401611ed3565b90509250929050565b600181811c908216806123c857607f821691505b602082108114156123e957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561243557612435612405565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261245f5761245f61243a565b500490565b6000808335601e1984360301811261247b57600080fd5b83018035915067ffffffffffffffff82111561249657600080fd5b6020019150368190038213156124ab57600080fd5b9250929050565b60006000198214156124c6576124c6612405565b5060010190565b600083516124df818460208801612013565b8351908301906124f3818360208801612013565b01949350505050565b6000821982111561250f5761250f612405565b500190565b604081526000612527604083018561203f565b8281036020840152612539818561203f565b95945050505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611df7608083018461203f565b60006020828403121561258657600080fd5b815161197581611fe0565b6000828210156125a3576125a3612405565b500390565b6000826125b7576125b761243a565b500690565b600082516125ce818460208701612013565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205487905bb3deef6069d1b923136363e846e831866899c13e46537a6f6ee364ce64736f6c634300080c0033";

const isSuperArgs$s = xs => xs.length > 1;

class ERC721Base__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$s(args)) {
      super(...args);
    } else {
      super(_abi$1C, _bytecode$s, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1C);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1C, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC721Base__factory, "bytecode", _bytecode$s);

defineProperty._defineProperty(ERC721Base__factory, "abi", _abi$1C);

const _abi$1B = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [],
  name: "ApprovalCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalToCurrentOwner",
  type: "error"
}, {
  inputs: [],
  name: "ApproveToCaller",
  type: "error"
}, {
  inputs: [],
  name: "BalanceQueryForZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintZeroQuantity",
  type: "error"
}, {
  inputs: [],
  name: "OwnerQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "TransferCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "TransferFromIncorrectOwner",
  type: "error"
}, {
  inputs: [],
  name: "TransferToNonERC721ReceiverImplementer",
  type: "error"
}, {
  inputs: [],
  name: "TransferToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "URIQueryForNonexistentToken",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  name: "TokenURIRevealed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "encryptDecrypt",
  outputs: [{
    internalType: "bytes",
    name: "result",
    type: "bytes"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "encryptedData",
  outputs: [{
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "getRevealURI",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }],
  name: "isEncryptedBatch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [{
    internalType: "uint256",
    name: "batchId",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToClaim",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "reveal",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$r = "0x60806040523480156200001157600080fd5b50604051620033413803806200334183398101604081905262000034916200030d565b8383838383838160029080519060200190620000529291906200019a565b508051620000689060039060208401906200019a565b505060008055506200007a336200009d565b6200008f826001600160801b038316620000ef565b5050505050505050620003f6565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115620001385760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b828054620001a890620003b9565b90600052602060002090601f016020900481019282620001cc576000855562000217565b82601f10620001e757805160ff191683800117855562000217565b8280016001018555821562000217579182015b8281111562000217578251825591602001919060010190620001fa565b506200022592915062000229565b5090565b5b808211156200022557600081556001016200022a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026857600080fd5b81516001600160401b038082111562000285576200028562000240565b604051601f8301601f19908116603f01168101908282118183101715620002b057620002b062000240565b81604052838152602092508683858801011115620002cd57600080fd5b600091505b83821015620002f15785820183015181830184015290820190620002d2565b83821115620003035760008385830101525b9695505050505050565b600080600080608085870312156200032457600080fd5b84516001600160401b03808211156200033c57600080fd5b6200034a8883890162000256565b955060208701519150808211156200036157600080fd5b50620003708782880162000256565b604087015190945090506001600160a01b03811681146200039057600080fd5b60608601519092506001600160801b0381168114620003ae57600080fd5b939692955090935050565b600181811c90821680620003ce57607f821691505b60208210811415620003f057634e487b7160e01b600052602260045260246000fd5b50919050565b612f3b80620004066000396000f3fe60806040526004361061021a5760003560e01c806370a0823111610123578063ac9650d8116100ab578063ce8056421161006f578063ce80564214610670578063d37c353b14610690578063e7150322146106b0578063e8a3d485146106d0578063e985e9c5146106e557600080fd5b8063ac9650d8146105c3578063acd083f8146105f0578063b24f2d3914610605578063b88d4fde14610630578063c87b56dd1461065057600080fd5b80639bcf7a15116100f25780639bcf7a15146105305780639fc4d68f14610550578063a05112fc14610570578063a22cb46514610590578063aad3ec96146105b057600080fd5b806370a08231146104bd5780638da5cb5b146104dd578063938e3d7b146104fb57806395d89b411461051b57600080fd5b80632f92023a116101a6578063492e224b11610175578063492e224b146104065780634cc157df14610426578063600dd5ea146104685780636352211e1461048857806363b45e2d146104a857600080fd5b80632f92023a146103925780633b1475a7146103b157806342842e0e146103c657806342966c68146103e657600080fd5b806313af4035116101ed57806313af4035146102d057806318160ddd146102f057806323b872dd146103135780632419f51b146103335780632a55205a1461035357600080fd5b806301ffc9a71461021f57806306fdde0314610254578063081812fc14610276578063095ea7b3146102ae575b600080fd5b34801561022b57600080fd5b5061023f61023a366004612585565b61072e565b60405190151581526020015b60405180910390f35b34801561026057600080fd5b5061026961079b565b60405161024b91906125fa565b34801561028257600080fd5b5061029661029136600461260d565b61082d565b6040516001600160a01b03909116815260200161024b565b3480156102ba57600080fd5b506102ce6102c9366004612642565b610871565b005b3480156102dc57600080fd5b506102ce6102eb36600461266c565b6108f8565b3480156102fc57600080fd5b50600154600054035b60405190815260200161024b565b34801561031f57600080fd5b506102ce61032e366004612687565b61094e565b34801561033f57600080fd5b5061030561034e36600461260d565b610959565b34801561035f57600080fd5b5061037361036e3660046126c3565b6109c7565b604080516001600160a01b03909316835260208301919091520161024b565b34801561039e57600080fd5b506102ce6103ad366004612642565b5050565b3480156103bd57600080fd5b50600e54610305565b3480156103d257600080fd5b506102ce6103e1366004612687565b610a04565b3480156103f257600080fd5b506102ce61040136600461260d565b610a1f565b34801561041257600080fd5b5061023f61042136600461260d565b610a2a565b34801561043257600080fd5b5061044661044136600461260d565b610a50565b604080516001600160a01b03909316835261ffff90911660208301520161024b565b34801561047457600080fd5b506102ce610483366004612642565b610abb565b34801561049457600080fd5b506102966104a336600461260d565b610b0a565b3480156104b457600080fd5b50600c54610305565b3480156104c957600080fd5b506103056104d836600461266c565b610b1c565b3480156104e957600080fd5b506009546001600160a01b0316610296565b34801561050757600080fd5b506102ce610516366004612792565b610b6b565b34801561052757600080fd5b50610269610bb9565b34801561053c57600080fd5b506102ce61054b3660046127db565b610bc8565b34801561055c57600080fd5b5061026961056b366004612849565b610c18565b34801561057c57600080fd5b5061026961058b36600461260d565b610da5565b34801561059c57600080fd5b506102ce6105ab366004612895565b610e3f565b6102ce6105be366004612642565b610ed5565b3480156105cf57600080fd5b506105e36105de3660046128d1565b610fa0565b60405161024b9190612946565b3480156105fc57600080fd5b50600054610305565b34801561061157600080fd5b50600a546001600160a01b03811690600160a01b900461ffff16610446565b34801561063c57600080fd5b506102ce61064b3660046129c8565b611095565b34801561065c57600080fd5b5061026961066b36600461260d565b6110df565b34801561067c57600080fd5b5061026961068b366004612849565b61114e565b34801561069c57600080fd5b506103056106ab366004612a30565b611212565b3480156106bc57600080fd5b506102696106cb366004612aaa565b6112aa565b3480156106dc57600080fd5b5061026961131f565b3480156106f157600080fd5b5061023f610700366004612b06565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061075f57506380ac58cd60e01b6001600160e01b03198316145b8061077a5750635b5e139f60e01b6001600160e01b03198316145b8061079557506001600160e01b0319821663152a902d60e11b145b92915050565b6060600280546107aa90612b39565b80601f01602080910402602001604051908101604052809291908181526020018280546107d690612b39565b80156108235780601f106107f857610100808354040283529160200191610823565b820191906000526020600020905b81548152906001019060200180831161080657829003601f168201915b5050505050905090565b60006108388261132c565b610855576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061087c82610b0a565b9050806001600160a01b0316836001600160a01b031614156108b15760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146108e8576108cb8133610700565b6108e8576040516367d9dca160e11b815260040160405180910390fd5b6108f3838383611357565b505050565b6109006113b3565b6109425760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b61094b816113e0565b50565b6108f3838383611432565b6000610964600c5490565b82106109a25760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610939565b600c82815481106109b5576109b5612b74565b90600052602060002001549050919050565b6000806000806109d686610a50565b90945084925061ffff1690506127106109ef8287612ba0565b6109f99190612bd5565b925050509250929050565b6108f383838360405180602001604052806000815250611095565b61094b816001611621565b6000818152600f602052604081208054829190610a4690612b39565b9050119050919050565b6000818152600b60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610a975780516020820151610ab1565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b610ac36113b3565b610b005760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610939565b6103ad82826117fc565b6000610b15826118b1565b5192915050565b60006001600160a01b038216610b45576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610b736113b3565b610bb05760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610939565b61094b816119cd565b6060600380546107aa90612b39565b610bd06113b3565b610c0d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610939565b6108f3838383611aaf565b6000838152600f6020526040812080546060929190610c3690612b39565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6290612b39565b8015610caf5780601f10610c8457610100808354040283529160200191610caf565b820191906000526020600020905b815481529060010190602001808311610c9257829003601f168201915b50505050509050805160001415610d085760405162461bcd60e51b815260206004820152601160248201527f4e6f7468696e6720746f2072657665616c0000000000000000000000000000006044820152606401610939565b60008082806020019051810190610d1f9190612be9565b91509150610d2e8287876112aa565b93508084878746604051602001610d489493929190612c6a565b6040516020818303038152906040528051906020012014610d9b5760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610939565b5050509392505050565b600f6020526000908152604090208054610dbe90612b39565b80601f0160208091040260200160405190810160405280929190818152602001828054610dea90612b39565b8015610e375780601f10610e0c57610100808354040283529160200191610e37565b820191906000526020600020905b815481529060010190602001808311610e1a57829003601f168201915b505050505081565b6001600160a01b038216331415610e695760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600054600e54610ee58383612c93565b1115610f335760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420656e6f756768206c617a79206d696e74656420746f6b656e732e00006044820152606401610939565b610f4d838360405180602001604052806000815250611b78565b80836001600160a01b0316336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de685604051610f9391815260200190565b60405180910390a4505050565b60608167ffffffffffffffff811115610fbb57610fbb6126e5565b604051908082528060200260200182016040528015610fee57816020015b6060815260200190600190039081610fd95790505b50905060005b8281101561108e5761105e3085858481811061101257611012612b74565b90506020028101906110249190612cab565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d3d92505050565b82828151811061107057611070612b74565b6020026020010181905250808061108690612cf2565b915050610ff4565b5092915050565b6110a0848484611432565b6001600160a01b0383163b156110d9576110bc84848484611d69565b6110d9576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606060006110ec83611e52565b50905060006110fa84611f65565b905061110582610a2a565b15611133578060405160200161111b9190612d0d565b60405160208183030381529060405292505050919050565b8061113d856120c6565b60405160200161111b929190612d32565b60606111586113b3565b6111955760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610939565b60006111a085610959565b90506111ad818585610c18565b91506111c881604051806020016040528060008152506121dc565b6111d281836121fb565b847f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d8360405161120291906125fa565b60405180910390a2509392505050565b600081156112935760008061122984860186612d61565b91509150815160001415801561123e57508015155b156112905761129088600e546112549190612c93565b86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506121dc92505050565b50505b6112a0868686868661221a565b9695505050505050565b8251604080518083016020019091528181529060005b818110156113165760008585836040516020016112df93929190612da6565b60408051601f1981840301815291905280516020918201208884018201511885840182015261130f915082612c93565b90506112c0565b50509392505050565b60088054610dbe90612b39565b6000805482108015610795575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006113c76009546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600061143d826118b1565b9050836001600160a01b031681600001516001600160a01b0316146114745760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b038616148061149257506114928533610700565b806114ad5750336114a28461082d565b6001600160a01b0316145b9050806114cd57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166114f457604051633a954ecd60e21b815260040160405180910390fd5b61150060008487611357565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166115d65760005482146115d6578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b600061162c836118b1565b80519091508215611692576000336001600160a01b038316148061165557506116558233610700565b806116705750336116658661082d565b6001600160a01b0316145b90508061169057604051632ce44b5f60e11b815260040160405180910390fd5b505b61169e60008583611357565b6001600160a01b038082166000818152600560209081526040808320805470010000000000000000000000000000000060001967ffffffffffffffff80841691909101811667ffffffffffffffff19841681178390048216600190810183169093027fffffffffffffffff0000000000000000ffffffffffffffff0000000000000000909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b1785559189018084529220805491949091166117b25760005482146117b2578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060018054810190555050565b6127108111156118405760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610939565b600a80546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6040805160608101825260008082526020820181905291810191909152816000548110156119b457600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906119b25780516001600160a01b031615611948579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff16151592810192909252156119ad579392505050565b611948565b505b604051636f96cda160e11b815260040160405180910390fd5b6000600880546119dc90612b39565b80601f0160208091040260200160405190810160405280929190818152602001828054611a0890612b39565b8015611a555780601f10611a2a57610100808354040283529160200191611a55565b820191906000526020600020905b815481529060010190602001808311611a3857829003601f168201915b50508551939450611a71936008935060208701925090506124d6565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611aa3929190612db8565b60405180910390a15050565b612710811115611af35760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610939565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b6000546001600160a01b038416611ba157604051622e076360e81b815260040160405180910390fd5b82611bbf5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b15611ce8575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4611cb16000878480600101955087611d69565b611cce576040516368d2bf6b60e11b815260040160405180910390fd5b808210611c66578260005414611ce357600080fd5b611d2d565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808210611ce9575b5060009081556110d99085838684565b6060611d628383604051806060016040528060278152602001612edf6027913961235d565b9392505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611d9e903390899088908890600401612de6565b6020604051808303816000875af1925050508015611dd9575060408051601f3d908101601f19168201909252611dd691810190612e18565b60015b611e34573d808015611e07576040519150601f19603f3d011682016040523d82523d6000602084013e611e0c565b606091505b508051611e2c576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6000806000611e60600c5490565b90506000600c805480602002602001604051908101604052809291908181526020018280548015611eb057602002820191906000526020600020905b815481526020019060010190808311611e9c575b5050505050905060005b82811015611f1c57818181518110611ed457611ed4612b74565b6020026020010151861015611f0a57809350818181518110611ef857611ef8612b74565b60200260200101519450505050915091565b611f15600182612c93565b9050611eba565b5060405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420746f6b656e496400000000000000000000000000000000006044820152606401610939565b60606000611f72600c5490565b90506000600c805480602002602001604051908101604052809291908181526020018280548015611fc257602002820191906000526020600020905b815481526020019060010190808311611fae575b5050505050905060005b82811015611f1c57818181518110611fe657611fe6612b74565b60200260200101518510156120b457600d600083838151811061200b5761200b612b74565b60200260200101518152602001908152602001600020805461202c90612b39565b80601f016020809104026020016040519081016040528092919081815260200182805461205890612b39565b80156120a55780601f1061207a576101008083540402835291602001916120a5565b820191906000526020600020905b81548152906001019060200180831161208857829003601f168201915b50505050509350505050919050565b6120bf600182612c93565b9050611fcc565b6060816120ea5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561211457806120fe81612cf2565b915061210d9050600a83612bd5565b91506120ee565b60008167ffffffffffffffff81111561212f5761212f6126e5565b6040519080825280601f01601f191660200182016040528015612159576020820181803683370190505b5090505b8415611e4a5761216e600183612e35565b915061217b600a86612e4c565b612186906030612c93565b60f81b81838151811061219b5761219b612b74565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506121d5600a86612bd5565b945061215d565b6000828152600f6020908152604090912082516108f3928401906124d6565b6000828152600d6020908152604090912082516108f3928401906124d6565b60006122246113b3565b6122615760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610939565b856122ae5760405162461bcd60e51b815260206004820152601060248201527f4d696e74696e67203020746f6b656e73000000000000000000000000000000006044820152606401610939565b6000600e5490506122f6818888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061243092505050565b600e919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d600161232c8a84612c93565b6123369190612e35565b8888888860405161234b959493929190612e89565b60405180910390a25095945050505050565b60606001600160a01b0384163b6123c55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610939565b600080856001600160a01b0316856040516123e09190612ec2565b600060405180830381855af49150503d806000811461241b576040519150601f19603f3d011682016040523d82523d6000602084013e612420565b606091505b50915091506112a082828661249d565b60008061243d8486612c93565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d6020908152604090912085519294508493506124949290918601906124d6565b50935093915050565b606083156124ac575081611d62565b8251156124bc5782518084602001fd5b8160405162461bcd60e51b815260040161093991906125fa565b8280546124e290612b39565b90600052602060002090601f016020900481019282612504576000855561254a565b82601f1061251d57805160ff191683800117855561254a565b8280016001018555821561254a579182015b8281111561254a57825182559160200191906001019061252f565b5061255692915061255a565b5090565b5b80821115612556576000815560010161255b565b6001600160e01b03198116811461094b57600080fd5b60006020828403121561259757600080fd5b8135611d628161256f565b60005b838110156125bd5781810151838201526020016125a5565b838111156110d95750506000910152565b600081518084526125e68160208601602086016125a2565b601f01601f19169290920160200192915050565b602081526000611d6260208301846125ce565b60006020828403121561261f57600080fd5b5035919050565b80356001600160a01b038116811461263d57600080fd5b919050565b6000806040838503121561265557600080fd5b61265e83612626565b946020939093013593505050565b60006020828403121561267e57600080fd5b611d6282612626565b60008060006060848603121561269c57600080fd5b6126a584612626565b92506126b360208501612626565b9150604084013590509250925092565b600080604083850312156126d657600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612724576127246126e5565b604052919050565b600067ffffffffffffffff821115612746576127466126e5565b50601f01601f191660200190565b60006127676127628461272c565b6126fb565b905082815283838301111561277b57600080fd5b828260208301376000602084830101529392505050565b6000602082840312156127a457600080fd5b813567ffffffffffffffff8111156127bb57600080fd5b8201601f810184136127cc57600080fd5b611e4a84823560208401612754565b6000806000606084860312156127f057600080fd5b833592506126b360208501612626565b60008083601f84011261281257600080fd5b50813567ffffffffffffffff81111561282a57600080fd5b60208301915083602082850101111561284257600080fd5b9250929050565b60008060006040848603121561285e57600080fd5b83359250602084013567ffffffffffffffff81111561287c57600080fd5b61288886828701612800565b9497909650939450505050565b600080604083850312156128a857600080fd5b6128b183612626565b9150602083013580151581146128c657600080fd5b809150509250929050565b600080602083850312156128e457600080fd5b823567ffffffffffffffff808211156128fc57600080fd5b818501915085601f83011261291057600080fd5b81358181111561291f57600080fd5b8660208260051b850101111561293457600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561299b57603f198886030184526129898583516125ce565b9450928501929085019060010161296d565b5092979650505050505050565b600082601f8301126129b957600080fd5b611d6283833560208501612754565b600080600080608085870312156129de57600080fd5b6129e785612626565b93506129f560208601612626565b925060408501359150606085013567ffffffffffffffff811115612a1857600080fd5b612a24878288016129a8565b91505092959194509250565b600080600080600060608688031215612a4857600080fd5b85359450602086013567ffffffffffffffff80821115612a6757600080fd5b612a7389838a01612800565b90965094506040880135915080821115612a8c57600080fd5b50612a9988828901612800565b969995985093965092949392505050565b600080600060408486031215612abf57600080fd5b833567ffffffffffffffff80821115612ad757600080fd5b612ae3878388016129a8565b94506020860135915080821115612af957600080fd5b5061288886828701612800565b60008060408385031215612b1957600080fd5b612b2283612626565b9150612b3060208401612626565b90509250929050565b600181811c90821680612b4d57607f821691505b60208210811415612b6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612bba57612bba612b8a565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612be457612be4612bbf565b500490565b60008060408385031215612bfc57600080fd5b825167ffffffffffffffff811115612c1357600080fd5b8301601f81018513612c2457600080fd5b8051612c326127628261272c565b818152866020838501011115612c4757600080fd5b612c588260208301602086016125a2565b60209590950151949694955050505050565b60008551612c7c818460208a016125a2565b820184868237909301918252506020019392505050565b60008219821115612ca657612ca6612b8a565b500190565b6000808335601e19843603018112612cc257600080fd5b83018035915067ffffffffffffffff821115612cdd57600080fd5b60200191503681900382131561284257600080fd5b6000600019821415612d0657612d06612b8a565b5060010190565b60008251612d1f8184602087016125a2565b600360fc1b920191825250600101919050565b60008351612d448184602088016125a2565b835190830190612d588183602088016125a2565b01949350505050565b60008060408385031215612d7457600080fd5b823567ffffffffffffffff811115612d8b57600080fd5b612d97858286016129a8565b95602094909401359450505050565b82848237909101908152602001919050565b604081526000612dcb60408301856125ce565b8281036020840152612ddd81856125ce565b95945050505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526112a060808301846125ce565b600060208284031215612e2a57600080fd5b8151611d628161256f565b600082821015612e4757612e47612b8a565b500390565b600082612e5b57612e5b612bbf565b500690565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b858152606060208201526000612ea3606083018688612e60565b8281036040840152612eb6818587612e60565b98975050505050505050565b60008251612ed48184602087016125a2565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201c6b0609f9a30cb199edf28526092de870884e7880547781976110b73b5e786464736f6c634300080c0033";

const isSuperArgs$r = xs => xs.length > 1;

class ERC721DelayedReveal__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$r(args)) {
      super(...args);
    } else {
      super(_abi$1B, _bytecode$r, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1B);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1B, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC721DelayedReveal__factory, "bytecode", _bytecode$r);

defineProperty._defineProperty(ERC721DelayedReveal__factory, "abi", _abi$1B);

const _abi$1A = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [],
  name: "ApprovalCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalToCurrentOwner",
  type: "error"
}, {
  inputs: [],
  name: "ApproveToCaller",
  type: "error"
}, {
  inputs: [],
  name: "BalanceQueryForZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintZeroQuantity",
  type: "error"
}, {
  inputs: [],
  name: "OwnerQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "TransferCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "TransferFromIncorrectOwner",
  type: "error"
}, {
  inputs: [],
  name: "TransferToNonERC721ReceiverImplementer",
  type: "error"
}, {
  inputs: [],
  name: "TransferToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "URIQueryForNonexistentToken",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  name: "TokenURIRevealed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "startTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "maxClaimableSupply",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "supplyClaimed",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "quantityLimitPerTransaction",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "waitTimeInSecondsBetweenClaims",
    type: "uint256"
  }, {
    internalType: "bytes32",
    name: "merkleRoot",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "encryptDecrypt",
  outputs: [{
    internalType: "bytes",
    name: "result",
    type: "bytes"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "encryptedData",
  outputs: [{
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimedAt",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "getRevealURI",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }],
  name: "isEncryptedBatch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [{
    internalType: "uint256",
    name: "batchId",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToClaim",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "reveal",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "_condition",
    type: "tuple"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$q = "0x60806040523480156200001157600080fd5b50604051620044ee380380620044ee833981016040819052620000349162000377565b8451859085906200004d906002906020850190620001e7565b50805162000063906003906020840190620001e7565b505060008055506200007533620000a0565b6200008a836001600160801b038416620000f2565b62000095816200019d565b505050505062000464565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156200013b5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600e80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b828054620001f59062000427565b90600052602060002090601f01602090048101928262000219576000855562000264565b82601f106200023457805160ff191683800117855562000264565b8280016001018555821562000264579182015b828111156200026457825182559160200191906001019062000247565b506200027292915062000276565b5090565b5b8082111562000272576000815560010162000277565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002b557600080fd5b81516001600160401b0380821115620002d257620002d26200028d565b604051601f8301601f19908116603f01168101908282118183101715620002fd57620002fd6200028d565b816040528381526020925086838588010111156200031a57600080fd5b600091505b838210156200033e57858201830151818301840152908201906200031f565b83821115620003505760008385830101525b9695505050505050565b80516001600160a01b03811681146200037257600080fd5b919050565b600080600080600060a086880312156200039057600080fd5b85516001600160401b0380821115620003a857600080fd5b620003b689838a01620002a3565b96506020880151915080821115620003cd57600080fd5b50620003dc88828901620002a3565b945050620003ed604087016200035a565b60608701519093506001600160801b03811681146200040b57600080fd5b91506200041b608087016200035a565b90509295509295909350565b600181811c908216806200043c57607f821691505b602082108114156200045e57634e487b7160e01b600052602260045260246000fd5b50919050565b61407a80620004746000396000f3fe60806040526004361061028c5760003560e01c806377312a9e11610164578063b24f2d39116100c6578063d37c353b1161008a578063e8a3d48511610064578063e8a3d48514610852578063e985e9c514610867578063ffbb7a13146108b057600080fd5b8063d37c353b14610792578063d637ed59146107b2578063e71503221461083257600080fd5b8063b24f2d39146106d2578063b67875ce146106fd578063b88d4fde14610732578063c87b56dd14610752578063ce8056421461077257600080fd5b80639fc4d68f11610128578063a72e157d11610102578063a72e157d14610670578063ac9650d814610690578063acd083f8146106bd57600080fd5b80639fc4d68f14610610578063a05112fc14610630578063a22cb4651461065057600080fd5b806377312a9e1461057d5780638da5cb5b1461059d578063938e3d7b146105bb57806395d89b41146105db5780639bcf7a15146105f057600080fd5b80633b1475a71161020d5780635ab31c1a116101d157806363b45e2d116101ab57806363b45e2d146105285780636f4f28371461053d57806370a082311461055d57600080fd5b80635ab31c1a146104d5578063600dd5ea146104e85780636352211e1461050857600080fd5b80633b1475a71461041e57806342842e0e1461043357806342966c6814610453578063492e224b146104735780634cc157df1461049357600080fd5b806313af40351161025457806313af40351461035c57806318160ddd1461037c57806323b872dd1461039f5780632419f51b146103bf5780632a55205a146103df57600080fd5b806301ffc9a71461029157806306fdde03146102c6578063079fe40e146102e8578063081812fc1461031a578063095ea7b31461033a575b600080fd5b34801561029d57600080fd5b506102b16102ac366004613451565b6108e7565b60405190151581526020015b60405180910390f35b3480156102d257600080fd5b506102db610954565b6040516102bd91906134c6565b3480156102f457600080fd5b50600e546001600160a01b03165b6040516001600160a01b0390911681526020016102bd565b34801561032657600080fd5b506103026103353660046134d9565b6109e6565b34801561034657600080fd5b5061035a61035536600461350e565b610a2a565b005b34801561036857600080fd5b5061035a610377366004613538565b610ab1565b34801561038857600080fd5b50600154600054035b6040519081526020016102bd565b3480156103ab57600080fd5b5061035a6103ba366004613553565b610b07565b3480156103cb57600080fd5b506103916103da3660046134d9565b610b12565b3480156103eb57600080fd5b506103ff6103fa36600461358f565b610b80565b604080516001600160a01b0390931683526020830191909152016102bd565b34801561042a57600080fd5b50600f54610391565b34801561043f57600080fd5b5061035a61044e366004613553565b610bbd565b34801561045f57600080fd5b5061035a61046e3660046134d9565b610bd8565b34801561047f57600080fd5b506102b161048e3660046134d9565b610be3565b34801561049f57600080fd5b506104b36104ae3660046134d9565b610c09565b604080516001600160a01b03909316835261ffff9091166020830152016102bd565b61035a6104e3366004613696565b610c74565b3480156104f457600080fd5b5061035a61050336600461350e565b610da6565b34801561051457600080fd5b506103026105233660046134d9565b610df9565b34801561053457600080fd5b50600c54610391565b34801561054957600080fd5b5061035a610558366004613538565b610e0b565b34801561056957600080fd5b50610391610578366004613538565b610e59565b34801561058957600080fd5b5061035a61059836600461373b565b610ea8565b3480156105a957600080fd5b506009546001600160a01b0316610302565b3480156105c757600080fd5b5061035a6105d636600461377c565b611093565b3480156105e757600080fd5b506102db6110e1565b3480156105fc57600080fd5b5061035a61060b3660046137c5565b6110f0565b34801561061c57600080fd5b506102db61062b366004613833565b611140565b34801561063c57600080fd5b506102db61064b3660046134d9565b6112cd565b34801561065c57600080fd5b5061035a61066b36600461387f565b611367565b34801561067c57600080fd5b5061035a61068b3660046138ab565b6113fd565b34801561069c57600080fd5b506106b06106ab366004613906565b6115f0565b6040516102bd919061397b565b3480156106c957600080fd5b50600054610391565b3480156106de57600080fd5b50600a546001600160a01b03811690600160a01b900461ffff166104b3565b34801561070957600080fd5b5061071d610718366004613538565b6116e5565b604080519283526020830191909152016102bd565b34801561073e57600080fd5b5061035a61074d3660046139dd565b611722565b34801561075e57600080fd5b506102db61076d3660046134d9565b61176c565b34801561077e57600080fd5b506102db61078d366004613833565b6117db565b34801561079e57600080fd5b506103916107ad366004613a45565b61189f565b3480156107be57600080fd5b506011546012546013546014546015546016546017546018546107ee97969594939291906001600160a01b031688565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c08301526001600160a01b031660e0820152610100016102bd565b34801561083e57600080fd5b506102db61084d366004613abf565b611937565b34801561085e57600080fd5b506102db6119ac565b34801561087357600080fd5b506102b1610882366004613b1b565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156108bc57600080fd5b506108d06108cb366004613b4e565b6119b9565b6040805192151583526020830191909152016102bd565b60006301ffc9a760e01b6001600160e01b03198316148061091857506380ac58cd60e01b6001600160e01b03198316145b806109335750635b5e139f60e01b6001600160e01b03198316145b8061094e57506001600160e01b0319821663152a902d60e11b145b92915050565b60606002805461096390613ba5565b80601f016020809104026020016040519081016040528092919081815260200182805461098f90613ba5565b80156109dc5780601f106109b1576101008083540402835291602001916109dc565b820191906000526020600020905b8154815290600101906020018083116109bf57829003601f168201915b5050505050905090565b60006109f182611bc5565b610a0e576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610a3582610df9565b9050806001600160a01b0316836001600160a01b03161415610a6a5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614610aa157610a848133610882565b610aa1576040516367d9dca160e11b815260040160405180910390fd5b610aac838383611bf0565b505050565b610ab9611c4c565b610afb5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b610b0481611c79565b50565b610aac838383611ccb565b6000610b1d600c5490565b8210610b5b5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610af2565b600c8281548110610b6e57610b6e613bda565b90600052602060002001549050919050565b600080600080610b8f86610c09565b90945084925061ffff169050612710610ba88287613c06565b610bb29190613c3b565b925050509250929050565b610aac83838360405180602001604052806000815250611722565b610b04816001611eba565b60008181526010602052604081208054829190610bff90613ba5565b9050119050919050565b6000818152600b60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610c505780516020820151610c6a565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b610c82868686868686612095565b601954600080610c933389876119b9565b915091506000856020013560001480610cac5750601654155b9050610cbb338a8a8a856113fd565b828015610ccc575060008660200135115b15610cfb576000848152601b60209081526040808320600886901c845290915290208054600160ff85161b1790555b8860116002016000828254610d109190613c4f565b90915550506000848152601a602090815260408083203384529091528120429055610d3d908a8a8a612131565b6000610d498b8b6121ef565b9050806001600160a01b038c16336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de68d604051610d9191815260200190565b60405180910390a45050505050505050505050565b610dae611c4c565b610deb5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b610df582826121fc565b5050565b6000610e04826122b1565b5192915050565b610e13611c4c565b610e505760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b610b04816123cd565b60006001600160a01b038216610e82576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610eb0611c4c565b610eed5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b6019546013548215610f3c575060003360405160609190911b6bffffffffffffffffffffffff191660208201524360348201526054016040516020818303038152906040528051906020012091505b8360200135811115610f905760405162461bcd60e51b815260206004820152601260248201527f6d617820737570706c7920636c61696d656400000000000000000000000000006044820152606401610af2565b604051806101000160405280856000013581526020018560200135815260200182815260200185606001358152602001856080013581526020018560a0013581526020018560c0013581526020018560e0016020810190610ff19190613538565b6001600160a01b03908116909152815160115560208201516012556040808301516013556060830151601455608083015160155560a083015160165560c083015160175560e090920151601880546001600160a01b031916919092161790556019839055517f583ecce39d40d7b7653fd2cb1cdc19aa03714482ffd00fafa242355cdcd79080906110859086908690613c67565b60405180910390a150505050565b61109b611c4c565b6110d85760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b610b0481612417565b60606003805461096390613ba5565b6110f8611c4c565b6111355760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b610aac8383836124f9565b60008381526010602052604081208054606092919061115e90613ba5565b80601f016020809104026020016040519081016040528092919081815260200182805461118a90613ba5565b80156111d75780601f106111ac576101008083540402835291602001916111d7565b820191906000526020600020905b8154815290600101906020018083116111ba57829003601f168201915b505050505090508051600014156112305760405162461bcd60e51b815260206004820152601160248201527f4e6f7468696e6720746f2072657665616c0000000000000000000000000000006044820152606401610af2565b600080828060200190518101906112479190613cd9565b91509150611256828787611937565b935080848787466040516020016112709493929190613d5a565b60405160208183030381529060405280519060200120146112c35760405162461bcd60e51b815260206004820152600d60248201526c496e636f7272656374206b657960981b6044820152606401610af2565b5050509392505050565b601060205260009081526040902080546112e690613ba5565b80601f016020809104026020016040519081016040528092919081815260200182805461131290613ba5565b801561135f5780601f106113345761010080835404028352916020019161135f565b820191906000526020600020905b81548152906001019060200180831161134257829003601f168201915b505050505081565b6001600160a01b0382163314156113915760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b604080516101008101825260115481526012546020820152601354918101919091526014546060820152601554608082015260165460a082015260175460c08201526018546001600160a01b0390811660e0830181905290851614158061146857508060c001518314155b156114b55760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207072696365206f722063757272656e6379000000000000006044820152606401610af2565b8415806114cd57508180156114cd5750806060015185115b1561151a5760405162461bcd60e51b815260206004820152601060248201527f496e76616c6964207175616e74697479000000000000000000000000000000006044820152606401610af2565b806020015185826040015161152f9190613c4f565b111561157d5760405162461bcd60e51b815260206004820152601260248201527f65786365656473206d617820737570706c7900000000000000000000000000006044820152606401610af2565b600080611589886116e5565b9150915042836000015111806115a8575081158015906115a857508042105b156115e65760405162461bcd60e51b815260206004820152600e60248201526d18d85b9d0818db185a5b481e595d60921b6044820152606401610af2565b5050505050505050565b60608167ffffffffffffffff81111561160b5761160b6135c9565b60405190808252806020026020018201604052801561163e57816020015b60608152602001906001900390816116295790505b50905060005b828110156116de576116ae3085858481811061166257611662613bda565b90506020028101906116749190613d83565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506125c292505050565b8282815181106116c0576116c0613bda565b602002602001018190525080806116d690613dca565b915050611644565b5092915050565b6019546000908152601a602090815260408083206001600160a01b038516845290915290205460155481018181101561171d57506000195b915091565b61172d848484611ccb565b6001600160a01b0383163b1561176657611749848484846125ee565b611766576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000611779836126d7565b5090506000611787846127ea565b905061179282610be3565b156117c057806040516020016117a89190613de5565b60405160208183030381529060405292505050919050565b806117ca8561294b565b6040516020016117a8929190613e0a565b60606117e5611c4c565b6118225760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b600061182d85610b12565b905061183a818585611140565b91506118558160405180602001604052806000815250612a61565b61185f8183612a80565b847f6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d8360405161188f91906134c6565b60405180910390a2509392505050565b60008115611920576000806118b684860186613e39565b9150915081516000141580156118cb57508015155b1561191d5761191d88600f546118e19190613c4f565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612a6192505050565b50505b61192d8686868686612a9f565b9695505050505050565b8251604080518083016020019091528181529060005b818110156119a357600085858360405160200161196c93929190613e7e565b60408051601f1981840301815291905280516020918201208884018201511885840182015261199c915082613c4f565b905061194d565b50509392505050565b600880546112e690613ba5565b604080516101008101825260115481526012546020820152601354918101919091526014546060820152601554608082015260165460a0820181905260175460c08301526018546001600160a01b031660e0830152600091829115611bbc57611aa1611a258580613e90565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050505060a08301516040516bffffffffffffffffffffffff1960608b901b16602080830191909152880135603482015260540160405160208183030381529060405280519060200120612be2565b909350915082611af35760405162461bcd60e51b815260206004820152601060248201527f6e6f7420696e20616c6c6f776c697374000000000000000000000000000000006044820152606401610af2565b6019546000908152601b60209081526040808320600886901c8452909152902054600160ff84161b1615611b595760405162461bcd60e51b815260206004820152600d60248201526c1c1c9bdbd98818db185a5b5959609a1b6044820152606401610af2565b602084013515801590611b6f5750836020013585115b15611bbc5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207174792070726f6f660000000000000000000000000000006044820152606401610af2565b50935093915050565b600080548210801561094e575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611c606009546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6000611cd6826122b1565b9050836001600160a01b031681600001516001600160a01b031614611d0d5760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611d2b5750611d2b8533610882565b80611d46575033611d3b846109e6565b6001600160a01b0316145b905080611d6657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611d8d57604051633a954ecd60e21b815260040160405180910390fd5b611d9960008487611bf0565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611e6f576000548214611e6f578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b6000611ec5836122b1565b80519091508215611f2b576000336001600160a01b0383161480611eee5750611eee8233610882565b80611f09575033611efe866109e6565b6001600160a01b0316145b905080611f2957604051632ce44b5f60e11b815260040160405180910390fd5b505b611f3760008583611bf0565b6001600160a01b038082166000818152600560209081526040808320805470010000000000000000000000000000000060001967ffffffffffffffff80841691909101811667ffffffffffffffff19841681178390048216600190810183169093027fffffffffffffffff0000000000000000ffffffffffffffff0000000000000000909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b17855591890180845292208054919490911661204b57600054821461204b578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060018054810190555050565b3332146120ca5760405162461bcd60e51b81526020600482015260036024820152621093d560ea1b6044820152606401610af2565b600f54856000546120db9190613c4f565b11156121295760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f756768206d696e74656420746f6b656e7300000000000000006044820152606401610af2565b505050505050565b8061213b57611766565b60006121478285613c06565b90506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156121bd578034146121bd5760405162461bcd60e51b815260206004820152601560248201527f4d7573742073656e6420746f74616c20707269636500000000000000000000006044820152606401610af2565b60006001600160a01b038616156121d457856121e1565b600e546001600160a01b03165b905061212984338385612cb0565b60005461094e8383612cfa565b6127108111156122405760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610af2565b600a80546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b6040805160608101825260008082526020820181905291810191909152816000548110156123b457600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906123b25780516001600160a01b031615612348579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff16151592810192909252156123ad579392505050565b612348565b505b604051636f96cda160e11b815260040160405180910390fd5b600e80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b60006008805461242690613ba5565b80601f016020809104026020016040519081016040528092919081815260200182805461245290613ba5565b801561249f5780601f106124745761010080835404028352916020019161249f565b820191906000526020600020905b81548152906001019060200180831161248257829003601f168201915b505085519394506124bb936008935060208701925090506133a2565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516124ed929190613eda565b60405180910390a15050565b61271081111561253d5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610af2565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b60606125e7838360405180606001604052806027815260200161401e60279139612d14565b9392505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290612623903390899088908890600401613f08565b6020604051808303816000875af192505050801561265e575060408051601f3d908101601f1916820190925261265b91810190613f3a565b60015b6126b9573d80801561268c576040519150601f19603f3d011682016040523d82523d6000602084013e612691565b606091505b5080516126b1576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60008060006126e5600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561273557602002820191906000526020600020905b815481526020019060010190808311612721575b5050505050905060005b828110156127a15781818151811061275957612759613bda565b602002602001015186101561278f5780935081818151811061277d5761277d613bda565b60200260200101519450505050915091565b61279a600182613c4f565b905061273f565b5060405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420746f6b656e496400000000000000000000000000000000006044820152606401610af2565b606060006127f7600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561284757602002820191906000526020600020905b815481526020019060010190808311612833575b5050505050905060005b828110156127a15781818151811061286b5761286b613bda565b602002602001015185101561293957600d600083838151811061289057612890613bda565b6020026020010151815260200190815260200160002080546128b190613ba5565b80601f01602080910402602001604051908101604052809291908181526020018280546128dd90613ba5565b801561292a5780601f106128ff5761010080835404028352916020019161292a565b820191906000526020600020905b81548152906001019060200180831161290d57829003601f168201915b50505050509350505050919050565b612944600182613c4f565b9050612851565b60608161296f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612999578061298381613dca565b91506129929050600a83613c3b565b9150612973565b60008167ffffffffffffffff8111156129b4576129b46135c9565b6040519080825280601f01601f1916602001820160405280156129de576020820181803683370190505b5090505b84156126cf576129f3600183613f57565b9150612a00600a86613f6e565b612a0b906030613c4f565b60f81b818381518110612a2057612a20613bda565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612a5a600a86613c3b565b94506129e2565b60008281526010602090815260409091208251610aac928401906133a2565b6000828152600d602090815260409091208251610aac928401906133a2565b6000612aa9611c4c565b612ae65760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610af2565b85612b335760405162461bcd60e51b815260206004820152601060248201527f4d696e74696e67203020746f6b656e73000000000000000000000000000000006044820152606401610af2565b6000600f549050612b7b818888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612de792505050565b600f919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001612bb18a84613c4f565b612bbb9190613f57565b88888888604051612bd0959493929190613fab565b60405180910390a25095945050505050565b6000808281805b8751811015612ca457612bfd600283613c06565b91506000888281518110612c1357612c13613bda565b60200260200101519050808411612c55576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350612c91565b6040805160208101839052908101859052606001604051602081830303815290604052805190602001209350600183612c8e9190613c4f565b92505b5080612c9c81613dca565b915050612be9565b50941495939450505050565b80612cba57611766565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612cee57612ce98282612e4b565b611766565b61176684848484612eee565b610df5828260405180602001604052806000815250612f47565b60606001600160a01b0384163b612d7c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610af2565b600080856001600160a01b031685604051612d979190613fe4565b600060405180830381855af49150503d8060008114612dd2576040519150601f19603f3d011682016040523d82523d6000602084013e612dd7565b606091505b509150915061192d82828661310c565b600080612df48486613c4f565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d602090815260409091208551929450849350611bbc9290918601906133a2565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612e98576040519150601f19603f3d011682016040523d82523d6000602084013e612e9d565b606091505b5050905080610aac5760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610af2565b816001600160a01b0316836001600160a01b03161415612f0d57611766565b6001600160a01b038316301415612f3257612ce96001600160a01b0385168383613145565b6117666001600160a01b0385168484846131bd565b6000546001600160a01b038416612f7057604051622e076360e81b815260040160405180910390fd5b82612f8e5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b156130b7575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a461308060008784806001019550876125ee565b61309d576040516368d2bf6b60e11b815260040160405180910390fd5b8082106130355782600054146130b257600080fd5b6130fc565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48082106130b8575b5060009081556117669085838684565b6060831561311b5750816125e7565b82511561312b5782518084602001fd5b8160405162461bcd60e51b8152600401610af291906134c6565b6040516001600160a01b038316602482015260448101829052610aac90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909316929092179091526131f5565b6040516001600160a01b03808516602483015283166044820152606481018290526117669085906323b872dd60e01b90608401613171565b600061324a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132c79092919063ffffffff16565b805190915015610aac57808060200190518101906132689190614000565b610aac5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610af2565b60606126cf8484600085856001600160a01b0385163b6133295760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610af2565b600080866001600160a01b031685876040516133459190613fe4565b60006040518083038185875af1925050503d8060008114613382576040519150601f19603f3d011682016040523d82523d6000602084013e613387565b606091505b509150915061339782828661310c565b979650505050505050565b8280546133ae90613ba5565b90600052602060002090601f0160209004810192826133d05760008555613416565b82601f106133e957805160ff1916838001178555613416565b82800160010185558215613416579182015b828111156134165782518255916020019190600101906133fb565b50613422929150613426565b5090565b5b808211156134225760008155600101613427565b6001600160e01b031981168114610b0457600080fd5b60006020828403121561346357600080fd5b81356125e78161343b565b60005b83811015613489578181015183820152602001613471565b838111156117665750506000910152565b600081518084526134b281602086016020860161346e565b601f01601f19169290920160200192915050565b6020815260006125e7602083018461349a565b6000602082840312156134eb57600080fd5b5035919050565b80356001600160a01b038116811461350957600080fd5b919050565b6000806040838503121561352157600080fd5b61352a836134f2565b946020939093013593505050565b60006020828403121561354a57600080fd5b6125e7826134f2565b60008060006060848603121561356857600080fd5b613571846134f2565b925061357f602085016134f2565b9150604084013590509250925092565b600080604083850312156135a257600080fd5b50508035926020909101359150565b6000604082840312156135c357600080fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715613608576136086135c9565b604052919050565b600067ffffffffffffffff82111561362a5761362a6135c9565b50601f01601f191660200190565b600061364b61364684613610565b6135df565b905082815283838301111561365f57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261368757600080fd5b6125e783833560208501613638565b60008060008060008060c087890312156136af57600080fd5b6136b8876134f2565b9550602087013594506136cd604088016134f2565b935060608701359250608087013567ffffffffffffffff808211156136f157600080fd5b6136fd8a838b016135b1565b935060a089013591508082111561371357600080fd5b5061372089828a01613676565b9150509295509295509295565b8015158114610b0457600080fd5b60008082840361012081121561375057600080fd5b6101008082121561376057600080fd5b84935083013590506137718161372d565b809150509250929050565b60006020828403121561378e57600080fd5b813567ffffffffffffffff8111156137a557600080fd5b8201601f810184136137b657600080fd5b6126cf84823560208401613638565b6000806000606084860312156137da57600080fd5b8335925061357f602085016134f2565b60008083601f8401126137fc57600080fd5b50813567ffffffffffffffff81111561381457600080fd5b60208301915083602082850101111561382c57600080fd5b9250929050565b60008060006040848603121561384857600080fd5b83359250602084013567ffffffffffffffff81111561386657600080fd5b613872868287016137ea565b9497909650939450505050565b6000806040838503121561389257600080fd5b61389b836134f2565b915060208301356137718161372d565b600080600080600060a086880312156138c357600080fd5b6138cc866134f2565b9450602086013593506138e1604087016134f2565b92506060860135915060808601356138f88161372d565b809150509295509295909350565b6000806020838503121561391957600080fd5b823567ffffffffffffffff8082111561393157600080fd5b818501915085601f83011261394557600080fd5b81358181111561395457600080fd5b8660208260051b850101111561396957600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156139d057603f198886030184526139be85835161349a565b945092850192908501906001016139a2565b5092979650505050505050565b600080600080608085870312156139f357600080fd5b6139fc856134f2565b9350613a0a602086016134f2565b925060408501359150606085013567ffffffffffffffff811115613a2d57600080fd5b613a3987828801613676565b91505092959194509250565b600080600080600060608688031215613a5d57600080fd5b85359450602086013567ffffffffffffffff80821115613a7c57600080fd5b613a8889838a016137ea565b90965094506040880135915080821115613aa157600080fd5b50613aae888289016137ea565b969995985093965092949392505050565b600080600060408486031215613ad457600080fd5b833567ffffffffffffffff80821115613aec57600080fd5b613af887838801613676565b94506020860135915080821115613b0e57600080fd5b50613872868287016137ea565b60008060408385031215613b2e57600080fd5b613b37836134f2565b9150613b45602084016134f2565b90509250929050565b600080600060608486031215613b6357600080fd5b613b6c846134f2565b925060208401359150604084013567ffffffffffffffff811115613b8f57600080fd5b613b9b868287016135b1565b9150509250925092565b600181811c90821680613bb957607f821691505b602082108114156135c357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615613c2057613c20613bf0565b500290565b634e487b7160e01b600052601260045260246000fd5b600082613c4a57613c4a613c25565b500490565b60008219821115613c6257613c62613bf0565b500190565b600061012082019050833582526020840135602083015260408401356040830152606084013560608301526080840135608083015260a084013560a083015260c084013560c08301526001600160a01b03613cc460e086016134f2565b1660e083015291151561010090910152919050565b60008060408385031215613cec57600080fd5b825167ffffffffffffffff811115613d0357600080fd5b8301601f81018513613d1457600080fd5b8051613d2261364682613610565b818152866020838501011115613d3757600080fd5b613d4882602083016020860161346e565b60209590950151949694955050505050565b60008551613d6c818460208a0161346e565b820184868237909301918252506020019392505050565b6000808335601e19843603018112613d9a57600080fd5b83018035915067ffffffffffffffff821115613db557600080fd5b60200191503681900382131561382c57600080fd5b6000600019821415613dde57613dde613bf0565b5060010190565b60008251613df781846020870161346e565b600360fc1b920191825250600101919050565b60008351613e1c81846020880161346e565b835190830190613e3081836020880161346e565b01949350505050565b60008060408385031215613e4c57600080fd5b823567ffffffffffffffff811115613e6357600080fd5b613e6f85828601613676565b95602094909401359450505050565b82848237909101908152602001919050565b6000808335601e19843603018112613ea757600080fd5b83018035915067ffffffffffffffff821115613ec257600080fd5b6020019150600581901b360382131561382c57600080fd5b604081526000613eed604083018561349a565b8281036020840152613eff818561349a565b95945050505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261192d608083018461349a565b600060208284031215613f4c57600080fd5b81516125e78161343b565b600082821015613f6957613f69613bf0565b500390565b600082613f7d57613f7d613c25565b500690565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b858152606060208201526000613fc5606083018688613f82565b8281036040840152613fd8818587613f82565b98975050505050505050565b60008251613ff681846020870161346e565b9190910192915050565b60006020828403121561401257600080fd5b81516125e78161372d56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220683a9fc5dbf8a98c39bd71fe494c113d272e62b3151c0cf08f441e9c20ea5f2064736f6c634300080c0033";

const isSuperArgs$q = xs => xs.length > 1;

class ERC721Drop__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$q(args)) {
      super(...args);
    } else {
      super(_abi$1A, _bytecode$q, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1A);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1A, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC721Drop__factory, "bytecode", _bytecode$q);

defineProperty._defineProperty(ERC721Drop__factory, "abi", _abi$1A);

const _abi$1z = [{
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC721Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$p = "0x608060405234801561001057600080fd5b506101d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004e61003e3660046100c2565b630a85bd0160e11b949350505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b803573ffffffffffffffffffffffffffffffffffffffff811681146100a757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100d857600080fd5b6100e185610083565b93506100ef60208601610083565b925060408501359150606085013567ffffffffffffffff8082111561011357600080fd5b818701915087601f83011261012757600080fd5b813581811115610139576101396100ac565b604051601f8201601f19908116603f01168101908382118183101715610161576101616100ac565b816040528281528a602084870101111561017a57600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea2646970667358221220beba93899db2cad015e85fe5d8ec3f2f14f914cc4956e504b07a28100197c2b064736f6c634300080c0033";

const isSuperArgs$p = xs => xs.length > 1;

class ERC721Holder__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$p(args)) {
      super(...args);
    } else {
      super(_abi$1z, _bytecode$p, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1z);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1z, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC721Holder__factory, "bytecode", _bytecode$p);

defineProperty._defineProperty(ERC721Holder__factory, "abi", _abi$1z);

const _abi$1y = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [],
  name: "ApprovalCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalToCurrentOwner",
  type: "error"
}, {
  inputs: [],
  name: "ApproveToCaller",
  type: "error"
}, {
  inputs: [],
  name: "BalanceQueryForZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintZeroQuantity",
  type: "error"
}, {
  inputs: [],
  name: "OwnerQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "TransferCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "TransferFromIncorrectOwner",
  type: "error"
}, {
  inputs: [],
  name: "TransferToNonERC721ReceiverImplementer",
  type: "error"
}, {
  inputs: [],
  name: "TransferToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "URIQueryForNonexistentToken",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [{
    internalType: "uint256",
    name: "batchId",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToClaim",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$o = "0x60806040523480156200001157600080fd5b5060405162002b9d38038062002b9d833981016040819052620000349162000304565b8351849084906200004d90600290602085019062000191565b5080516200006390600390602084019062000191565b50506000805550620000753362000094565b6200008a826001600160801b038316620000e6565b50505050620003ed565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b6127108111156200012f5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b8280546200019f90620003b0565b90600052602060002090601f016020900481019282620001c357600085556200020e565b82601f10620001de57805160ff19168380011785556200020e565b828001600101855582156200020e579182015b828111156200020e578251825591602001919060010190620001f1565b506200021c92915062000220565b5090565b5b808211156200021c576000815560010162000221565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200025f57600080fd5b81516001600160401b03808211156200027c576200027c62000237565b604051601f8301601f19908116603f01168101908282118183101715620002a757620002a762000237565b81604052838152602092508683858801011115620002c457600080fd5b600091505b83821015620002e85785820183015181830184015290820190620002c9565b83821115620002fa5760008385830101525b9695505050505050565b600080600080608085870312156200031b57600080fd5b84516001600160401b03808211156200033357600080fd5b62000341888389016200024d565b955060208701519150808211156200035857600080fd5b5062000367878288016200024d565b604087015190945090506001600160a01b03811681146200038757600080fd5b60608601519092506001600160801b0381168114620003a557600080fd5b939692955090935050565b600181811c90821680620003c557607f821691505b60208210811415620003e757634e487b7160e01b600052602260045260246000fd5b50919050565b6127a080620003fd6000396000f3fe6080604052600436106101e35760003560e01c806363b45e2d11610102578063ac9650d811610095578063c87b56dd11610064578063c87b56dd146105b9578063d37c353b146105d9578063e8a3d485146105f9578063e985e9c51461060e57600080fd5b8063ac9650d81461052c578063acd083f814610559578063b24f2d391461056e578063b88d4fde1461059957600080fd5b806395d89b41116100d157806395d89b41146104c45780639bcf7a15146104d9578063a22cb465146104f9578063aad3ec961461051957600080fd5b806363b45e2d1461045157806370a08231146104665780638da5cb5b14610486578063938e3d7b146104a457600080fd5b80632a55205a1161017a57806342966c681161014957806342966c68146103af5780634cc157df146103cf578063600dd5ea146104115780636352211e1461043157600080fd5b80632a55205a1461031c5780632f92023a1461035b5780633b1475a71461037a57806342842e0e1461038f57600080fd5b806313af4035116101b657806313af40351461029957806318160ddd146102b957806323b872dd146102dc5780632419f51b146102fc57600080fd5b806301ffc9a7146101e857806306fdde031461021d578063081812fc1461023f578063095ea7b314610277575b600080fd5b3480156101f457600080fd5b50610208610203366004611fe5565b610657565b60405190151581526020015b60405180910390f35b34801561022957600080fd5b506102326106c4565b604051610214919061205a565b34801561024b57600080fd5b5061025f61025a36600461206d565b610756565b6040516001600160a01b039091168152602001610214565b34801561028357600080fd5b506102976102923660046120a2565b61079a565b005b3480156102a557600080fd5b506102976102b43660046120cc565b610821565b3480156102c557600080fd5b50600154600054035b604051908152602001610214565b3480156102e857600080fd5b506102976102f73660046120e7565b610877565b34801561030857600080fd5b506102ce61031736600461206d565b610882565b34801561032857600080fd5b5061033c610337366004612123565b6108f0565b604080516001600160a01b039093168352602083019190915201610214565b34801561036757600080fd5b506102976103763660046120a2565b5050565b34801561038657600080fd5b50600e546102ce565b34801561039b57600080fd5b506102976103aa3660046120e7565b61092d565b3480156103bb57600080fd5b506102976103ca36600461206d565b610948565b3480156103db57600080fd5b506103ef6103ea36600461206d565b610953565b604080516001600160a01b03909316835261ffff909116602083015201610214565b34801561041d57600080fd5b5061029761042c3660046120a2565b6109be565b34801561043d57600080fd5b5061025f61044c36600461206d565b610a0d565b34801561045d57600080fd5b50600c546102ce565b34801561047257600080fd5b506102ce6104813660046120cc565b610a1f565b34801561049257600080fd5b506009546001600160a01b031661025f565b3480156104b057600080fd5b506102976104bf3660046121d1565b610a6e565b3480156104d057600080fd5b50610232610abc565b3480156104e557600080fd5b506102976104f436600461221a565b610acb565b34801561050557600080fd5b5061029761051436600461223f565b610b1b565b6102976105273660046120a2565b610bb1565b34801561053857600080fd5b5061054c61054736600461227b565b610c7c565b60405161021491906122f0565b34801561056557600080fd5b506000546102ce565b34801561057a57600080fd5b50600a546001600160a01b03811690600160a01b900461ffff166103ef565b3480156105a557600080fd5b506102976105b4366004612352565b610d71565b3480156105c557600080fd5b506102326105d436600461206d565b610dbb565b3480156105e557600080fd5b506102ce6105f4366004612417565b610dfc565b34801561060557600080fd5b50610232610f3f565b34801561061a57600080fd5b50610208610629366004612491565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061068857506380ac58cd60e01b6001600160e01b03198316145b806106a35750635b5e139f60e01b6001600160e01b03198316145b806106be57506001600160e01b0319821663152a902d60e11b145b92915050565b6060600280546106d3906124c4565b80601f01602080910402602001604051908101604052809291908181526020018280546106ff906124c4565b801561074c5780601f106107215761010080835404028352916020019161074c565b820191906000526020600020905b81548152906001019060200180831161072f57829003601f168201915b5050505050905090565b600061076182610fcd565b61077e576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006107a582610a0d565b9050806001600160a01b0316836001600160a01b031614156107da5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614610811576107f48133610629565b610811576040516367d9dca160e11b815260040160405180910390fd5b61081c838383610ff8565b505050565b610829611054565b61086b5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b61087481611081565b50565b61081c8383836110d3565b600061088d600c5490565b82106108cb5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610862565b600c82815481106108de576108de6124ff565b90600052602060002001549050919050565b6000806000806108ff86610953565b90945084925061ffff169050612710610918828761252b565b6109229190612560565b925050509250929050565b61081c83838360405180602001604052806000815250610d71565b6108748160016112c2565b6000818152600b60209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561099a57805160208201516109b4565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b6109c6611054565b610a035760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610862565b610376828261149d565b6000610a1882611552565b5192915050565b60006001600160a01b038216610a48576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610a76611054565b610ab35760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610862565b6108748161166e565b6060600380546106d3906124c4565b610ad3611054565b610b105760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610862565b61081c838383611750565b6001600160a01b038216331415610b455760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600054600e54610bc18383612574565b1115610c0f5760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420656e6f756768206c617a79206d696e74656420746f6b656e732e00006044820152606401610862565b610c29838360405180602001604052806000815250611819565b80836001600160a01b0316336001600160a01b03167fff097c7d8b1957a4ff09ef1361b5fb54dcede3941ba836d0beb9d10bec725de685604051610c6f91815260200190565b60405180910390a4505050565b60608167ffffffffffffffff811115610c9757610c97612145565b604051908082528060200260200182016040528015610cca57816020015b6060815260200190600190039081610cb55790505b50905060005b82811015610d6a57610d3a30858584818110610cee57610cee6124ff565b9050602002810190610d00919061258c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119de92505050565b828281518110610d4c57610d4c6124ff565b60200260200101819052508080610d62906125d3565b915050610cd0565b5092915050565b610d7c8484846110d3565b6001600160a01b0383163b15610db557610d9884848484611a0a565b610db5576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606000610dc883611af3565b905080610dd484611c9d565b604051602001610de59291906125ee565b604051602081830303815290604052915050919050565b6000610e06611054565b610e435760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610862565b85610e905760405162461bcd60e51b815260206004820152601060248201527f4d696e74696e67203020746f6b656e73000000000000000000000000000000006044820152606401610862565b6000600e549050610ed8818888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611db392505050565b600e919091559150807f2a0365091ef1a40953c670dce28177e37520648a6fdc91506bffac0ab045570d6001610f0e8a84612574565b610f18919061261d565b88888888604051610f2d95949392919061265d565b60405180910390a25095945050505050565b60088054610f4c906124c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610f78906124c4565b8015610fc55780601f10610f9a57610100808354040283529160200191610fc5565b820191906000526020600020905b815481529060010190602001808311610fa857829003601f168201915b505050505081565b60008054821080156106be575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006110686009546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b60006110de82611552565b9050836001600160a01b031681600001516001600160a01b0316146111155760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b038616148061113357506111338533610629565b8061114e57503361114384610756565b6001600160a01b0316145b90508061116e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661119557604051633a954ecd60e21b815260040160405180910390fd5b6111a160008487610ff8565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611277576000548214611277578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b60006112cd83611552565b80519091508215611333576000336001600160a01b03831614806112f657506112f68233610629565b8061131157503361130686610756565b6001600160a01b0316145b90508061133157604051632ce44b5f60e11b815260040160405180910390fd5b505b61133f60008583610ff8565b6001600160a01b038082166000818152600560209081526040808320805470010000000000000000000000000000000060001967ffffffffffffffff80841691909101811667ffffffffffffffff19841681178390048216600190810183169093027fffffffffffffffff0000000000000000ffffffffffffffff0000000000000000909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116611453576000548214611453578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060018054810190555050565b6127108111156114e15760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610862565b600a80546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b60408051606081018252600080825260208201819052918101919091528160005481101561165557600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906116535780516001600160a01b0316156115e9579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff161515928101929092521561164e579392505050565b6115e9565b505b604051636f96cda160e11b815260040160405180910390fd5b60006008805461167d906124c4565b80601f01602080910402602001604051908101604052809291908181526020018280546116a9906124c4565b80156116f65780601f106116cb576101008083540402835291602001916116f6565b820191906000526020600020905b8154815290600101906020018083116116d957829003601f168201915b5050855193945061171293600893506020870192509050611f36565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611744929190612696565b60405180910390a15050565b6127108111156117945760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610862565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b6000546001600160a01b03841661184257604051622e076360e81b815260040160405180910390fd5b826118605760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b15611989575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46119526000878480600101955087611a0a565b61196f576040516368d2bf6b60e11b815260040160405180910390fd5b80821061190757826000541461198457600080fd5b6119ce565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821061198a575b506000908155610db59085838684565b6060611a03838360405180606001604052806027815260200161274460279139611e20565b9392505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611a3f9033908990889088906004016126c4565b6020604051808303816000875af1925050508015611a7a575060408051601f3d908101601f19168201909252611a77918101906126f6565b60015b611ad5573d808015611aa8576040519150601f19603f3d011682016040523d82523d6000602084013e611aad565b606091505b508051611acd576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60606000611b00600c5490565b90506000600c805480602002602001604051908101604052809291908181526020018280548015611b5057602002820191906000526020600020905b815481526020019060010190808311611b3c575b5050505050905060005b82811015611c5457818181518110611b7457611b746124ff565b6020026020010151851015611c4257600d6000838381518110611b9957611b996124ff565b602002602001015181526020019081526020016000208054611bba906124c4565b80601f0160208091040260200160405190810160405280929190818152602001828054611be6906124c4565b8015611c335780601f10611c0857610100808354040283529160200191611c33565b820191906000526020600020905b815481529060010190602001808311611c1657829003601f168201915b50505050509350505050919050565b611c4d600182612574565b9050611b5a565b5060405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420746f6b656e496400000000000000000000000000000000006044820152606401610862565b606081611cc15750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ceb5780611cd5816125d3565b9150611ce49050600a83612560565b9150611cc5565b60008167ffffffffffffffff811115611d0657611d06612145565b6040519080825280601f01601f191660200182016040528015611d30576020820181803683370190505b5090505b8415611aeb57611d4560018361261d565b9150611d52600a86612713565b611d5d906030612574565b60f81b818381518110611d7257611d726124ff565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611dac600a86612560565b9450611d34565b600080611dc08486612574565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d602090815260409091208551929450849350611e17929091860190611f36565b50935093915050565b60606001600160a01b0384163b611e885760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610862565b600080856001600160a01b031685604051611ea39190612727565b600060405180830381855af49150503d8060008114611ede576040519150601f19603f3d011682016040523d82523d6000602084013e611ee3565b606091505b5091509150611ef3828286611efd565b9695505050505050565b60608315611f0c575081611a03565b825115611f1c5782518084602001fd5b8160405162461bcd60e51b8152600401610862919061205a565b828054611f42906124c4565b90600052602060002090601f016020900481019282611f645760008555611faa565b82601f10611f7d57805160ff1916838001178555611faa565b82800160010185558215611faa579182015b82811115611faa578251825591602001919060010190611f8f565b50611fb6929150611fba565b5090565b5b80821115611fb65760008155600101611fbb565b6001600160e01b03198116811461087457600080fd5b600060208284031215611ff757600080fd5b8135611a0381611fcf565b60005b8381101561201d578181015183820152602001612005565b83811115610db55750506000910152565b60008151808452612046816020860160208601612002565b601f01601f19169290920160200192915050565b602081526000611a03602083018461202e565b60006020828403121561207f57600080fd5b5035919050565b80356001600160a01b038116811461209d57600080fd5b919050565b600080604083850312156120b557600080fd5b6120be83612086565b946020939093013593505050565b6000602082840312156120de57600080fd5b611a0382612086565b6000806000606084860312156120fc57600080fd5b61210584612086565b925061211360208501612086565b9150604084013590509250925092565b6000806040838503121561213657600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561217657612176612145565b604051601f8501601f19908116603f0116810190828211818310171561219e5761219e612145565b816040528093508581528686860111156121b757600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156121e357600080fd5b813567ffffffffffffffff8111156121fa57600080fd5b8201601f8101841361220b57600080fd5b611aeb8482356020840161215b565b60008060006060848603121561222f57600080fd5b8335925061211360208501612086565b6000806040838503121561225257600080fd5b61225b83612086565b91506020830135801515811461227057600080fd5b809150509250929050565b6000806020838503121561228e57600080fd5b823567ffffffffffffffff808211156122a657600080fd5b818501915085601f8301126122ba57600080fd5b8135818111156122c957600080fd5b8660208260051b85010111156122de57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561234557603f1988860301845261233385835161202e565b94509285019290850190600101612317565b5092979650505050505050565b6000806000806080858703121561236857600080fd5b61237185612086565b935061237f60208601612086565b925060408501359150606085013567ffffffffffffffff8111156123a257600080fd5b8501601f810187136123b357600080fd5b6123c28782356020840161215b565b91505092959194509250565b60008083601f8401126123e057600080fd5b50813567ffffffffffffffff8111156123f857600080fd5b60208301915083602082850101111561241057600080fd5b9250929050565b60008060008060006060868803121561242f57600080fd5b85359450602086013567ffffffffffffffff8082111561244e57600080fd5b61245a89838a016123ce565b9096509450604088013591508082111561247357600080fd5b50612480888289016123ce565b969995985093965092949392505050565b600080604083850312156124a457600080fd5b6124ad83612086565b91506124bb60208401612086565b90509250929050565b600181811c908216806124d857607f821691505b602082108114156124f957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561254557612545612515565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261256f5761256f61254a565b500490565b6000821982111561258757612587612515565b500190565b6000808335601e198436030181126125a357600080fd5b83018035915067ffffffffffffffff8211156125be57600080fd5b60200191503681900382131561241057600080fd5b60006000198214156125e7576125e7612515565b5060010190565b60008351612600818460208801612002565b835190830190612614818360208801612002565b01949350505050565b60008282101561262f5761262f612515565b500390565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b858152606060208201526000612677606083018688612634565b828103604084015261268a818587612634565b98975050505050505050565b6040815260006126a9604083018561202e565b82810360208401526126bb818561202e565b95945050505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611ef3608083018461202e565b60006020828403121561270857600080fd5b8151611a0381611fcf565b6000826127225761272261254a565b500690565b60008251612739818460208701612002565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f011ab4bbbab295289856db13fa8418aad642531ed6aac771c1d4d021150cd9e64736f6c634300080c0033";

const isSuperArgs$o = xs => xs.length > 1;

class ERC721LazyMint__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$o(args)) {
      super(...args);
    } else {
      super(_abi$1y, _bytecode$o, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1y);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1y, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC721LazyMint__factory, "bytecode", _bytecode$o);

defineProperty._defineProperty(ERC721LazyMint__factory, "abi", _abi$1y);

const _abi$1x = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_nativeTokenWrapper",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [],
  name: "ApprovalCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalToCurrentOwner",
  type: "error"
}, {
  inputs: [],
  name: "ApproveToCaller",
  type: "error"
}, {
  inputs: [],
  name: "BalanceQueryForZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintZeroQuantity",
  type: "error"
}, {
  inputs: [],
  name: "OwnerQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "TransferCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "TransferFromIncorrectOwner",
  type: "error"
}, {
  inputs: [],
  name: "TransferToNonERC721ReceiverImplementer",
  type: "error"
}, {
  inputs: [],
  name: "TransferToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "URIQueryForNonexistentToken",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "unwrapper",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "recipientOfWrappedContents",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdOfWrappedToken",
    type: "uint256"
  }],
  name: "TokensUnwrapped",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "wrapper",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "recipientOfWrappedToken",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdOfWrappedToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    indexed: false,
    internalType: "struct ITokenBundle.Token[]",
    name: "wrappedContents",
    type: "tuple[]"
  }],
  name: "TokensWrapped",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "bool",
    name: "isRestricted",
    type: "bool"
  }],
  name: "TransfersRestricted",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "TRANSFER_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "member",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }],
  name: "getTokenCountOfBundle",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getTokenOfBundle",
  outputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }],
  name: "getUriOfBundle",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRoleWithSwitch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "isApprovedOrOwner",
  outputs: [{
    internalType: "bool",
    name: "isApprovedOrOwnerOf",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155BatchReceived",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC721Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bool",
    name: "_toRestrict",
    type: "bool"
  }],
  name: "restrictTransfers",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }],
  name: "unwrap",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token[]",
    name: "_tokensToWrap",
    type: "tuple[]"
  }, {
    internalType: "string",
    name: "_uriForWrappedToken",
    type: "string"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }],
  name: "wrap",
  outputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  stateMutability: "payable",
  type: "function"
}];
const _bytecode$n = "";

const isSuperArgs$n = xs => xs.length > 1;

class ERC721Multiwrap__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$n(args)) {
      super(...args);
    } else {
      super(_abi$1x, _bytecode$n, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, _nativeTokenWrapper, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, _nativeTokenWrapper, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, _nativeTokenWrapper, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, _nativeTokenWrapper, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1x);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1x, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC721Multiwrap__factory, "bytecode", _bytecode$n);

defineProperty._defineProperty(ERC721Multiwrap__factory, "abi", _abi$1x);

const _abi$1w = [{
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [],
  name: "ApprovalCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalToCurrentOwner",
  type: "error"
}, {
  inputs: [],
  name: "ApproveToCaller",
  type: "error"
}, {
  inputs: [],
  name: "BalanceQueryForZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintZeroQuantity",
  type: "error"
}, {
  inputs: [],
  name: "OwnerQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "TransferCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "TransferFromIncorrectOwner",
  type: "error"
}, {
  inputs: [],
  name: "TransferToNonERC721ReceiverImplementer",
  type: "error"
}, {
  inputs: [],
  name: "TransferToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "URIQueryForNonexistentToken",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURI",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "batchMintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "isApprovedOrOwner",
  outputs: [{
    internalType: "bool",
    name: "isApprovedOrOwnerOf",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "string",
    name: "_tokenURI",
    type: "string"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$m = "0x6101406040523480156200001257600080fd5b5060405162003faa38038062003faa833981016040819052620000359162000460565b6040518060400160405280601381526020017f5369676e61747572654d696e7445524337323100000000000000000000000000815250604051806040016040528060018152602001603160f81b8152508686868683838160029080519060200190620000a3929190620002d0565b508051620000b9906003906020840190620002d0565b50506000805550620000cb3362000189565b620000e0826001600160801b038316620001db565b5050835160209485012083519385019390932060e08490526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818a01819052818301989098526060810194909452608080850193909352308483018190528151808603909301835260c0948501909152815191909701209052939093525061012052506200017e8162000286565b50505050506200054d565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b612710811115620002245760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640160405180910390fd5b600a80546001600160a01b0384166001600160b01b03199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600f80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b828054620002de9062000510565b90600052602060002090601f0160209004810192826200030257600085556200034d565b82601f106200031d57805160ff19168380011785556200034d565b828001600101855582156200034d579182015b828111156200034d57825182559160200191906001019062000330565b506200035b9291506200035f565b5090565b5b808211156200035b576000815560010162000360565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200039e57600080fd5b81516001600160401b0380821115620003bb57620003bb62000376565b604051601f8301601f19908116603f01168101908282118183101715620003e657620003e662000376565b816040528381526020925086838588010111156200040357600080fd5b600091505b8382101562000427578582018301518183018401529082019062000408565b83821115620004395760008385830101525b9695505050505050565b80516001600160a01b03811681146200045b57600080fd5b919050565b600080600080600060a086880312156200047957600080fd5b85516001600160401b03808211156200049157600080fd5b6200049f89838a016200038c565b96506020880151915080821115620004b657600080fd5b50620004c5888289016200038c565b945050620004d66040870162000443565b60608701519093506001600160801b0381168114620004f457600080fd5b9150620005046080870162000443565b90509295509295909350565b600181811c908216806200052557607f821691505b602082108114156200054757634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051613a0d6200059d60003960006127d101526000612820015260006127fb015260006127540152600061277e015260006127a80152613a0d6000f3fe6080604052600436106102035760003560e01c80634cc157df1161011857806395d89b41116100a0578063b24f2d391161006f578063b24f2d3914610633578063b88d4fde1461065e578063c87b56dd1461067e578063e8a3d4851461069e578063e985e9c5146106b357600080fd5b806395d89b41146105b15780639bcf7a15146105c6578063a22cb465146105e6578063ac9650d81461060657600080fd5b80636f4f2837116100e75780636f4f28371461051357806370a0823114610533578063754a81d9146105535780638da5cb5b14610573578063938e3d7b1461059157600080fd5b80634cc157df1461047c578063600dd5ea146104be5780636352211e146104de57806363b45e2d146104fe57600080fd5b806323b872dd1161019b5780633b1475a71161016a5780633b1475a7146103f457806342842e0e1461040957806342966c6814610429578063430c208114610449578063439c7be51461046957600080fd5b806323b872dd146103365780632419f51b14610356578063252e82e8146103765780632a55205a146103b557600080fd5b8063081812fc116101d7578063081812fc146102b3578063095ea7b3146102d357806313af4035146102f357806318160ddd1461031357600080fd5b806275a3171461020857806301ffc9a71461022a57806306fdde031461025f578063079fe40e14610281575b600080fd5b34801561021457600080fd5b506102286102233660046130c2565b6106fc565b005b34801561023657600080fd5b5061024a610245366004613126565b610786565b60405190151581526020015b60405180910390f35b34801561026b57600080fd5b506102746107f3565b604051610256919061319b565b34801561028d57600080fd5b50600f546001600160a01b03165b6040516001600160a01b039091168152602001610256565b3480156102bf57600080fd5b5061029b6102ce3660046131ae565b610885565b3480156102df57600080fd5b506102286102ee3660046131c7565b6108c9565b3480156102ff57600080fd5b5061022861030e3660046131f1565b610950565b34801561031f57600080fd5b50600154600054035b604051908152602001610256565b34801561034257600080fd5b5061022861035136600461320c565b6109a1565b34801561036257600080fd5b506103286103713660046131ae565b6109ac565b34801561038257600080fd5b50610396610391366004613248565b610a1a565b6040805192151583526001600160a01b03909116602083015201610256565b3480156103c157600080fd5b506103d56103d03660046132e8565b610a5e565b604080516001600160a01b039093168352602083019190915201610256565b34801561040057600080fd5b50600054610328565b34801561041557600080fd5b5061022861042436600461320c565b610a9b565b34801561043557600080fd5b506102286104443660046131ae565b610ab6565b34801561045557600080fd5b5061024a6104643660046131c7565b610ac1565b61029b610477366004613248565b610b40565b34801561048857600080fd5b5061049c6104973660046131ae565b610d0a565b604080516001600160a01b03909316835261ffff909116602083015201610256565b3480156104ca57600080fd5b506102286104d93660046131c7565b610d75565b3480156104ea57600080fd5b5061029b6104f93660046131ae565b610dc4565b34801561050a57600080fd5b50600c54610328565b34801561051f57600080fd5b5061022861052e3660046131f1565b610dd6565b34801561053f57600080fd5b5061032861054e3660046131f1565b610e24565b34801561055f57600080fd5b5061022861056e36600461330a565b610e73565b34801561057f57600080fd5b506009546001600160a01b031661029b565b34801561059d57600080fd5b506102286105ac366004613388565b610eed565b3480156105bd57600080fd5b50610274610f3b565b3480156105d257600080fd5b506102286105e13660046133bd565b610f4a565b3480156105f257600080fd5b506102286106013660046133f0565b610f9a565b34801561061257600080fd5b50610626610621366004613427565b611030565b604051610256919061349c565b34801561063f57600080fd5b50600a546001600160a01b03811690600160a01b900461ffff1661049c565b34801561066a57600080fd5b506102286106793660046134fe565b611125565b34801561068a57600080fd5b506102746106993660046131ae565b611169565b3480156106aa57600080fd5b50610274611257565b3480156106bf57600080fd5b5061024a6106ce36600461355a565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6107046112e5565b6107555760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e00000000000000000060448201526064015b60405180910390fd5b61076761076160005490565b82611312565b61078282600160405180602001604052806000815250611399565b5050565b60006301ffc9a760e01b6001600160e01b0319831614806107b757506380ac58cd60e01b6001600160e01b03198316145b806107d25750635b5e139f60e01b6001600160e01b03198316145b806107ed57506001600160e01b0319821663152a902d60e11b145b92915050565b6060600280546108029061358d565b80601f016020809104026020016040519081016040528092919081815260200182805461082e9061358d565b801561087b5780601f106108505761010080835404028352916020019161087b565b820191906000526020600020905b81548152906001019060200180831161085e57829003601f168201915b5050505050905090565b60006108908261155e565b6108ad576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006108d482610dc4565b9050806001600160a01b0316836001600160a01b031614156109095760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146109405761092381336106ce565b610940576040516367d9dca160e11b815260040160405180910390fd5b61094b838383611589565b505050565b6109586112e5565b6109955760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161074c565b61099e816115e5565b50565b61094b838383611637565b60006109b7600c5490565b82106109f55760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640161074c565b600c8281548110610a0857610a086135c8565b90600052602060002001549050919050565b600080610a28858585611826565b61014086013560009081526010602052604090205490915060ff16158015610a545750610a548161188c565b9150935093915050565b600080600080610a6d86610d0a565b90945084925061ffff169050612710610a8682876135f4565b610a909190613629565b925050509250929050565b61094b83838360405180602001604052806000815250611125565b61099e8160016118bb565b600080610acd83610dc4565b9050806001600160a01b0316846001600160a01b03161480610b1457506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b80610b385750836001600160a01b0316610b2d84610885565b6001600160a01b0316145b949350505050565b60008360a00135600114610b965760405162461bcd60e51b815260206004820152601160248201527f7175616e746979206d7573742062652031000000000000000000000000000000604482015260640161074c565b600054610ba4858585611a96565b9150600080610bb660208801886131f1565b6001600160a01b031614610bd657610bd160208701876131f1565b610bd8565b335b9050610c0d610bed60808801606089016131f1565b60a0880135610c036101008a0160e08b016131f1565b8960c00135611b87565b6000610c1f60408801602089016131f1565b6001600160a01b031614158015610c395750604086013515155b15610c5c57610c5c82610c526040890160208a016131f1565b8860400135611c4d565b610ca782610c6d608089018961363d565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061131292505050565b610cb5818760a00135611d16565b81816001600160a01b0316846001600160a01b03167fee0cf9c3e87795b1932d13f80f892f620f567b4465e768ced5d64aa44ca1d64c89604051610cf9919061370a565b60405180910390a450509392505050565b6000818152600b60209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115610d515780516020820151610d6b565b600a546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b610d7d6112e5565b610dba5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161074c565b6107828282611d30565b6000610dcf82611de5565b5192915050565b610dde6112e5565b610e1b5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161074c565b61099e81611f01565b60006001600160a01b038216610e4d576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610e7b6112e5565b610ec75760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e000000000000000000604482015260640161074c565b610eda610ed360005490565b8484611f4b565b5050610ee7848483611399565b50505050565b610ef56112e5565b610f325760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161074c565b61099e81611fb8565b6060600380546108029061358d565b610f526112e5565b610f8f5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161074c565b61094b838383611c4d565b6001600160a01b038216331415610fc45760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60608167ffffffffffffffff81111561104b5761104b61301f565b60405190808252806020026020018201604052801561107e57816020015b60608152602001906001900390816110695790505b50905060005b8281101561111e576110ee308585848181106110a2576110a26135c8565b90506020028101906110b4919061363d565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061209a92505050565b828281518110611100576111006135c8565b602002602001018190525080806111169061382c565b915050611084565b5092915050565b611130848484611637565b6001600160a01b0383163b15610ee75761114c848484846120bf565b610ee7576040516368d2bf6b60e11b815260040160405180910390fd5b6000818152600e60205260408120805460609291906111879061358d565b80601f01602080910402602001604051908101604052809291908181526020018280546111b39061358d565b80156112005780601f106111d557610100808354040283529160200191611200565b820191906000526020600020905b8154815290600101906020018083116111e357829003601f168201915b505050505090506000815111156112175792915050565b6000611222846121a7565b90508061122e85612351565b60405160200161123f929190613847565b60405160208183030381529060405292505050919050565b600880546112649061358d565b80601f01602080910402602001604051908101604052809291908181526020018280546112909061358d565b80156112dd5780601f106112b2576101008083540402835291602001916112dd565b820191906000526020600020905b8154815290600101906020018083116112c057829003601f168201915b505050505081565b60006112f96009546001600160a01b031690565b6001600160a01b0316336001600160a01b031614905090565b6000828152600e60205260409020805461132b9061358d565b15905061137a5760405162461bcd60e51b815260206004820152600f60248201527f55524920616c7265616479207365740000000000000000000000000000000000604482015260640161074c565b6000828152600e60209081526040909120825161094b92840190612f6a565b6000546001600160a01b0384166113c257604051622e076360e81b815260040160405180910390fd5b826113e05760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b15611509575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46114d260008784806001019550876120bf565b6114ef576040516368d2bf6b60e11b815260040160405180910390fd5b80821061148757826000541461150457600080fd5b61154e565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821061150a575b506000908155610ee79085838684565b60008054821080156107ed575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600061164282611de5565b9050836001600160a01b031681600001516001600160a01b0316146116795760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611697575061169785336106ce565b806116b25750336116a784610885565b6001600160a01b0316145b9050806116d257604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166116f957604051633a954ecd60e21b815260040160405180910390fd5b61170560008487611589565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b429092169190910217835587018084529220805491939091166117db5760005482146117db578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b600061188283838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061187c92506118709150889050612467565b805190602001206125ae565b906125fc565b90505b9392505050565b60006118a06009546001600160a01b031690565b6001600160a01b0316826001600160a01b0316149050919050565b60006118c683611de5565b8051909150821561192c576000336001600160a01b03831614806118ef57506118ef82336106ce565b8061190a5750336118ff86610885565b6001600160a01b0316145b90508061192a57604051632ce44b5f60e11b815260040160405180910390fd5b505b61193860008583611589565b6001600160a01b038082166000818152600560209081526040808320805470010000000000000000000000000000000060001967ffffffffffffffff80841691909101811667ffffffffffffffff19841681178390048216600190810183169093027fffffffffffffffff0000000000000000ffffffffffffffff0000000000000000909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116611a4c576000548214611a4c578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060018054810190555050565b600080611aa4858585610a1a565b9250905080611ae35760405162461bcd60e51b815260206004820152600b60248201526a496e76616c69642072657160a81b604482015260640161074c565b42611af661012087016101008801613876565b6001600160801b03161180611b245750611b1861014086016101208701613876565b6001600160801b031642115b15611b5f5760405162461bcd60e51b815260206004820152600b60248201526a14995c48195e1c1a5c995960aa1b604482015260640161074c565b50610140909301356000908152601060205260409020805460ff191660011790555090919050565b80611b9157610ee7565b6000611b9d82856135f4565b90506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415611c1357803414611c135760405162461bcd60e51b815260206004820152601660248201527f4d7573742073656e6420746f74616c2070726963652e00000000000000000000604482015260640161074c565b60006001600160a01b03861615611c2a5785611c37565b600f546001600160a01b03165b9050611c4584338385612620565b505050505050565b612710811115611c915760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161074c565b6040805180820182526001600160a01b0384811680835260208084018681526000898152600b8352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a3505050565b610782828260405180602001604052806000815250611399565b612710811115611d745760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161074c565b600a80546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b604080516060810182526000808252602082018190529181019190915281600054811015611ee857600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff16151591810182905290611ee65780516001600160a01b031615611e7c579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff1615159281019290925215611ee1579392505050565b611e7c565b505b604051636f96cda160e11b815260040160405180910390fd5b600f80546001600160a01b0319166001600160a01b0383169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a250565b600080611f588486613891565b600c8054600181019091557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7018190556000818152600d602090815260409091208551929450849350611faf929091860190612f6a565b50935093915050565b600060088054611fc79061358d565b80601f0160208091040260200160405190810160405280929190818152602001828054611ff39061358d565b80156120405780601f1061201557610100808354040283529160200191612040565b820191906000526020600020905b81548152906001019060200180831161202357829003601f168201915b5050855193945061205c93600893506020870192509050612f6a565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16818360405161208e9291906138a9565b60405180910390a15050565b606061188583836040518060600160405280602781526020016139b16027913961266a565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906120f49033908990889088906004016138d7565b6020604051808303816000875af192505050801561212f575060408051601f3d908101601f1916820190925261212c91810190613909565b60015b61218a573d80801561215d576040519150601f19603f3d011682016040523d82523d6000602084013e612162565b606091505b508051612182576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060006121b4600c5490565b90506000600c80548060200260200160405190810160405280929190818152602001828054801561220457602002820191906000526020600020905b8154815260200190600101908083116121f0575b5050505050905060005b8281101561230857818181518110612228576122286135c8565b60200260200101518510156122f657600d600083838151811061224d5761224d6135c8565b60200260200101518152602001908152602001600020805461226e9061358d565b80601f016020809104026020016040519081016040528092919081815260200182805461229a9061358d565b80156122e75780601f106122bc576101008083540402835291602001916122e7565b820191906000526020600020905b8154815290600101906020018083116122ca57829003601f168201915b50505050509350505050919050565b612301600182613891565b905061220e565b5060405162461bcd60e51b815260206004820152600f60248201527f496e76616c696420746f6b656e49640000000000000000000000000000000000604482015260640161074c565b6060816123755750506040805180820190915260018152600360fc1b602082015290565b8160005b811561239f57806123898161382c565b91506123989050600a83613629565b9150612379565b60008167ffffffffffffffff8111156123ba576123ba61301f565b6040519080825280601f01601f1916602001820160405280156123e4576020820181803683370190505b5090505b8415610b38576123f9600183613926565b9150612406600a8661393d565b612411906030613891565b60f81b818381518110612426576124266135c8565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612460600a86613629565b94506123e8565b60607fef2a0374db4a48b74209fd1a525c32d62e54c4185cbabd807193b07a40081d4461249760208401846131f1565b6124a760408501602086016131f1565b60408501356124bc60808701606088016131f1565b6124c9608088018861363d565b6040516124d7929190613951565b60405190819003902060a088013560c08901356124fb6101008b0160e08c016131f1565b61250d6101208c016101008d01613876565b61251f6101408d016101208e01613876565b60408051602081019c909c526001600160a01b039a8b16908c015297891660608b015260808a019690965293871660a089015260c088019290925260e08701526101008601529092166101208401526001600160801b039182166101408085019190915291166101608301528301356101808201526101a0016040516020818303038152906040529050919050565b60006107ed6125bb612747565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061260b858561286e565b91509150612618816128de565b509392505050565b8061262a57610ee7565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561265e576126598282612a99565b610ee7565b610ee784848484612b3c565b60606001600160a01b0384163b6126d25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161074c565b600080856001600160a01b0316856040516126ed9190613961565b600060405180830381855af49150503d8060008114612728576040519150601f19603f3d011682016040523d82523d6000602084013e61272d565b606091505b509150915061273d828286612b95565b9695505050505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156127a057507f000000000000000000000000000000000000000000000000000000000000000046145b156127ca57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156128a55760208301516040840151606085015160001a61289987828585612bce565b945094505050506128d7565b8251604014156128cf57602083015160408401516128c4868383612cbb565b9350935050506128d7565b506000905060025b9250929050565b60008160048111156128f2576128f261397d565b14156128fb5750565b600181600481111561290f5761290f61397d565b141561295d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161074c565b60028160048111156129715761297161397d565b14156129bf5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161074c565b60038160048111156129d3576129d361397d565b1415612a2c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161074c565b6004816004811115612a4057612a4061397d565b141561099e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161074c565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612ae6576040519150601f19603f3d011682016040523d82523d6000602084013e612aeb565b606091505b505090508061094b5760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c656400000000604482015260640161074c565b816001600160a01b0316836001600160a01b03161415612b5b57610ee7565b6001600160a01b038316301415612b80576126596001600160a01b0385168383612d0d565b610ee76001600160a01b038516848484612d85565b60608315612ba4575081611885565b825115612bb45782518084602001fd5b8160405162461bcd60e51b815260040161074c919061319b565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612c055750600090506003612cb2565b8460ff16601b14158015612c1d57508460ff16601c14155b15612c2e5750600090506004612cb2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612c82573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612cab57600060019250925050612cb2565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612cf160ff86901c601b613891565b9050612cff87828885612bce565b935093505050935093915050565b6040516001600160a01b03831660248201526044810182905261094b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152612dbd565b6040516001600160a01b0380851660248301528316604482015260648101829052610ee79085906323b872dd60e01b90608401612d39565b6000612e12826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e8f9092919063ffffffff16565b80519091501561094b5780806020019051810190612e309190613993565b61094b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161074c565b60606118828484600085856001600160a01b0385163b612ef15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161074c565b600080866001600160a01b03168587604051612f0d9190613961565b60006040518083038185875af1925050503d8060008114612f4a576040519150601f19603f3d011682016040523d82523d6000602084013e612f4f565b606091505b5091509150612f5f828286612b95565b979650505050505050565b828054612f769061358d565b90600052602060002090601f016020900481019282612f985760008555612fde565b82601f10612fb157805160ff1916838001178555612fde565b82800160010185558215612fde579182015b82811115612fde578251825591602001919060010190612fc3565b50612fea929150612fee565b5090565b5b80821115612fea5760008155600101612fef565b80356001600160a01b038116811461301a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261304657600080fd5b813567ffffffffffffffff808211156130615761306161301f565b604051601f8301601f19908116603f011681019082821181831017156130895761308961301f565b816040528381528660208588010111156130a257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156130d557600080fd5b6130de83613003565b9150602083013567ffffffffffffffff8111156130fa57600080fd5b61310685828601613035565b9150509250929050565b6001600160e01b03198116811461099e57600080fd5b60006020828403121561313857600080fd5b813561188581613110565b60005b8381101561315e578181015183820152602001613146565b83811115610ee75750506000910152565b60008151808452613187816020860160208601613143565b601f01601f19169290920160200192915050565b602081526000611885602083018461316f565b6000602082840312156131c057600080fd5b5035919050565b600080604083850312156131da57600080fd5b6131e383613003565b946020939093013593505050565b60006020828403121561320357600080fd5b61188582613003565b60008060006060848603121561322157600080fd5b61322a84613003565b925061323860208501613003565b9150604084013590509250925092565b60008060006040848603121561325d57600080fd5b833567ffffffffffffffff8082111561327557600080fd5b90850190610160828803121561328a57600080fd5b909350602085013590808211156132a057600080fd5b818601915086601f8301126132b457600080fd5b8135818111156132c357600080fd5b8760208285010111156132d557600080fd5b6020830194508093505050509250925092565b600080604083850312156132fb57600080fd5b50508035926020909101359150565b6000806000806080858703121561332057600080fd5b61332985613003565b935060208501359250604085013567ffffffffffffffff8082111561334d57600080fd5b61335988838901613035565b9350606087013591508082111561336f57600080fd5b5061337c87828801613035565b91505092959194509250565b60006020828403121561339a57600080fd5b813567ffffffffffffffff8111156133b157600080fd5b610b3884828501613035565b6000806000606084860312156133d257600080fd5b8335925061323860208501613003565b801515811461099e57600080fd5b6000806040838503121561340357600080fd5b61340c83613003565b9150602083013561341c816133e2565b809150509250929050565b6000806020838503121561343a57600080fd5b823567ffffffffffffffff8082111561345257600080fd5b818501915085601f83011261346657600080fd5b81358181111561347557600080fd5b8660208260051b850101111561348a57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156134f157603f198886030184526134df85835161316f565b945092850192908501906001016134c3565b5092979650505050505050565b6000806000806080858703121561351457600080fd5b61351d85613003565b935061352b60208601613003565b925060408501359150606085013567ffffffffffffffff81111561354e57600080fd5b61337c87828801613035565b6000806040838503121561356d57600080fd5b61357683613003565b915061358460208401613003565b90509250929050565b600181811c908216806135a157607f821691505b602082108114156135c257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561360e5761360e6135de565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261363857613638613613565b500490565b6000808335601e1984360301811261365457600080fd5b83018035915067ffffffffffffffff82111561366f57600080fd5b6020019150368190038213156128d757600080fd5b6000808335601e1984360301811261369b57600080fd5b830160208101925035905067ffffffffffffffff8111156136bb57600080fd5b8036038313156128d757600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b80356001600160801b038116811461301a57600080fd5b6020815261372b6020820161371e84613003565b6001600160a01b03169052565b600061373960208401613003565b6001600160a01b0381166040840152506040830135606083015261375f60608401613003565b6001600160a01b03811660808401525061377c6080840184613684565b6101608060a0860152613794610180860183856136ca565b925060a086013560c086015260c086013560e08601526137b660e08701613003565b91506101006137cf818701846001600160a01b03169052565b6137da8188016136f3565b9250506101206137f4818701846001600160801b03169052565b6137ff8188016136f3565b925050610140613819818701846001600160801b03169052565b9590950135939094019290925250919050565b6000600019821415613840576138406135de565b5060010190565b60008351613859818460208801613143565b83519083019061386d818360208801613143565b01949350505050565b60006020828403121561388857600080fd5b611885826136f3565b600082198211156138a4576138a46135de565b500190565b6040815260006138bc604083018561316f565b82810360208401526138ce818561316f565b95945050505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261273d608083018461316f565b60006020828403121561391b57600080fd5b815161188581613110565b600082821015613938576139386135de565b500390565b60008261394c5761394c613613565b500690565b8183823760009101908152919050565b60008251613973818460208701613143565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156139a557600080fd5b8151611885816133e256fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e07f40c5920f8db41d3ea206bfe6ebe86b4681242821fc8ce7dad02164b5472d64736f6c634300080c0033";

const isSuperArgs$m = xs => xs.length > 1;

class ERC721SignatureMint__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$m(args)) {
      super(...args);
    } else {
      super(_abi$1w, _bytecode$m, args[0]);
    }
  }

  deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides) {
    return super.deploy(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides || {});
  }

  getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides) {
    return super.getDeployTransaction(_name, _symbol, _royaltyRecipient, _royaltyBps, _primarySaleRecipient, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1w);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1w, signerOrProvider);
  }

}

defineProperty._defineProperty(ERC721SignatureMint__factory, "bytecode", _bytecode$m);

defineProperty._defineProperty(ERC721SignatureMint__factory, "abi", _abi$1w);

const _abi$1v = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "from",
      type: "address"
    }, {
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "uint256",
      name: "value",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "gas",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "nonce",
      type: "uint256"
    }, {
      internalType: "bytes",
      name: "data",
      type: "bytes"
    }],
    internalType: "struct Forwarder.ForwardRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "execute",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }],
  name: "getNonce",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "from",
      type: "address"
    }, {
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "uint256",
      name: "value",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "gas",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "nonce",
      type: "uint256"
    }, {
      internalType: "bytes",
      name: "data",
      type: "bytes"
    }],
    internalType: "struct Forwarder.ForwardRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$l = "0x61014060405234801561001157600080fd5b50604080518082018252600f81526e23a9a73b19102337b93bb0b93232b960891b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100fa8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061010f92505050565b60805160a05160c05160e0516101005161012051610cf761015e6000396000610586015260006105d5015260006105b001526000610509015260006105330152600061055d0152610cf76000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f610054366004610990565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b6100956100903660046109c0565b6100d3565b604051610079929190610abb565b3480156100af57600080fd5b506100c36100be3660046109c0565b610306565b6040519015158152602001610079565b600060606100e2858585610306565b6101595760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f657360448201527f206e6f74206d617463682072657175657374000000000000000000000000000060648201526084015b60405180910390fd5b61016860808601356001610ade565b6000806101786020890189610990565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101b29190610990565b6001600160a01b0316606088013560408901356101d260a08b018b610b04565b6101df60208d018d610990565b6040516020016101f193929190610b4b565b60408051601f198184030181529082905261020b91610b71565b600060405180830381858888f193505050503d8060008114610249576040519150601f19603f3d011682016040523d82523d6000602084013e61024e565b606091505b5091509150816102dd576044815110156102aa5760405162461bcd60e51b815260206004820152601d60248201527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006044820152606401610150565b600481019050808060200190518101906102c49190610ba3565b60405162461bcd60e51b81526004016101509190610c50565b6102ec603f6060890135610c63565b5a116102fa576102fa610c85565b90969095509350505050565b60008061041984848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061041392507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e489150610376905060208a018a610990565b61038660408b0160208c01610990565b60408b013560608c013560808d01356103a260a08f018f610b04565b6040516103b0929190610c9b565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e08101919091526101000160405160208183030381529060405280519060200120610484565b906104d8565b905060808501356000806104306020890189610990565b6001600160a01b03166001600160a01b031681526020019081526020016000205414801561047b57506104666020860186610990565b6001600160a01b0316816001600160a01b0316145b95945050505050565b60006104d26104916104fc565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006104e78585610623565b915091506104f481610693565b509392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561055557507f000000000000000000000000000000000000000000000000000000000000000046145b1561057f57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041141561065a5760208301516040840151606085015160001a61064e87828585610851565b9450945050505061068c565b825160401415610684576020830151604084015161067986838361093e565b93509350505061068c565b506000905060025b9250929050565b60008160048111156106a7576106a7610cab565b14156106b05750565b60018160048111156106c4576106c4610cab565b14156107125760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610150565b600281600481111561072657610726610cab565b14156107745760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610150565b600381600481111561078857610788610cab565b14156107e15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610150565b60048160048111156107f5576107f5610cab565b141561084e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610150565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156108885750600090506003610935565b8460ff16601b141580156108a057508460ff16601c14155b156108b15750600090506004610935565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610905573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661092e57600060019250925050610935565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161097460ff86901c601b610ade565b905061098287828885610851565b935093505050935093915050565b6000602082840312156109a257600080fd5b81356001600160a01b03811681146109b957600080fd5b9392505050565b6000806000604084860312156109d557600080fd5b833567ffffffffffffffff808211156109ed57600080fd5b9085019060c08288031215610a0157600080fd5b90935060208501359080821115610a1757600080fd5b818601915086601f830112610a2b57600080fd5b813581811115610a3a57600080fd5b876020828501011115610a4c57600080fd5b6020830194508093505050509250925092565b60005b83811015610a7a578181015183820152602001610a62565b83811115610a89576000848401525b50505050565b60008151808452610aa7816020860160208601610a5f565b601f01601f19169290920160200192915050565b8215158152604060208201526000610ad66040830184610a8f565b949350505050565b60008219821115610aff57634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e19843603018112610b1b57600080fd5b83018035915067ffffffffffffffff821115610b3657600080fd5b60200191503681900382131561068c57600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610b83818460208701610a5f565b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610bb557600080fd5b815167ffffffffffffffff80821115610bcd57600080fd5b818401915084601f830112610be157600080fd5b815181811115610bf357610bf3610b8d565b604051601f8201601f19908116603f01168101908382118183101715610c1b57610c1b610b8d565b81604052828152876020848701011115610c3457600080fd5b610c45836020830160208801610a5f565b979650505050505050565b6020815260006109b96020830184610a8f565b600082610c8057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052600160045260246000fd5b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220de815c5cff2ce32a397dba4768a07459160d67cb088cb9f3d2c05c105315fbe964736f6c634300080c0033";

const isSuperArgs$l = xs => xs.length > 1;

class Forwarder__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$l(args)) {
      super(...args);
    } else {
      super(_abi$1v, _bytecode$l, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1v);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1v, signerOrProvider);
  }

}

defineProperty._defineProperty(Forwarder__factory, "bytecode", _bytecode$l);

defineProperty._defineProperty(Forwarder__factory, "abi", _abi$1v);

const _abi$1u = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "from",
      type: "address"
    }, {
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "uint256",
      name: "value",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "gas",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "nonce",
      type: "uint256"
    }, {
      internalType: "bytes",
      name: "data",
      type: "bytes"
    }, {
      internalType: "uint256",
      name: "chainid",
      type: "uint256"
    }],
    internalType: "struct ForwarderChainlessDomain.ForwardRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "execute",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }],
  name: "getNonce",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "from",
      type: "address"
    }, {
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "uint256",
      name: "value",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "gas",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "nonce",
      type: "uint256"
    }, {
      internalType: "bytes",
      name: "data",
      type: "bytes"
    }, {
      internalType: "uint256",
      name: "chainid",
      type: "uint256"
    }],
    internalType: "struct ForwarderChainlessDomain.ForwardRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$k = "0x61012060405234801561001157600080fd5b50604080518082018252600f81526e23a9a73b19102337b93bb0b93232b960891b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060c08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc19916381188560e08190529192917f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a27666100ef81848460408051602081018590529081018390526060810182905230608082015260009060a0016040516020818303038152906040528051906020012090509392505050565b6080523060a052610100525061010492505050565b60805160a05160c05160e05161010051610b3f61014860003960006104d301526000610522015260006104fd01526000610481015260006104aa0152610b3f6000f3fe6080604052600436106100345760003560e01c8063019fe885146100395780632d0335ab1461006e57806344d46c8e146100b2575b600080fd5b34801561004557600080fd5b506100596100543660046108d7565b6100d3565b60405190151581526020015b60405180910390f35b34801561007a57600080fd5b506100a4610089366004610976565b6001600160a01b031660009081526020819052604090205490565b604051908152602001610065565b6100c56100c03660046108d7565b610258565b6040516100659291906109d6565b6000806101ed84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506101e792507f8531492456b937fd5f74434f9d37a0a2d84164116ae1fd825f21b73aebc452339150610143905060208a018a610976565b61015360408b0160208c01610976565b60408b013560608c013560808d013561016f60a08f018f610a12565b60405161017d929190610a59565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e08101919091524661010082015261012001604051602081830303815290604052805190602001206103fc565b90610450565b905060808501356000806102046020890189610976565b6001600160a01b03166001600160a01b031681526020019081526020016000205414801561024f575061023a6020860186610976565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600060606102678585856100d3565b6102de5760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f657360448201527f206e6f74206d617463682072657175657374000000000000000000000000000060648201526084015b60405180910390fd5b6102ed60808601356001610a69565b6000806102fd6020890189610976565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906103379190610976565b6001600160a01b03166060880135604089013561035760a08b018b610a12565b61036460208d018d610976565b60405160200161037693929190610a8f565b60408051601f198184030181529082905261039091610ab5565b600060405180830381858888f193505050503d80600081146103ce576040519150601f19603f3d011682016040523d82523d6000602084013e6103d3565b606091505b5090925090506103e8603f6060890135610ad1565b5a116103f057fe5b90969095509350505050565b600061044a610409610474565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080600061045f858561056a565b9150915061046c816105da565b509392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104cc57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f00000000000000000000000000000000000000000000000000000000000000006060830152306080808401919091528351808403909101815260a0909201909252805191012090565b6000808251604114156105a15760208301516040840151606085015160001a61059587828585610798565b945094505050506105d3565b8251604014156105cb57602083015160408401516105c0868383610885565b9350935050506105d3565b506000905060025b9250929050565b60008160048111156105ee576105ee610af3565b14156105f75750565b600181600481111561060b5761060b610af3565b14156106595760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102d5565b600281600481111561066d5761066d610af3565b14156106bb5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102d5565b60038160048111156106cf576106cf610af3565b14156107285760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102d5565b600481600481111561073c5761073c610af3565b14156107955760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016102d5565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156107cf575060009050600361087c565b8460ff16601b141580156107e757508460ff16601c14155b156107f8575060009050600461087c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561084c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108755760006001925092505061087c565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816108bb60ff86901c601b610a69565b90506108c987828885610798565b935093505050935093915050565b6000806000604084860312156108ec57600080fd5b833567ffffffffffffffff8082111561090457600080fd5b9085019060e0828803121561091857600080fd5b9093506020850135908082111561092e57600080fd5b818601915086601f83011261094257600080fd5b81358181111561095157600080fd5b87602082850101111561096357600080fd5b6020830194508093505050509250925092565b60006020828403121561098857600080fd5b81356001600160a01b038116811461099f57600080fd5b9392505050565b60005b838110156109c15781810151838201526020016109a9565b838111156109d0576000848401525b50505050565b821515815260406020820152600082518060408401526109fd8160608501602087016109a6565b601f01601f1916919091016060019392505050565b6000808335601e19843603018112610a2957600080fd5b83018035915067ffffffffffffffff821115610a4457600080fd5b6020019150368190038213156105d357600080fd5b8183823760009101908152919050565b60008219821115610a8a57634e487b7160e01b600052601160045260246000fd5b500190565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610ac78184602087016109a6565b9190910192915050565b600082610aee57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b957cde2b42fb9103cdc6ebe8003bda0502df994df0097cfa8e845002e2e60d164736f6c634300080c0033";

const isSuperArgs$k = xs => xs.length > 1;

class ForwarderChainlessDomain__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$k(args)) {
      super(...args);
    } else {
      super(_abi$1u, _bytecode$k, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1u);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1u, signerOrProvider);
  }

}

defineProperty._defineProperty(ForwarderChainlessDomain__factory, "bytecode", _bytecode$k);

defineProperty._defineProperty(ForwarderChainlessDomain__factory, "abi", _abi$1u);

const _abi$1t = [{
  inputs: [{
    internalType: "address",
    name: "trustedForwarder",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [],
  name: "caller",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "setCaller",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$j = "0x60a060405234801561001057600080fd5b5060405161024338038061024383398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516101b2610091600039600081816060015261010b01526101b26000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063013c5f3914610046578063572b6c0514610050578063fc9c8d39146100a5575b600080fd5b61004e6100d0565b005b61009061005e36600461014c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b60405190151581526020015b60405180910390f35b6000546100b8906001600160a01b031681565b6040516001600160a01b03909116815260200161009c565b6100d8610107565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331415610147575060131936013560601c90565b503390565b60006020828403121561015e57600080fd5b81356001600160a01b038116811461017557600080fd5b939250505056fea26469706673582212203033bcb03d6adbf03a6c43b3ca4d4fb9215d10897a78f3dd600cb3516d0f953464736f6c634300080c0033";

const isSuperArgs$j = xs => xs.length > 1;

class ForwarderConsumer__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$j(args)) {
      super(...args);
    } else {
      super(_abi$1t, _bytecode$j, args[0]);
    }
  }

  deploy(trustedForwarder, overrides) {
    return super.deploy(trustedForwarder, overrides || {});
  }

  getDeployTransaction(trustedForwarder, overrides) {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1t);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1t, signerOrProvider);
  }

}

defineProperty._defineProperty(ForwarderConsumer__factory, "bytecode", _bytecode$j);

defineProperty._defineProperty(ForwarderConsumer__factory, "abi", _abi$1t);

const _abi$1s = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "from",
      type: "address"
    }, {
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "uint256",
      name: "value",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "gas",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "nonce",
      type: "uint256"
    }, {
      internalType: "bytes",
      name: "data",
      type: "bytes"
    }],
    internalType: "struct MinimalForwarderEOAOnly.ForwardRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "execute",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }],
  name: "getNonce",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "from",
      type: "address"
    }, {
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "uint256",
      name: "value",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "gas",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "nonce",
      type: "uint256"
    }, {
      internalType: "bytes",
      name: "data",
      type: "bytes"
    }],
    internalType: "struct MinimalForwarderEOAOnly.ForwardRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$i = "0x61014060405234801561001157600080fd5b50604080518082018252600f81526e23a9a73b19102337b93bb0b93232b960891b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100fa8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061010f92505050565b60805160a05160c05160e0516101005161012051610ba261015e60003960006105300152600061057f0152600061055a015260006104b3015260006104dd015260006105070152610ba26000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f61005436600461093a565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b61009561009036600461096a565b6100d3565b604051610079929190610a39565b3480156100af57600080fd5b506100c36100be36600461096a565b6102b0565b6040519015158152602001610079565b600060603332146101155760405162461bcd60e51b81526020600482015260076024820152666e6f7420454f4160c81b60448201526064015b60405180910390fd5b6101208585856102b0565b6101925760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f657360448201527f206e6f74206d6174636820726571756573740000000000000000000000000000606482015260840161010c565b6101a160808601356001610a75565b6000806101b1602089018961093a565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101eb919061093a565b6001600160a01b03166060880135604089013561020b60a08b018b610a9b565b61021860208d018d61093a565b60405160200161022a93929190610ae2565b60408051601f198184030181529082905261024491610b08565b600060405180830381858888f193505050503d8060008114610282576040519150601f19603f3d011682016040523d82523d6000602084013e610287565b606091505b50909250905061029c603f6060890135610b24565b5a116102a457fe5b90969095509350505050565b6000806103c384848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103bd92507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e489150610320905060208a018a61093a565b61033060408b0160208c0161093a565b60408b013560608c013560808d013561034c60a08f018f610a9b565b60405161035a929190610b46565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e0810191909152610100016040516020818303038152906040528051906020012061042e565b90610482565b905060808501356000806103da602089018961093a565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156104255750610410602086018661093a565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061047c61043b6104a6565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080600061049185856105cd565b9150915061049e8161063d565b509392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156104ff57507f000000000000000000000000000000000000000000000000000000000000000046145b1561052957507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156106045760208301516040840151606085015160001a6105f8878285856107fb565b94509450505050610636565b82516040141561062e57602083015160408401516106238683836108e8565b935093505050610636565b506000905060025b9250929050565b600081600481111561065157610651610b56565b141561065a5750565b600181600481111561066e5761066e610b56565b14156106bc5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161010c565b60028160048111156106d0576106d0610b56565b141561071e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161010c565b600381600481111561073257610732610b56565b141561078b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161010c565b600481600481111561079f5761079f610b56565b14156107f85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161010c565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561083257506000905060036108df565b8460ff16601b1415801561084a57508460ff16601c14155b1561085b57506000905060046108df565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156108af573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108d8576000600192509250506108df565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161091e60ff86901c601b610a75565b905061092c878288856107fb565b935093505050935093915050565b60006020828403121561094c57600080fd5b81356001600160a01b038116811461096357600080fd5b9392505050565b60008060006040848603121561097f57600080fd5b833567ffffffffffffffff8082111561099757600080fd5b9085019060c082880312156109ab57600080fd5b909350602085013590808211156109c157600080fd5b818601915086601f8301126109d557600080fd5b8135818111156109e457600080fd5b8760208285010111156109f657600080fd5b6020830194508093505050509250925092565b60005b83811015610a24578181015183820152602001610a0c565b83811115610a33576000848401525b50505050565b82151581526040602082015260008251806040840152610a60816060850160208701610a09565b601f01601f1916919091016060019392505050565b60008219821115610a9657634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e19843603018112610ab257600080fd5b83018035915067ffffffffffffffff821115610acd57600080fd5b60200191503681900382131561063657600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610b1a818460208701610a09565b9190910192915050565b600082610b4157634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220bca5d66e06b7615d7bea7f2b28f6032920e2b8fc895ce787aa1c19b32f3144cc64736f6c634300080c0033";

const isSuperArgs$i = xs => xs.length > 1;

class ForwarderEOAOnly__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$i(args)) {
      super(...args);
    } else {
      super(_abi$1s, _bytecode$i, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1s);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1s, signerOrProvider);
  }

}

defineProperty._defineProperty(ForwarderEOAOnly__factory, "bytecode", _bytecode$i);

defineProperty._defineProperty(ForwarderEOAOnly__factory, "abi", _abi$1s);

const _abi$1r = [{
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "AppURIUpdated",
  type: "event"
}, {
  inputs: [],
  name: "appURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setAppURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IAppURI__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1r);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1r, signerOrProvider);
  }

}

defineProperty._defineProperty(IAppURI__factory, "abi", _abi$1r);

const _abi$1q = [{
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }],
  name: "burnBatch",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IBurnableERC1155__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1q);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1q, signerOrProvider);
  }

}

defineProperty._defineProperty(IBurnableERC1155__factory, "abi", _abi$1q);

const _abi$1p = [{
  inputs: [{
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "burnFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IBurnableERC20__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1p);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1p, signerOrProvider);
  }

}

defineProperty._defineProperty(IBurnableERC20__factory, "abi", _abi$1p);

const _abi$1o = [{
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IBurnableERC721__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1o);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1o, signerOrProvider);
  }

}

defineProperty._defineProperty(IBurnableERC721__factory, "abi", _abi$1o);

const _abi$1n = [{
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "claimConditions",
    type: "tuple"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetClaimEligibility",
    type: "bool"
  }],
  name: "ClaimConditionUpdated",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "phase",
    type: "tuple"
  }, {
    internalType: "bool",
    name: "resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IClaimConditionsSinglePhase__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1n);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1n, signerOrProvider);
  }

}

defineProperty._defineProperty(IClaimConditionsSinglePhase__factory, "abi", _abi$1n);

const _abi$1m = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}];
class IClaimableERC1155__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1m);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1m, signerOrProvider);
  }

}

defineProperty._defineProperty(IClaimableERC1155__factory, "abi", _abi$1m);

const _abi$1l = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}];
class IClaimableERC721__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1l);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1l, signerOrProvider);
  }

}

defineProperty._defineProperty(IClaimableERC721__factory, "abi", _abi$1l);

const _abi$1k = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "deployer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "deployedContract",
    type: "address"
  }],
  name: "ContractDeployed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "bool",
    name: "isPaused",
    type: "bool"
  }],
  name: "Paused",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    internalType: "bytes",
    name: "contractBytecode",
    type: "bytes"
  }, {
    internalType: "bytes",
    name: "constructorArgs",
    type: "bytes"
  }, {
    internalType: "bytes32",
    name: "salt",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "string",
    name: "publishMetadataUri",
    type: "string"
  }],
  name: "deployInstance",
  outputs: [{
    internalType: "address",
    name: "deployedAddress",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    internalType: "address",
    name: "implementation",
    type: "address"
  }, {
    internalType: "bytes",
    name: "initializeData",
    type: "bytes"
  }, {
    internalType: "bytes32",
    name: "salt",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "string",
    name: "publishMetadataUri",
    type: "string"
  }],
  name: "deployInstanceProxy",
  outputs: [{
    internalType: "address",
    name: "deployedAddress",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_contract",
    type: "address"
  }],
  name: "getContractDeployer",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class IContractDeployer__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1k);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1k, signerOrProvider);
  }

}

defineProperty._defineProperty(IContractDeployer__factory, "abi", _abi$1k);

const _abi$1j = [{
  inputs: [{
    internalType: "address",
    name: "implementation",
    type: "address"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }, {
    internalType: "bytes32",
    name: "salt",
    type: "bytes32"
  }],
  name: "deployProxyByImplementation",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class IContractFactory__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1j);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1j, signerOrProvider);
  }

}

defineProperty._defineProperty(IContractFactory__factory, "abi", _abi$1j);

const _abi$1i = [{
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IContractMetadata__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1i);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1i, signerOrProvider);
  }

}

defineProperty._defineProperty(IContractMetadata__factory, "abi", _abi$1i);

const _abi$1h = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "contractAddress",
    type: "address"
  }, {
    indexed: false,
    internalType: "string",
    name: "metadataUri",
    type: "string"
  }],
  name: "MetadataRegistered",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "contractAddress",
    type: "address"
  }, {
    internalType: "string",
    name: "metadataUri",
    type: "string"
  }],
  name: "registerMetadata",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IContractMetadataRegistry__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1h);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1h, signerOrProvider);
  }

}

defineProperty._defineProperty(IContractMetadataRegistry__factory, "abi", _abi$1h);

const _abi$1g = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IContractPublisher.CustomContractInstance",
    name: "publishedContract",
    type: "tuple"
  }],
  name: "ContractPublished",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    indexed: true,
    internalType: "string",
    name: "contractId",
    type: "string"
  }],
  name: "ContractUnpublished",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "bool",
    name: "isPaused",
    type: "bool"
  }],
  name: "Paused",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "PublisherProfileUpdated",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }],
  name: "getAllPublishedContracts",
  outputs: [{
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    internalType: "struct IContractPublisher.CustomContractInstance[]",
    name: "published",
    type: "tuple[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "contractId",
    type: "string"
  }],
  name: "getPublishedContract",
  outputs: [{
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    internalType: "struct IContractPublisher.CustomContractInstance",
    name: "published",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "contractId",
    type: "string"
  }],
  name: "getPublishedContractVersions",
  outputs: [{
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    internalType: "struct IContractPublisher.CustomContractInstance[]",
    name: "published",
    type: "tuple[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "compilerMetadataUri",
    type: "string"
  }],
  name: "getPublishedUriFromCompilerUri",
  outputs: [{
    internalType: "string[]",
    name: "publishedMetadataUris",
    type: "string[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }],
  name: "getPublisherProfileUri",
  outputs: [{
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "contractId",
    type: "string"
  }, {
    internalType: "string",
    name: "publishMetadataUri",
    type: "string"
  }, {
    internalType: "string",
    name: "compilerMetadataUri",
    type: "string"
  }, {
    internalType: "bytes32",
    name: "bytecodeHash",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "implementation",
    type: "address"
  }],
  name: "publishContract",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  name: "setPublisherProfileUri",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "contractId",
    type: "string"
  }],
  name: "unpublishContract",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IContractPublisher__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1g);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1g, signerOrProvider);
  }

}

defineProperty._defineProperty(IContractPublisher__factory, "abi", _abi$1g);

const _abi$1f = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  name: "TokenURIRevealed",
  type: "event"
}, {
  inputs: [{
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "encryptDecrypt",
  outputs: [{
    internalType: "bytes",
    name: "result",
    type: "bytes"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "identifier",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "reveal",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class IDelayedReveal__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1f);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1f, signerOrProvider);
  }

}

defineProperty._defineProperty(IDelayedReveal__factory, "abi", _abi$1f);

const _abi$1e = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  name: "TokenURIRevealed",
  type: "event"
}, {
  inputs: [{
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "encryptDecrypt",
  outputs: [{
    internalType: "bytes",
    name: "result",
    type: "bytes"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "identifier",
    type: "uint256"
  }],
  name: "encryptedBaseURI",
  outputs: [{
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "identifier",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "reveal",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class IDelayedRevealDeprecated__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1e);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1e, signerOrProvider);
  }

}

defineProperty._defineProperty(IDelayedRevealDeprecated__factory, "abi", _abi$1e);

const _abi$1d = [{
  inputs: [{
    internalType: "uint256",
    name: "blockTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "startTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "lastClaimedAt",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  name: "Drop__CannotClaimYet",
  type: "error"
}, {
  inputs: [{
    internalType: "uint256",
    name: "supplyClaimed",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "maxClaimableSupply",
    type: "uint256"
  }],
  name: "Drop__ExceedMaxClaimableSupply",
  type: "error"
}, {
  inputs: [{
    internalType: "address",
    name: "givenCurrency",
    type: "address"
  }, {
    internalType: "address",
    name: "requiredCurrency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "givenPricePerToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "requiredPricePerToken",
    type: "uint256"
  }],
  name: "Drop__InvalidCurrencyOrPrice",
  type: "error"
}, {
  inputs: [],
  name: "Drop__InvalidQuantity",
  type: "error"
}, {
  inputs: [{
    internalType: "uint256",
    name: "maxQuantityInAllowlist",
    type: "uint256"
  }],
  name: "Drop__InvalidQuantityProof",
  type: "error"
}, {
  inputs: [{
    internalType: "uint256",
    name: "supplyClaimedAlready",
    type: "uint256"
  }],
  name: "Drop__MaxSupplyClaimedAlready",
  type: "error"
}, {
  inputs: [],
  name: "Drop__NotAuthorized",
  type: "error"
}, {
  inputs: [],
  name: "Drop__NotInWhitelist",
  type: "error"
}, {
  inputs: [],
  name: "Drop__ProofClaimed",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition[]",
    name: "claimConditions",
    type: "tuple[]"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionsUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "claimConditionIndex",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDrop.AllowlistProof",
    name: "allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition[]",
    name: "phases",
    type: "tuple[]"
  }, {
    internalType: "bool",
    name: "resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IDrop__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1d);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1d, signerOrProvider);
  }

}

defineProperty._defineProperty(IDrop__factory, "abi", _abi$1d);

const _abi$1c = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "claimConditions",
    type: "tuple[]"
  }],
  name: "ClaimConditionsUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "maxTotalSupply",
    type: "uint256"
  }],
  name: "MaxTotalSupplyUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "MaxWalletClaimCountUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "address",
    name: "saleRecipient",
    type: "address"
  }],
  name: "SaleRecipientForTokenUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "claimConditionIndex",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "wallet",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "WalletClaimCountUpdated",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "bytes32[]",
    name: "proofs",
    type: "bytes32[]"
  }, {
    internalType: "uint256",
    name: "proofMaxQuantityPerTransaction",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "baseURIForTokens",
    type: "string"
  }],
  name: "lazyMint",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "phases",
    type: "tuple[]"
  }, {
    internalType: "bool",
    name: "resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
class IDropERC1155__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1c);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1c, signerOrProvider);
  }

}

defineProperty._defineProperty(IDropERC1155__factory, "abi", _abi$1c);

const _abi$1b = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "claimConditions",
    type: "tuple[]"
  }],
  name: "ClaimConditionsUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "maxTotalSupply",
    type: "uint256"
  }],
  name: "MaxTotalSupplyUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "MaxWalletClaimCountUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "claimConditionIndex",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "wallet",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "WalletClaimCountUpdated",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "bytes32[]",
    name: "proofs",
    type: "bytes32[]"
  }, {
    internalType: "uint256",
    name: "proofMaxQuantityPerTransaction",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "phases",
    type: "tuple[]"
  }, {
    internalType: "bool",
    name: "resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class IDropERC20__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1b);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1b, signerOrProvider);
  }

}

defineProperty._defineProperty(IDropERC20__factory, "abi", _abi$1b);

const _abi$1a = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "claimConditions",
    type: "tuple[]"
  }],
  name: "ClaimConditionsUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "maxTotalSupply",
    type: "uint256"
  }],
  name: "MaxTotalSupplyUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "MaxWalletClaimCountUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  name: "NFTRevealed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "claimConditionIndex",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "wallet",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  name: "WalletClaimCountUpdated",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "balance",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "bytes32[]",
    name: "proofs",
    type: "bytes32[]"
  }, {
    internalType: "uint256",
    name: "proofMaxQuantityPerTransaction",
    type: "uint256"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IDropClaimCondition.ClaimCondition[]",
    name: "phases",
    type: "tuple[]"
  }, {
    internalType: "bool",
    name: "resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IDropERC721__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$1a);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1a, signerOrProvider);
  }

}

defineProperty._defineProperty(IDropERC721__factory, "abi", _abi$1a);

const _abi$19 = [{
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "phase",
    type: "tuple"
  }, {
    internalType: "bool",
    name: "resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IDropSinglePhase__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$19);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$19, signerOrProvider);
  }

}

defineProperty._defineProperty(IDropSinglePhase__factory, "abi", _abi$19);

const _abi$18 = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase1155.AllowlistProof",
    name: "allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "phase",
    type: "tuple"
  }, {
    internalType: "bool",
    name: "resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IDropSinglePhase1155__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$18);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$18, signerOrProvider);
  }

}

defineProperty._defineProperty(IDropSinglePhase1155__factory, "abi", _abi$18);

const _abi$17 = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "_values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "_value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "_value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "_owners",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "_ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "address",
    name: "_operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "_ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "_values",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_value",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IERC1155__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$17);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$17, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC1155__factory, "abi", _abi$17);

const _abi$16 = [{
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
class IERC1155Enumerable__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$16);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$16, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC1155Enumerable__factory, "abi", _abi$16);

const _abi$15 = [{
  inputs: [{
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}];
class IERC1155Metadata__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$15);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$15, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC1155Metadata__factory, "abi", _abi$15);

const _abi$14 = [{
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "onERC1155BatchReceived",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "onERC1155Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
class IERC1155Receiver__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$14);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$14, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC1155Receiver__factory, "abi", _abi$14);

const _abi$13 = [{
  inputs: [{
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
class IERC1155Supply__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$13);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$13, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC1155Supply__factory, "abi", _abi$13);

const _abi$12 = [{
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
class IERC165__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$12);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$12, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC165__factory, "abi", _abi$12);

const _abi$11 = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "who",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class IERC20__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$11);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$11, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC20__factory, "abi", _abi$11);

const _abi$10 = [{
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}];
class IERC20Metadata__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$10);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$10, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC20Metadata__factory, "abi", _abi$10);

const _abi$$ = [{
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IERC20Permit__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$$);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$$, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC20Permit__factory, "abi", _abi$$);

const _abi$_ = [{
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
class IERC2981__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$_);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$_, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC2981__factory, "abi", _abi$_);

const _abi$Z = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IERC721__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$Z);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$Z, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC721__factory, "abi", _abi$Z);

const _abi$Y = [{
  inputs: [],
  name: "ApprovalCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalToCurrentOwner",
  type: "error"
}, {
  inputs: [],
  name: "ApproveToCaller",
  type: "error"
}, {
  inputs: [],
  name: "BalanceQueryForZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintZeroQuantity",
  type: "error"
}, {
  inputs: [],
  name: "OwnerQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "TransferCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "TransferFromIncorrectOwner",
  type: "error"
}, {
  inputs: [],
  name: "TransferToNonERC721ReceiverImplementer",
  type: "error"
}, {
  inputs: [],
  name: "TransferToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "URIQueryForNonexistentToken",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IERC721A__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$Y);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$Y, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC721A__factory, "abi", _abi$Y);

const _abi$X = [{
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "tokenByIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_owner",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "tokenOfOwnerByIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
class IERC721Enumerable__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$X);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$X, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC721Enumerable__factory, "abi", _abi$X);

const _abi$W = [{
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}];
class IERC721Metadata__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$W);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$W, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC721Metadata__factory, "abi", _abi$W);

const _abi$V = [{
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "onERC721Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class IERC721Receiver__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$V);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$V, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC721Receiver__factory, "abi", _abi$V);

const _abi$U = [{
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
class IERC721Supply__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$U);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$U, signerOrProvider);
  }

}

defineProperty._defineProperty(IERC721Supply__factory, "abi", _abi$U);

const _abi$T = [{
  inputs: [{
    internalType: "address",
    name: "deployer",
    type: "address"
  }, {
    internalType: "address",
    name: "proxy",
    type: "address"
  }],
  name: "getFeeTier",
  outputs: [{
    internalType: "uint128",
    name: "tierId",
    type: "uint128"
  }, {
    internalType: "uint128",
    name: "validUntilTimestamp",
    type: "uint128"
  }],
  stateMutability: "view",
  type: "function"
}];
class IFeeTierPlacementExtension__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$T);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$T, signerOrProvider);
  }

}

defineProperty._defineProperty(IFeeTierPlacementExtension__factory, "abi", _abi$T);

const _abi$S = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "extraData",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [{
    internalType: "uint256",
    name: "batchId",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class ILazyMint__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$S);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$S, signerOrProvider);
  }

}

defineProperty._defineProperty(ILazyMint__factory, "abi", _abi$S);

const _abi$R = [{
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "timeBuffer",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "bidBufferBps",
    type: "uint256"
  }],
  name: "AuctionBuffersUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "closer",
    type: "address"
  }, {
    indexed: true,
    internalType: "bool",
    name: "cancelled",
    type: "bool"
  }, {
    indexed: false,
    internalType: "address",
    name: "auctionCreator",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "winningBidder",
    type: "address"
  }],
  name: "AuctionClosed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "assetContract",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "lister",
    type: "address"
  }, {
    components: [{
      internalType: "uint256",
      name: "listingId",
      type: "uint256"
    }, {
      internalType: "address",
      name: "tokenOwner",
      type: "address"
    }, {
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "startTime",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "endTime",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint256",
      name: "reservePricePerToken",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "buyoutPricePerToken",
      type: "uint256"
    }, {
      internalType: "enum IMarketplace.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "enum IMarketplace.ListingType",
      name: "listingType",
      type: "uint8"
    }],
    indexed: false,
    internalType: "struct IMarketplace.Listing",
    name: "listing",
    type: "tuple"
  }],
  name: "ListingAdded",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "listingCreator",
    type: "address"
  }],
  name: "ListingRemoved",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "listingCreator",
    type: "address"
  }],
  name: "ListingUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "offeror",
    type: "address"
  }, {
    indexed: true,
    internalType: "enum IMarketplace.ListingType",
    name: "listingType",
    type: "uint8"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityWanted",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "totalOfferAmount",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "address",
    name: "currency",
    type: "address"
  }],
  name: "NewOffer",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "assetContract",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "lister",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "buyer",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityBought",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "totalPricePaid",
    type: "uint256"
  }],
  name: "NewSale",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_offeror",
    type: "address"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_totalPrice",
    type: "uint256"
  }],
  name: "acceptOffer",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_buyFor",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_totalPrice",
    type: "uint256"
  }],
  name: "buy",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }],
  name: "cancelDirectListing",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_closeFor",
    type: "address"
  }],
  name: "closeAuction",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "startTime",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "secondsUntilEndTime",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityToList",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currencyToAccept",
      type: "address"
    }, {
      internalType: "uint256",
      name: "reservePricePerToken",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "buyoutPricePerToken",
      type: "uint256"
    }, {
      internalType: "enum IMarketplace.ListingType",
      name: "listingType",
      type: "uint8"
    }],
    internalType: "struct IMarketplace.ListingParameters",
    name: "_params",
    type: "tuple"
  }],
  name: "createListing",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantityWanted",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_expirationTimestamp",
    type: "uint256"
  }],
  name: "offer",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantityToList",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_reservePricePerToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_buyoutPricePerToken",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currencyToAccept",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_startTime",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_secondsUntilEndTime",
    type: "uint256"
  }],
  name: "updateListing",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IMarketplace__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$R);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$R, signerOrProvider);
  }

}

defineProperty._defineProperty(IMarketplace__factory, "abi", _abi$R);

const _abi$Q = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "uri",
    type: "string"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityMinted",
    type: "uint256"
  }],
  name: "TokensMinted",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "string",
    name: "uri",
    type: "string"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IMintableERC1155__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$Q);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$Q, signerOrProvider);
  }

}

defineProperty._defineProperty(IMintableERC1155__factory, "abi", _abi$Q);

const _abi$P = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityMinted",
    type: "uint256"
  }],
  name: "TokensMinted",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IMintableERC20__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$P);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$P, signerOrProvider);
  }

}

defineProperty._defineProperty(IMintableERC20__factory, "abi", _abi$P);

const _abi$O = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  name: "TokensMinted",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  name: "mintTo",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class IMintableERC721__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$O);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$O, signerOrProvider);
  }

}

defineProperty._defineProperty(IMintableERC721__factory, "abi", _abi$O);

const _abi$N = [{
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class IMulticall__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$N);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$N, signerOrProvider);
  }

}

defineProperty._defineProperty(IMulticall__factory, "abi", _abi$N);

const _abi$M = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "unwrapper",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "recipientOfWrappedContents",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdOfWrappedToken",
    type: "uint256"
  }],
  name: "TokensUnwrapped",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "wrapper",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "recipientOfWrappedToken",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdOfWrappedToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    indexed: false,
    internalType: "struct ITokenBundle.Token[]",
    name: "wrappedContents",
    type: "tuple[]"
  }],
  name: "TokensWrapped",
  type: "event"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "unwrap",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token[]",
    name: "wrappedContents",
    type: "tuple[]"
  }, {
    internalType: "string",
    name: "uriForWrappedToken",
    type: "string"
  }, {
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "wrap",
  outputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  stateMutability: "payable",
  type: "function"
}];
class IMultiwrap__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$M);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$M, signerOrProvider);
  }

}

defineProperty._defineProperty(IMultiwrap__factory, "abi", _abi$M);

const _abi$L = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IOwnable__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$L);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$L, signerOrProvider);
  }

}

defineProperty._defineProperty(IOwnable__factory, "abi", _abi$L);

const _abi$K = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "packId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "address",
    name: "recipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "totalPacksCreated",
    type: "uint256"
  }],
  name: "PackCreated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "packId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "opener",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "numOfPacksOpened",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    indexed: false,
    internalType: "struct ITokenBundle.Token[]",
    name: "rewardUnitsDistributed",
    type: "tuple[]"
  }],
  name: "PackOpened",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "packId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "address",
    name: "recipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "totalPacksCreated",
    type: "uint256"
  }],
  name: "PackUpdated",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token[]",
    name: "contents",
    type: "tuple[]"
  }, {
    internalType: "uint256[]",
    name: "numOfRewardUnits",
    type: "uint256[]"
  }, {
    internalType: "string",
    name: "packUri",
    type: "string"
  }, {
    internalType: "uint128",
    name: "openStartTimestamp",
    type: "uint128"
  }, {
    internalType: "uint128",
    name: "amountDistributedPerOpen",
    type: "uint128"
  }, {
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "createPack",
  outputs: [{
    internalType: "uint256",
    name: "packId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "packTotalSupply",
    type: "uint256"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "packId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountToOpen",
    type: "uint256"
  }],
  name: "openPack",
  outputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token[]",
    name: "",
    type: "tuple[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class IPack__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$K);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$K, signerOrProvider);
  }

}

defineProperty._defineProperty(IPack__factory, "abi", _abi$K);

const _abi$J = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IPermissions__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$J);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$J, signerOrProvider);
  }

}

defineProperty._defineProperty(IPermissions__factory, "abi", _abi$J);

const _abi$I = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IPermissionsEnumerable__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$I);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$I, signerOrProvider);
  }

}

defineProperty._defineProperty(IPermissionsEnumerable__factory, "abi", _abi$I);

const _abi$H = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IPlatformFee__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$H);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$H, signerOrProvider);
  }

}

defineProperty._defineProperty(IPlatformFee__factory, "abi", _abi$H);

const _abi$G = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IPrimarySale__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$G);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$G, signerOrProvider);
  }

}

defineProperty._defineProperty(IPrimarySale__factory, "abi", _abi$G);

const _abi$F = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
class IRoyalty__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$F);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$F, signerOrProvider);
  }

}

defineProperty._defineProperty(IRoyalty__factory, "abi", _abi$F);

const _abi$E = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class ISignatureMintERC1155__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$E);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$E, signerOrProvider);
  }

}

defineProperty._defineProperty(ISignatureMintERC1155__factory, "abi", _abi$E);

const _abi$D = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class ISignatureMintERC20__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$D);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$D, signerOrProvider);
  }

}

defineProperty._defineProperty(ISignatureMintERC20__factory, "abi", _abi$D);

const _abi$C = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class ISignatureMintERC721__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$C);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$C, signerOrProvider);
  }

}

defineProperty._defineProperty(ISignatureMintERC721__factory, "abi", _abi$C);

const _abi$B = [{
  inputs: [{
    internalType: "address",
    name: "_proxy",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_type",
    type: "uint256"
  }],
  name: "getFeeInfo",
  outputs: [{
    internalType: "address",
    name: "recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "bps",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
class ITWFee__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$B);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$B, signerOrProvider);
  }

}

defineProperty._defineProperty(ITWFee__factory, "abi", _abi$B);

const _abi$A = [{
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IThirdwebContract__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$A);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$A, signerOrProvider);
  }

}

defineProperty._defineProperty(IThirdwebContract__factory, "abi", _abi$A);

const _abi$z = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "uri",
    type: "string"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityMinted",
    type: "uint256"
  }],
  name: "TokensMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ITokenERC1155.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "string",
    name: "uri",
    type: "string"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC1155.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC1155.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class ITokenERC1155__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$z);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$z, signerOrProvider);
  }

}

defineProperty._defineProperty(ITokenERC1155__factory, "abi", _abi$z);

const _abi$y = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityMinted",
    type: "uint256"
  }],
  name: "TokensMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ITokenERC20.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC20.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC20.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class ITokenERC20__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$y);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$y, signerOrProvider);
  }

}

defineProperty._defineProperty(ITokenERC20__factory, "abi", _abi$y);

const _abi$x = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  name: "TokensMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ITokenERC721.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "balance",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  name: "mintTo",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC721.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "_approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC721.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class ITokenERC721__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$x);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$x, signerOrProvider);
  }

}

defineProperty._defineProperty(ITokenERC721__factory, "abi", _abi$x);

const _abi$w = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "fromDelegate",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "toDelegate",
    type: "address"
  }],
  name: "DelegateChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegate",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "previousBalance",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newBalance",
    type: "uint256"
  }],
  name: "DelegateVotesChanged",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }],
  name: "delegate",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }, {
    internalType: "uint256",
    name: "nonce",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "expiry",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "delegateBySig",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "delegates",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastTotalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "getVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
class IVotes__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$w);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$w, signerOrProvider);
  }

}

defineProperty._defineProperty(IVotes__factory, "abi", _abi$w);

const _abi$v = [{
  inputs: [],
  name: "deposit",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "withdraw",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class IWETH__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$v);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$v, signerOrProvider);
  }

}

defineProperty._defineProperty(IWETH__factory, "abi", _abi$v);

const _abi$u = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [{
    internalType: "uint256",
    name: "batchId",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
class LazyMint__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$u);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$u, signerOrProvider);
  }

}

defineProperty._defineProperty(LazyMint__factory, "abi", _abi$u);

const _abi$t = [{
  inputs: [{
    internalType: "address",
    name: "_nativeTokenWrapper",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "timeBuffer",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "bidBufferBps",
    type: "uint256"
  }],
  name: "AuctionBuffersUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "closer",
    type: "address"
  }, {
    indexed: true,
    internalType: "bool",
    name: "cancelled",
    type: "bool"
  }, {
    indexed: false,
    internalType: "address",
    name: "auctionCreator",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "winningBidder",
    type: "address"
  }],
  name: "AuctionClosed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "assetContract",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "lister",
    type: "address"
  }, {
    components: [{
      internalType: "uint256",
      name: "listingId",
      type: "uint256"
    }, {
      internalType: "address",
      name: "tokenOwner",
      type: "address"
    }, {
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "startTime",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "endTime",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint256",
      name: "reservePricePerToken",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "buyoutPricePerToken",
      type: "uint256"
    }, {
      internalType: "enum IMarketplace.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "enum IMarketplace.ListingType",
      name: "listingType",
      type: "uint8"
    }],
    indexed: false,
    internalType: "struct IMarketplace.Listing",
    name: "listing",
    type: "tuple"
  }],
  name: "ListingAdded",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "listingCreator",
    type: "address"
  }],
  name: "ListingRemoved",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "listingCreator",
    type: "address"
  }],
  name: "ListingUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "offeror",
    type: "address"
  }, {
    indexed: true,
    internalType: "enum IMarketplace.ListingType",
    name: "listingType",
    type: "uint8"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityWanted",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "totalOfferAmount",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "address",
    name: "currency",
    type: "address"
  }],
  name: "NewOffer",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "assetContract",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "lister",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "buyer",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityBought",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "totalPricePaid",
    type: "uint256"
  }],
  name: "NewSale",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "MAX_BPS",
  outputs: [{
    internalType: "uint64",
    name: "",
    type: "uint64"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_offeror",
    type: "address"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }],
  name: "acceptOffer",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "bidBufferBps",
  outputs: [{
    internalType: "uint64",
    name: "",
    type: "uint64"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_buyFor",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantityToBuy",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_totalPrice",
    type: "uint256"
  }],
  name: "buy",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }],
  name: "cancelDirectListing",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_closeFor",
    type: "address"
  }],
  name: "closeAuction",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "startTime",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "secondsUntilEndTime",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityToList",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currencyToAccept",
      type: "address"
    }, {
      internalType: "uint256",
      name: "reservePricePerToken",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "buyoutPricePerToken",
      type: "uint256"
    }, {
      internalType: "enum IMarketplace.ListingType",
      name: "listingType",
      type: "uint8"
    }],
    internalType: "struct IMarketplace.ListingParameters",
    name: "_params",
    type: "tuple"
  }],
  name: "createListing",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "listings",
  outputs: [{
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "tokenOwner",
    type: "address"
  }, {
    internalType: "address",
    name: "assetContract",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "startTime",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "endTime",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "reservePricePerToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "buyoutPricePerToken",
    type: "uint256"
  }, {
    internalType: "enum IMarketplace.TokenType",
    name: "tokenType",
    type: "uint8"
  }, {
    internalType: "enum IMarketplace.ListingType",
    name: "listingType",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantityWanted",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_expirationTimestamp",
    type: "uint256"
  }],
  name: "offer",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "offers",
  outputs: [{
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "offeror",
    type: "address"
  }, {
    internalType: "uint256",
    name: "quantityWanted",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "expirationTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155BatchReceived",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC721Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_timeBuffer",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_bidBufferBps",
    type: "uint256"
  }],
  name: "setAuctionBuffers",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "timeBuffer",
  outputs: [{
    internalType: "uint64",
    name: "",
    type: "uint64"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalListings",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_listingId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_quantityToList",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_reservePricePerToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_buyoutPricePerToken",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currencyToAccept",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_startTime",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_secondsUntilEndTime",
    type: "uint256"
  }],
  name: "updateListing",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "winningBid",
  outputs: [{
    internalType: "uint256",
    name: "listingId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "offeror",
    type: "address"
  }, {
    internalType: "uint256",
    name: "quantityWanted",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "expirationTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  stateMutability: "payable",
  type: "receive"
}];
const _bytecode$h = "";

const isSuperArgs$h = xs => xs.length > 1;

class Marketplace__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$h(args)) {
      super(...args);
    } else {
      super(_abi$t, _bytecode$h, args[0]);
    }
  }

  deploy(_nativeTokenWrapper, overrides) {
    return super.deploy(_nativeTokenWrapper, overrides || {});
  }

  getDeployTransaction(_nativeTokenWrapper, overrides) {
    return super.getDeployTransaction(_nativeTokenWrapper, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$t);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$t, signerOrProvider);
  }

}

defineProperty._defineProperty(Marketplace__factory, "bytecode", _bytecode$h);

defineProperty._defineProperty(Marketplace__factory, "abi", _abi$t);

const _abi$s = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "from",
      type: "address"
    }, {
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "uint256",
      name: "value",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "gas",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "nonce",
      type: "uint256"
    }, {
      internalType: "bytes",
      name: "data",
      type: "bytes"
    }],
    internalType: "struct MinimalForwarderEOAOnly.ForwardRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "execute",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }],
  name: "getNonce",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "from",
      type: "address"
    }, {
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "uint256",
      name: "value",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "gas",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "nonce",
      type: "uint256"
    }, {
      internalType: "bytes",
      name: "data",
      type: "bytes"
    }],
    internalType: "struct MinimalForwarderEOAOnly.ForwardRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$g = "0x61014060405234801561001157600080fd5b50604080518082018252600f81526e23a9a73b19102337b93bb0b93232b960891b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100fa8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061010f92505050565b60805160a05160c05160e0516101005161012051610ba261015e60003960006105300152600061057f0152600061055a015260006104b3015260006104dd015260006105070152610ba26000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f61005436600461093a565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b61009561009036600461096a565b6100d3565b604051610079929190610a39565b3480156100af57600080fd5b506100c36100be36600461096a565b6102b0565b6040519015158152602001610079565b600060603332146101155760405162461bcd60e51b81526020600482015260076024820152666e6f7420454f4160c81b60448201526064015b60405180910390fd5b6101208585856102b0565b6101925760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f657360448201527f206e6f74206d6174636820726571756573740000000000000000000000000000606482015260840161010c565b6101a160808601356001610a75565b6000806101b1602089018961093a565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101eb919061093a565b6001600160a01b03166060880135604089013561020b60a08b018b610a9b565b61021860208d018d61093a565b60405160200161022a93929190610ae2565b60408051601f198184030181529082905261024491610b08565b600060405180830381858888f193505050503d8060008114610282576040519150601f19603f3d011682016040523d82523d6000602084013e610287565b606091505b50909250905061029c603f6060890135610b24565b5a116102a457fe5b90969095509350505050565b6000806103c384848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103bd92507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e489150610320905060208a018a61093a565b61033060408b0160208c0161093a565b60408b013560608c013560808d013561034c60a08f018f610a9b565b60405161035a929190610b46565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e0810191909152610100016040516020818303038152906040528051906020012061042e565b90610482565b905060808501356000806103da602089018961093a565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156104255750610410602086018661093a565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061047c61043b6104a6565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080600061049185856105cd565b9150915061049e8161063d565b509392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156104ff57507f000000000000000000000000000000000000000000000000000000000000000046145b1561052957507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156106045760208301516040840151606085015160001a6105f8878285856107fb565b94509450505050610636565b82516040141561062e57602083015160408401516106238683836108e8565b935093505050610636565b506000905060025b9250929050565b600081600481111561065157610651610b56565b141561065a5750565b600181600481111561066e5761066e610b56565b14156106bc5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161010c565b60028160048111156106d0576106d0610b56565b141561071e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161010c565b600381600481111561073257610732610b56565b141561078b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161010c565b600481600481111561079f5761079f610b56565b14156107f85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161010c565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561083257506000905060036108df565b8460ff16601b1415801561084a57508460ff16601c14155b1561085b57506000905060046108df565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156108af573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108d8576000600192509250506108df565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161091e60ff86901c601b610a75565b905061092c878288856107fb565b935093505050935093915050565b60006020828403121561094c57600080fd5b81356001600160a01b038116811461096357600080fd5b9392505050565b60008060006040848603121561097f57600080fd5b833567ffffffffffffffff8082111561099757600080fd5b9085019060c082880312156109ab57600080fd5b909350602085013590808211156109c157600080fd5b818601915086601f8301126109d557600080fd5b8135818111156109e457600080fd5b8760208285010111156109f657600080fd5b6020830194508093505050509250925092565b60005b83811015610a24578181015183820152602001610a0c565b83811115610a33576000848401525b50505050565b82151581526040602082015260008251806040840152610a60816060850160208701610a09565b601f01601f1916919091016060019392505050565b60008219821115610a9657634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e19843603018112610ab257600080fd5b83018035915067ffffffffffffffff821115610acd57600080fd5b60200191503681900382131561063657600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610b1a818460208701610a09565b9190910192915050565b600082610b4157634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220baaa6cd3d81a4b307d464d96adbbc3c3e48ab1ce8a6d7a152d4b45c49029a3e064736f6c634300080c0033";

const isSuperArgs$g = xs => xs.length > 1;

class MinimalForwarderEOAOnly__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$g(args)) {
      super(...args);
    } else {
      super(_abi$s, _bytecode$g, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$s);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$s, signerOrProvider);
  }

}

defineProperty._defineProperty(MinimalForwarderEOAOnly__factory, "bytecode", _bytecode$g);

defineProperty._defineProperty(MinimalForwarderEOAOnly__factory, "abi", _abi$s);

const _abi$r = [{
  inputs: [],
  name: "erc1155",
  outputs: [{
    internalType: "contract IERC1155",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "erc20",
  outputs: [{
    internalType: "contract IERC20",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "erc721",
  outputs: [{
    internalType: "contract IERC721",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$f = "0x608060405234801561001057600080fd5b5060c98061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c8063785e9e86146041578063bca6ce6414606f578063d56022d7146081575b600080fd5b6000546053906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6001546053906001600160a01b031681565b6002546053906001600160a01b03168156fea2646970667358221220fb161f0e6c038cb3eca27e04f7c16758c6a0fcbfa43b486a52ae0fd17c068d4f64736f6c634300080c0033";

const isSuperArgs$f = xs => xs.length > 1;

class Mock__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$f(args)) {
      super(...args);
    } else {
      super(_abi$r, _bytecode$f, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$r);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$r, signerOrProvider);
  }

}

defineProperty._defineProperty(Mock__factory, "bytecode", _bytecode$f);

defineProperty._defineProperty(Mock__factory, "abi", _abi$r);

const _abi$q = [{
  inputs: [{
    internalType: "bytes32",
    name: "_name",
    type: "bytes32"
  }, {
    internalType: "uint8",
    name: "_version",
    type: "uint8"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$e = "0x608060405234801561001057600080fd5b5060405161012838038061012883398101604081905261002f9161004d565b6000919091556001805460ff191660ff909216919091179055610083565b6000806040838503121561006057600080fd5b82519150602083015160ff8116811461007857600080fd5b809150509250929050565b6097806100916000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063a0a8e460146037578063cb2ef6f7146051575b600080fd5b60015460405160ff90911681526020015b60405180910390f35b600054604051908152602001604856fea2646970667358221220d7e9142cc8bb5589c84cab72aec278640ef5ed2cccfab7f663dc7e355de40a6964736f6c634300080c0033";

const isSuperArgs$e = xs => xs.length > 1;

class MockContract__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$e(args)) {
      super(...args);
    } else {
      super(_abi$q, _bytecode$e, args[0]);
    }
  }

  deploy(_name, _version, overrides) {
    return super.deploy(_name, _version, overrides || {});
  }

  getDeployTransaction(_name, _version, overrides) {
    return super.getDeployTransaction(_name, _version, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$q);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$q, signerOrProvider);
  }

}

defineProperty._defineProperty(MockContract__factory, "bytecode", _bytecode$e);

defineProperty._defineProperty(MockContract__factory, "abi", _abi$q);

const _abi$p = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IContractPublisher.CustomContractInstance",
    name: "publishedContract",
    type: "tuple"
  }],
  name: "ContractPublished",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    indexed: true,
    internalType: "string",
    name: "contractId",
    type: "string"
  }],
  name: "ContractUnpublished",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "bool",
    name: "isPaused",
    type: "bool"
  }],
  name: "Paused",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "PublisherProfileUpdated",
  type: "event"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "getAllPublishedContracts",
  outputs: [{
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    internalType: "struct IContractPublisher.CustomContractInstance[]",
    name: "published",
    type: "tuple[]"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "string",
    name: "",
    type: "string"
  }],
  name: "getPublishedContract",
  outputs: [{
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    internalType: "struct IContractPublisher.CustomContractInstance",
    name: "published",
    type: "tuple"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "string",
    name: "",
    type: "string"
  }],
  name: "getPublishedContractVersions",
  outputs: [{
    components: [{
      internalType: "string",
      name: "contractId",
      type: "string"
    }, {
      internalType: "uint256",
      name: "publishTimestamp",
      type: "uint256"
    }, {
      internalType: "string",
      name: "publishMetadataUri",
      type: "string"
    }, {
      internalType: "bytes32",
      name: "bytecodeHash",
      type: "bytes32"
    }, {
      internalType: "address",
      name: "implementation",
      type: "address"
    }],
    internalType: "struct IContractPublisher.CustomContractInstance[]",
    name: "published",
    type: "tuple[]"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  name: "getPublishedUriFromCompilerUri",
  outputs: [{
    internalType: "string[]",
    name: "publishedMetadataUris",
    type: "string[]"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  name: "getPublisherProfileUri",
  outputs: [{
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "contractId",
    type: "string"
  }, {
    internalType: "string",
    name: "publishMetadataUri",
    type: "string"
  }, {
    internalType: "string",
    name: "compilerMetadataUri",
    type: "string"
  }, {
    internalType: "bytes32",
    name: "bytecodeHash",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "implementation",
    type: "address"
  }],
  name: "publishContract",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "string",
    name: "",
    type: "string"
  }],
  name: "setPublisherProfileUri",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "publisher",
    type: "address"
  }, {
    internalType: "string",
    name: "contractId",
    type: "string"
  }],
  name: "unpublishContract",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$d = "0x608060405234801561001057600080fd5b50610742806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806380251dac1161005b57806380251dac14610159578063819e992f14610179578063af8db69014610199578063d50299e6146101ac57600080fd5b806306eb56cc1461008d5780634f781675146100a15780636e578e541461008d5780637ec047fa146100d8575b600080fd5b61009f61009b36600461040b565b5050565b005b6100c26100af366004610459565b5060408051602081019091526000815290565b6040516100cf91906104c8565b60405180910390f35b61014c6100e636600461040b565b50506040805160a080820183526060808352600060208085018290528486018390528285018290526080948501829052855160c0810187529384018281528452838101829052855190810186528181529483019490945281018390529081019190915290565b6040516100cf919061053d565b61016c61016736600461040b565b6101c2565b6040516100cf9190610550565b61018c6101873660046105b2565b61021e565b6040516100cf91906105ef565b61016c6101a7366004610459565b610252565b61009f6101ba366004610644565b505050505050565b60408051600080825260208201909252606091610216565b6040805160a081018252606080825260006020808401829052938301829052908201819052608082015282526000199092019101816101da5790505b509392505050565b6040805160008082526020820190925260609161024b565b60608152602001906001900390816102365790505b5092915050565b60408051600180825281830190925260609160009190816020015b6040805160a0810182526060808252600060208084018290529383018290529082018190526080820152825260001990920191018161026d5790505090506040518060a001604052806040518060400160405280600c81526020016b135bd8dad0dbdb9d1c9858dd60a21b8152508152602001607b81526020016040518060400160405280600b81526020016a697066733a2f2f6d6f636b60a81b8152508152602001600160001b815260200160006001600160a01b03168152508160008151811061033b5761033b6106f6565b602090810291909101015292915050565b80356001600160a01b038116811461036357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261038f57600080fd5b813567ffffffffffffffff808211156103aa576103aa610368565b604051601f8301601f19908116603f011681019082821181831017156103d2576103d2610368565b816040528381528660208588010111156103eb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561041e57600080fd5b6104278361034c565b9150602083013567ffffffffffffffff81111561044357600080fd5b61044f8582860161037e565b9150509250929050565b60006020828403121561046b57600080fd5b6104748261034c565b9392505050565b6000815180845260005b818110156104a157602081850181015186830182015201610485565b818111156104b3576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610474602083018461047b565b6000815160a084526104f060a085018261047b565b90506020830151602085015260408301518482036040860152610513828261047b565b915050606083015160608501526001600160a01b0360808401511660808501528091505092915050565b60208152600061047460208301846104db565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156105a557603f198886030184526105938583516104db565b94509285019290850190600101610577565b5092979650505050505050565b6000602082840312156105c457600080fd5b813567ffffffffffffffff8111156105db57600080fd5b6105e78482850161037e565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156105a557603f1988860301845261063285835161047b565b94509285019290850190600101610616565b60008060008060008060c0878903121561065d57600080fd5b6106668761034c565b9550602087013567ffffffffffffffff8082111561068357600080fd5b61068f8a838b0161037e565b965060408901359150808211156106a557600080fd5b6106b18a838b0161037e565b955060608901359150808211156106c757600080fd5b506106d489828a0161037e565b935050608087013591506106ea60a0880161034c565b90509295509295509295565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220c8fdbd5a829e66c91dea1e6c53aba3d404a3b130d2e71827e5bc72c4bd6c736064736f6c634300080c0033";

const isSuperArgs$d = xs => xs.length > 1;

class MockContractPublisher__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$d(args)) {
      super(...args);
    } else {
      super(_abi$p, _bytecode$d, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$p);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$p, signerOrProvider);
  }

}

defineProperty._defineProperty(MockContractPublisher__factory, "bytecode", _bytecode$d);

defineProperty._defineProperty(MockContractPublisher__factory, "abi", _abi$p);

const _abi$o = [{
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$c = "0x608060405234801561001057600080fd5b50610511806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ac9650d814610030575b600080fd5b61004361003e3660046102af565b610059565b6040516100509190610380565b60405180910390f35b60608167ffffffffffffffff811115610074576100746103e2565b6040519080825280602002602001820160405280156100a757816020015b60608152602001906001900390816100925790505b50905060005b8281101561014757610117308585848181106100cb576100cb6103f8565b90506020028101906100dd919061040e565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061014e92505050565b828281518110610129576101296103f8565b6020026020010181905250808061013f9061045c565b9150506100ad565b5092915050565b606061017383836040518060600160405280602781526020016104b56027913961017a565b9392505050565b606073ffffffffffffffffffffffffffffffffffffffff84163b6101f45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161021c9190610485565b600060405180830381855af49150503d8060008114610257576040519150601f19603f3d011682016040523d82523d6000602084013e61025c565b606091505b509150915061026c828286610276565b9695505050505050565b60608315610285575081610173565b8251156102955782518084602001fd5b8160405162461bcd60e51b81526004016101eb91906104a1565b600080602083850312156102c257600080fd5b823567ffffffffffffffff808211156102da57600080fd5b818501915085601f8301126102ee57600080fd5b8135818111156102fd57600080fd5b8660208260051b850101111561031257600080fd5b60209290920196919550909350505050565b60005b8381101561033f578181015183820152602001610327565b8381111561034e576000848401525b50505050565b6000815180845261036c816020860160208601610324565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156103d557603f198886030184526103c3858351610354565b945092850192908501906001016103a7565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261042557600080fd5b83018035915067ffffffffffffffff82111561044057600080fd5b60200191503681900382131561045557600080fd5b9250929050565b600060001982141561047e57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008251610497818460208701610324565b9190910192915050565b602081526000610173602083018461035456fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c86293a218cf990fe88f29b178408639b3109f01ae15259e183cf059e5ec30f464736f6c634300080c0033";

const isSuperArgs$c = xs => xs.length > 1;

class Multicall__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$c(args)) {
      super(...args);
    } else {
      super(_abi$o, _bytecode$c, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$o);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$o, signerOrProvider);
  }

}

defineProperty._defineProperty(Multicall__factory, "bytecode", _bytecode$c);

defineProperty._defineProperty(Multicall__factory, "abi", _abi$o);

const _abi$n = [{
  inputs: [{
    internalType: "address",
    name: "_nativeTokenWrapper",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "unwrapper",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "recipientOfWrappedContents",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdOfWrappedToken",
    type: "uint256"
  }],
  name: "TokensUnwrapped",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "wrapper",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "recipientOfWrappedToken",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdOfWrappedToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    indexed: false,
    internalType: "struct ITokenBundle.Token[]",
    name: "wrappedContents",
    type: "tuple[]"
  }],
  name: "TokensWrapped",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "member",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }],
  name: "getTokenCountOfBundle",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getTokenOfBundle",
  outputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }],
  name: "getUriOfBundle",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getWrappedContents",
  outputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token[]",
    name: "contents",
    type: "tuple[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRoleWithSwitch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155BatchReceived",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC721Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }],
  name: "unwrap",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token[]",
    name: "_tokensToWrap",
    type: "tuple[]"
  }, {
    internalType: "string",
    name: "_uriForWrappedToken",
    type: "string"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }],
  name: "wrap",
  outputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  stateMutability: "payable",
  type: "receive"
}];
const _bytecode$b = "0x60a06040523480156200001157600080fd5b5060405162004fde38038062004fde83398101604081905262000034916200013b565b6001600160a01b038116608052600054610100900460ff166200005e5760005460ff161562000068565b620000686200010e565b620000d05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000f3576000805461ffff19166101011790555b801562000106576000805461ff00191690555b50506200016d565b600062000126306200012c60201b62001da11760201c565b15905090565b6001600160a01b03163b151590565b6000602082840312156200014e57600080fd5b81516001600160a01b03811681146200016657600080fd5b9392505050565b608051614e4e62000190600039600081816102f1015261379c0152614e4e6000f3fe6080604052600436106102e15760003560e01c80638da5cb5b1161017f578063b24f2d39116100e1578063d0d2fe251161008a578063e8a3d48511610064578063e8a3d485146109c5578063e985e9c5146109da578063f23a6e6114610a2457600080fd5b8063d0d2fe251461094b578063d547741f14610978578063d5576d261461099857600080fd5b8063c87b56dd116100bb578063c87b56dd146108ec578063ca15c8731461090c578063cb2ef6f71461092c57600080fd5b8063b24f2d3914610875578063b88d4fde146108a0578063bc197c81146108c057600080fd5b80639bcf7a1511610143578063a22cb4651161011d578063a22cb46514610808578063a32fa5b314610828578063ac9650d81461084857600080fd5b80639bcf7a15146107b7578063a0a8e460146107d7578063a217fddf146107f357600080fd5b80638da5cb5b146106fe5780639010d07c1461071c57806391d148541461073c578063938e3d7b1461078257806395d89b41146107a257600080fd5b80632f2ff15d11610243578063600dd5ea116101ec57806370a08231116101c657806370a082311461069e578063754b8fe7146106be5780637647691d146106de57600080fd5b8063600dd5ea1461063e57806361195e941461065e5780636352211e1461067e57600080fd5b806342842e0e1161021d57806342842e0e146105a35780634cc157df146105c3578063572b6c051461060557600080fd5b80632f2ff15d1461054c57806336568abe1461056c5780633b1475a71461058c57600080fd5b8063150b7a02116102a5578063248a9ca31161027f578063248a9ca3146104bf57806329e471dd146104fa5780632a55205a1461050d57600080fd5b8063150b7a02146104395780631da799c91461047257806323b872dd1461049f57600080fd5b806301ffc9a71461036a57806306fdde031461039f578063081812fc146103c1578063095ea7b3146103f957806313af40351461041957600080fd5b3661036557336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103635760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206e6f74206e617469766520746f6b656e20777261707065722e60448201526064015b60405180910390fd5b005b600080fd5b34801561037657600080fd5b5061038a610385366004613fcf565b610a50565b60405190151581526020015b60405180910390f35b3480156103ab57600080fd5b506103b4610ab2565b6040516103969190614044565b3480156103cd57600080fd5b506103e16103dc366004614057565b610b45565b6040516001600160a01b039091168152602001610396565b34801561040557600080fd5b50610363610414366004614095565b610bdc565b34801561042557600080fd5b506103636104343660046140c1565b610d04565b34801561044557600080fd5b50610459610454366004614195565b610d55565b6040516001600160e01b03199091168152602001610396565b34801561047e57600080fd5b5061049261048d366004614201565b610d66565b6040516103969190614290565b3480156104ab57600080fd5b506103636104ba36600461429e565b610e16565b3480156104cb57600080fd5b506104ec6104da366004614057565b60009081526007602052604090205490565b604051908152602001610396565b6104ec610508366004614328565b610e98565b34801561051957600080fd5b5061052d610528366004614201565b6110ba565b604080516001600160a01b039093168352602083019190915201610396565b34801561055857600080fd5b506103636105673660046143d7565b6110f7565b34801561057857600080fd5b506103636105873660046143d7565b611191565b34801561059857600080fd5b506104ec6101355481565b3480156105af57600080fd5b506103636105be36600461429e565b6111f3565b3480156105cf57600080fd5b506105e36105de366004614057565b61120e565b604080516001600160a01b03909316835261ffff909116602083015201610396565b34801561061157600080fd5b5061038a6106203660046140c1565b6001600160a01b03166000908152606d602052604090205460ff1690565b34801561064a57600080fd5b50610363610659366004614095565b611279565b34801561066a57600080fd5b506103b4610679366004614057565b6112c8565b34801561068a57600080fd5b506103e1610699366004614057565b61136d565b3480156106aa57600080fd5b506104ec6106b93660046140c1565b6113e5565b3480156106ca57600080fd5b506103636106d93660046144a5565b61146d565b3480156106ea57600080fd5b506103636106f93660046143d7565b611644565b34801561070a57600080fd5b506005546001600160a01b03166103e1565b34801561072857600080fd5b506103e1610737366004614201565b6117e9565b34801561074857600080fd5b5061038a6107573660046143d7565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561078e57600080fd5b5061036361079d36600461457d565b6118ea565b3480156107ae57600080fd5b506103b4611938565b3480156107c357600080fd5b506103636107d23660046145b2565b611948565b3480156107e357600080fd5b5060405160018152602001610396565b3480156107ff57600080fd5b506104ec600081565b34801561081457600080fd5b506103636108233660046145e7565b611998565b34801561083457600080fd5b5061038a6108433660046143d7565b6119aa565b34801561085457600080fd5b50610868610863366004614615565b611a00565b604051610396919061468a565b34801561088157600080fd5b506003546001600160a01b03811690600160a01b900461ffff166105e3565b3480156108ac57600080fd5b506103636108bb366004614195565b611af5565b3480156108cc57600080fd5b506104596108db366004614752565b63bc197c8160e01b95945050505050565b3480156108f857600080fd5b506103b4610907366004614057565b611b7e565b34801561091857600080fd5b506104ec610927366004614057565b611b89565b34801561093857600080fd5b506804d756c7469777261760bc1b6104ec565b34801561095757600080fd5b506104ec610966366004614057565b60009081526002602052604090205490565b34801561098457600080fd5b506103636109933660046143d7565b611c24565b3480156109a457600080fd5b506109b86109b3366004614057565b611c3d565b6040516103969190614800565b3480156109d157600080fd5b506103b4611d13565b3480156109e657600080fd5b5061038a6109f536600461484e565b6001600160a01b0391821660009081526101086020908152604080832093909416825291909152205460ff1690565b348015610a3057600080fd5b50610459610a3f36600461487c565b63f23a6e6160e01b95945050505050565b6000610a5b82611db0565b80610a7657506001600160e01b031982166380ac58cd60e01b145b80610a9157506001600160e01b03198216630271189760e51b145b80610aac57506001600160e01b0319821663152a902d60e11b145b92915050565b60606101038054610ac2906148e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610aee906148e5565b8015610b3b5780601f10610b1057610100808354040283529160200191610b3b565b820191906000526020600020905b815481529060010190602001808311610b1e57829003601f168201915b5050505050905090565b600081815261010560205260408120546001600160a01b0316610bbf5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161035a565b50600090815261010760205260409020546001600160a01b031690565b6000610be78261136d565b9050806001600160a01b0316836001600160a01b03161415610c555760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161035a565b806001600160a01b0316610c67611e00565b6001600160a01b03161480610c835750610c83816109f5611e00565b610cf55760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161035a565b610cff8383611e0f565b505050565b610d0c611e7e565b610d495760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161035a565b610d5281611e8c565b50565b630a85bd0160e11b5b949350505050565b610d92604080516080810190915260008082526020820190815260200160008152602001600081525090565b6000838152600260208181526040808420868552830182529283902083516080810190945280546001600160a01b0381168552909291840191600160a01b90910460ff1690811115610de657610de6614223565b6002811115610df757610df7614223565b8152600182015460208201526002909101546040909101529392505050565b610e27610e21611e00565b82611ede565b610e8d5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606482015260840161035a565b610cff838383611fd3565b600060026009541415610eed5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161035a565b60026009557f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610f2481610f1f611e00565b61217d565b600080527faca7f1b263d353d89f9f08643076a3fadf7ba4bc8bdd03fd6d65f8ce261e1d706020527facd2d1f79ea57903f9de3a9ec49cdb6f9628bcc83e4432dd97992cfb958fcc625460ff16610fe55760005b86811015610fe357610fd17f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae6898984818110610fb657610fb661491a565b610fcc92602060809092020190810191506140c1565b6121e1565b610fdc600182614946565b9050610f78565b505b610135805492506001906000610ffb8386614946565b9091555061104c905061100c611e00565b888888888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525089925061221f915050565b6110568383612298565b81836001600160a01b0316611069611e00565b6001600160a01b03167fd37c0c0e6fd9c0d30d0b9fba1aa4f1123dedc7e681bb5b2c2d96298650032d4c8a8a6040516110a392919061496b565b60405180910390a450600160095595945050505050565b6000806000806110c98661120e565b90945084925061ffff1690506127106110e282876149ea565b6110ec9190614a09565b925050509250929050565b60008281526007602052604090205461111090336121e1565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff16156111835760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c64657273000000604482015260640161035a565b61118d82826122b2565b5050565b336001600160a01b038216146111e95760405162461bcd60e51b815260206004820152601a60248201527f43616e206f6e6c792072656e6f756e636520666f722073656c66000000000000604482015260640161035a565b61118d82826122c6565b610cff83838360405180602001604052806000815250611af5565b6000818152600460209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115611255578051602082015161126f565b6003546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b611281611e7e565b6112be5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161035a565b61118d828261231d565b60008181526002602052604090206001018054606091906112e8906148e5565b80601f0160208091040260200160405190810160405280929190818152602001828054611314906148e5565b80156113615780601f1061133657610100808354040283529160200191611361565b820191906000526020600020905b81548152906001019060200180831161134457829003601f168201915b50505050509050919050565b600081815261010560205260408120546001600160a01b031680610aac5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161035a565b60006001600160a01b0382166114505760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161035a565b506001600160a01b03166000908152610106602052604090205490565b600054610100900460ff166114885760005460ff161561148c565b303b155b6114ef5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161035a565b600054610100900460ff16158015611511576000805461ffff19166101011790555b6115196123d2565b61152284612403565b61152c878761243b565b611536838361231d565b61153f88611e8c565b6115488561246c565b6115536000896122b2565b61157d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6896122b2565b6115a77f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c896122b2565b6115d27f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c60006122b2565b6115fd7fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f054360006122b2565b6116287f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae660006122b2565b801561163a576000805461ff00191690555b5050505050505050565b600260095414156116975760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161035a565b60026009557fba050530e9007d7ef162f72906a6658584aefb35f0e9fefd3c413cec269f05436116c981610f1f611e00565b61013554831061171b5760405162461bcd60e51b815260206004820152601060248201527f77726170706564204e465420444e452e00000000000000000000000000000000604482015260640161035a565b61172c611726611e00565b84611ede565b6117845760405162461bcd60e51b815260206004820152602360248201527f63616c6c6572206e6f7420617070726f76656420666f7220756e77726170706960448201526237339760e91b606482015260840161035a565b61178d8361254e565b61179782846125f7565b82826001600160a01b03166117aa611e00565b6001600160a01b03167fe9a1b206a63887b7a73ef37983c4105047ae75c9ac0920a1a256eea52f264a7360405160405180910390a45050600160095550565b60008281526008602052604081205481805b828110156118e15760008681526008602090815260408083208484526001019091529020546001600160a01b03161561187857848214156118665760008681526008602090815260408083209383526001909301905220546001600160a01b03169250610aac915050565b611871600183614946565b91506118cf565b600086815260066020908152604080832083805290915290205460ff1680156118bc5750600086815260086020908152604080832083805260020190915290205481145b156118cf576118cc600183614946565b91505b6118da600182614946565b90506117fb565b50505092915050565b6118f2611e7e565b61192f5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161035a565b610d528161246c565b60606101048054610ac2906148e5565b611950611e7e565b61198d5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161035a565b610cff8383836126d9565b61118d6119a3611e00565b83836127a3565b600082815260066020908152604080832083805290915281205460ff166119f7575060008281526006602090815260408083206001600160a01b038516845290915290205460ff16610aac565b50600192915050565b60608167ffffffffffffffff811115611a1b57611a1b6140de565b604051908082528060200260200182016040528015611a4e57816020015b6060815260200190600190039081611a395790505b50905060005b82811015611aee57611abe30858584818110611a7257611a7261491a565b9050602002810190611a849190614a2b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061286b92505050565b828281518110611ad057611ad061491a565b60200260200101819052508080611ae690614a72565b915050611a54565b5092915050565b611b06611b00611e00565b83611ede565b611b6c5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606482015260840161035a565b611b788484848461295f565b50505050565b6060610aac826112c8565b600081815260086020526040812054815b81811015611bed5760008481526008602090815260408083208484526001019091529020546001600160a01b031615611bdb57611bd8600184614946565b92505b611be6600182614946565b9050611b9a565b50600083815260066020908152604080832083805290915290205460ff1615611c1e57611c1b600183614946565b91505b50919050565b6000828152600760205260409020546111e990336121e1565b6000818152600260205260409020546060908067ffffffffffffffff811115611c6857611c686140de565b604051908082528060200260200182016040528015611cc557816020015b611cb2604080516080810190915260008082526020820190815260200160008152602001600081525090565b815260200190600190039081611c865790505b50915060005b81811015611d0c57611cdd8482610d66565b838281518110611cef57611cef61491a565b6020908102919091010152611d05600182614946565b9050611ccb565b5050919050565b60018054611d20906148e5565b80601f0160208091040260200160405190810160405280929190818152602001828054611d4c906148e5565b8015611d995780601f10611d6e57610100808354040283529160200191611d99565b820191906000526020600020905b815481529060010190602001808311611d7c57829003601f168201915b505050505081565b6001600160a01b03163b151590565b60006001600160e01b031982166380ac58cd60e01b1480611de157506001600160e01b03198216635b5e139f60e01b145b80610aac57506301ffc9a760e01b6001600160e01b0319831614610aac565b6000611e0a6129dd565b905090565b60008181526101076020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611e458261136d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611e0a81610757611e00565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b600081815261010560205260408120546001600160a01b0316611f585760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161035a565b6000611f638361136d565b9050806001600160a01b0316846001600160a01b03161480611f9e5750836001600160a01b0316611f9384610b45565b6001600160a01b0316145b80610d5e57506001600160a01b038082166000908152610108602090815260408083209388168352929052205460ff16610d5e565b826001600160a01b0316611fe68261136d565b6001600160a01b03161461204a5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161035a565b6001600160a01b0382166120ac5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161035a565b6120b7838383612a0a565b6120c2600082611e0f565b6001600160a01b0383166000908152610106602052604081208054600192906120ec908490614a8d565b90915550506001600160a01b03821660009081526101066020526040812080546001929061211b908490614946565b90915550506000818152610105602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61218782826119aa565b61118d5761219f816001600160a01b03166014612b3f565b6121aa836020612b3f565b6040516020016121bb929190614aa4565b60408051601f198184030181529082905262461bcd60e51b825261035a91600401614044565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff1661118d5761219f816001600160a01b03166014612b3f565b61222a848483612cef565b6122348282612e17565b61229185308686808060200260200160405190810160405280939291908181526020016000905b828210156122875761227860808302860136819003810190614b25565b8152602001906001019061225b565b5050505050612e3c565b5050505050565b61118d828260405180602001604052806000815250612f58565b6122bc8282612fd6565b61118d8282613031565b6122d0828261309e565b60008281526008602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b6127108111156123615760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161035a565b600380546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600054610100900460ff166123f95760405162461bcd60e51b815260040161035a90614b9a565b612401613100565b565b600054610100900460ff1661242a5760405162461bcd60e51b815260040161035a90614b9a565b61243261312e565b610d5281613155565b600054610100900460ff166124625760405162461bcd60e51b815260040161035a90614b9a565b61118d82826131e4565b60006001805461247b906148e5565b80601f01602080910402602001604051908101604052809291908181526020018280546124a7906148e5565b80156124f45780601f106124c9576101008083540402835291602001916124f4565b820191906000526020600020905b8154815290600101906020018083116124d757829003601f168201915b5050855193945061251093600193506020870192509050613f20565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612542929190614be5565b60405180910390a15050565b60006125598261136d565b905061256781600084612a0a565b612572600083611e0f565b6001600160a01b03811660009081526101066020526040812080546001929061259c908490614a8d565b90915550506000828152610105602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600081815260026020526040812054908167ffffffffffffffff811115612620576126206140de565b60405190808252806020026020018201604052801561267d57816020015b61266a604080516080810190915260008082526020820190815260200160008152602001600081525090565b81526020019060019003908161263e5790505b50905060005b828110156126c4576126958482610d66565b8282815181106126a7576126a761491a565b60209081029190910101526126bd600182614946565b9050612683565b506126ce83613234565b611b78308583612e3c565b61271081111561271d5760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b604482015260640161035a565b6040805180820182526001600160a01b038481168083526020808401868152600089815260048352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b816001600160a01b0316836001600160a01b031614156128055760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161035a565b6001600160a01b0383811660008181526101086020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101612796565b60606001600160a01b0383163b6128d35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161035a565b600080846001600160a01b0316846040516128ee9190614c0a565b600060405180830381855af49150503d8060008114612929576040519150601f19603f3d011682016040523d82523d6000602084013e61292e565b606091505b50915091506129568282604051806060016040528060278152602001614df2602791396132b5565b95945050505050565b61296a848484611fd3565b612976848484846132ee565b611b785760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161035a565b336000908152606d602052604081205460ff1615612a02575060131936013560601c90565b503390565b90565b600080527f90c276c67a19c282c7de40a6de63b141616931e213f9fd4b4a9325f19a097e466020527f228e6bd055da8b5bd44a542f2af2439f4656c6693ef9de5d469824e27eb37b745460ff16158015612a6c57506001600160a01b03831615155b8015612a8057506001600160a01b03821615155b15610cff576001600160a01b03831660009081527f90c276c67a19c282c7de40a6de63b141616931e213f9fd4b4a9325f19a097e46602052604090205460ff1680612b0257506001600160a01b03821660009081527f90c276c67a19c282c7de40a6de63b141616931e213f9fd4b4a9325f19a097e46602052604090205460ff165b610cff5760405162461bcd60e51b815260206004820152600e60248201526d215452414e534645525f524f4c4560901b604482015260640161035a565b60606000612b4e8360026149ea565b612b59906002614946565b67ffffffffffffffff811115612b7157612b716140de565b6040519080825280601f01601f191660200182016040528015612b9b576020820181803683370190505b509050600360fc1b81600081518110612bb657612bb661491a565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612be557612be561491a565b60200101906001600160f81b031916908160001a9053506000612c098460026149ea565b612c14906001614946565b90505b6001811115612c99577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110612c5557612c5561491a565b1a60f81b828281518110612c6b57612c6b61491a565b60200101906001600160f81b031916908160001a90535060049490941c93612c9281614c26565b9050612c17565b508315612ce85760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161035a565b9392505050565b8180612d275760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b604482015260640161035a565b60008281526002602052604090205415612d6f5760405162461bcd60e51b815260206004820152600960248201526869642065786973747360b81b604482015260640161035a565b60005b81811015612e0257612daa858583818110612d8f57612d8f61491a565b905060800201803603810190612da59190614b25565b61343b565b848482818110612dbc57612dbc61491a565b600086815260026020818152604080842088855290920190529020608090910292909201919050612ded8282614c3d565b50612dfb9050600182614946565b9050612d72565b50600091825260026020526040909120555050565b60008181526002602090815260409091208351610cff92600190920191850190613f20565b6000805b8251811015612f0e5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0316838281518110612e7957612e7961491a565b6020026020010151600001516001600160a01b0316148015612ea357506001600160a01b03841630145b15612ed857828181518110612eba57612eba61491a565b60200260200101516060015182612ed19190614946565b9150612efc565b612efc8585858481518110612eef57612eef61491a565b602002602001015161376d565b612f07600182614946565b9050612e40565b508015611b78576040805160808101825273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152600060208201819052918101919091526060810182905261229185858361376d565b612f6283836138d5565b612f6f60008484846132ee565b610cff5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161035a565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600860205260408120805491600191906130508385614946565b9091555050600092835260086020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6130a882826121e1565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff166131275760405162461bcd60e51b815260040161035a90614b9a565b6001600955565b600054610100900460ff166124015760405162461bcd60e51b815260040161035a90614b9a565b600054610100900460ff1661317c5760405162461bcd60e51b815260040161035a90614b9a565b60005b815181101561118d576001606d60008484815181106131a0576131a061491a565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806131dc81614a72565b91505061317f565b600054610100900460ff1661320b5760405162461bcd60e51b815260040161035a90614b9a565b815161321f90610103906020850190613f20565b508051610cff90610104906020840190613f20565b60005b6000828152600260205260409020548110156132a357600082815260026020818152604080842085855283019091528220805474ffffffffffffffffffffffffffffffffffffffffff19168155600180820184905591019190915561329c9082614946565b9050613237565b50600090815260026020526040812055565b606083156132c4575081612ce8565b8251156132d45782518084602001fd5b8160405162461bcd60e51b815260040161035a9190614044565b60006001600160a01b0384163b1561343357836001600160a01b031663150b7a02613317611e00565b8786866040518563ffffffff1660e01b81526004016133399493929190614cd6565b6020604051808303816000875af1925050508015613374575060408051601f3d908101601f1916820190925261337191810190614d12565b60015b613419573d8080156133a2576040519150601f19603f3d011682016040523d82523d6000602084013e6133a7565b606091505b5080516134115760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161035a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d5e565b506001610d5e565b60018160200151600281111561345357613453614223565b14156135375780516040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b03909116906301ffc9a7906024015b602060405180830381865afa9250505080156134c4575060408051601f3d908101601f191682019092526134c191810190614d2f565b60015b6134fd5760405162461bcd60e51b815260206004820152600a60248201526921546f6b656e5479706560b01b604482015260640161035a565b8061118d5760405162461bcd60e51b815260206004820152600a60248201526921546f6b656e5479706560b01b604482015260640161035a565b60028160200151600281111561354f5761354f614223565b141561358b5780516040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b03909116906301ffc9a79060240161348b565b6000816020015160028111156135a3576135a3614223565b1415610d525780516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610d525780516040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa925050508015613638575060408051601f3d908101601f1916820190925261363591810190614d2f565b60015b61366257613644614d4c565b806308c379a0141561118d5750613659614d67565b8061118d575050565b801561369d5760405162461bcd60e51b815260206004820152600a60248201526921546f6b656e5479706560b01b604482015260640161035a565b81516040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa925050508015613707575060408051601f3d908101601f1916820190925261370491810190614d2f565b60015b61373257613713614d4c565b806308c379a01415610cff5750613728614d67565b80610cff57505050565b8015610cff5760405162461bcd60e51b815260206004820152600a60248201526921546f6b656e5479706560b01b604482015260640161035a565b60008160200151600281111561378557613785614223565b14156137c057610cff8160000151848484606001517f0000000000000000000000000000000000000000000000000000000000000000613a26565b6001816020015160028111156137d8576137d8614223565b14156138565780516040808301519051632142170760e11b81526001600160a01b038681166004830152858116602483015260448201929092529116906342842e0e906064015b600060405180830381600087803b15801561383957600080fd5b505af115801561384d573d6000803e3d6000fd5b50505050505050565b60028160200151600281111561386e5761386e614223565b1415610cff57805160408083015160608401519151637921219560e11b81526001600160a01b03878116600483015286811660248301526044820192909252606481019290925260a06084830152600060a48301529091169063f242432a9060c40161381f565b6001600160a01b03821661392b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161035a565b600081815261010560205260409020546001600160a01b0316156139915760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161035a565b61399d60008383612a0a565b6001600160a01b0382166000908152610106602052604081208054600192906139c7908490614946565b90915550506000818152610105602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b81613a3057612291565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415613b94576001600160a01b038416301415613ad057604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015613aa857600080fd5b505af1158015613abc573d6000803e3d6000fd5b50505050613acb838383613ba0565b612291565b6001600160a01b038316301415613b8957348214613b305760405162461bcd60e51b815260206004820152601360248201527f6d73672e76616c756520213d20616d6f756e7400000000000000000000000000604482015260640161035a565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015613b6b57600080fd5b505af1158015613b7f573d6000803e3d6000fd5b5050505050612291565b613acb838383613ba0565b61229185858585613c65565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114613bed576040519150601f19603f3d011682016040523d82523d6000602084013e613bf2565b606091505b5050905080611b7857816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015613c3657600080fd5b505af1158015613c4a573d6000803e3d6000fd5b50611b78935050506001600160a01b03841690508585613cc3565b816001600160a01b0316836001600160a01b03161415613c8457611b78565b6001600160a01b038316301415613cae57613ca96001600160a01b0385168383613cc3565b611b78565b611b786001600160a01b038516848484613d3b565b6040516001600160a01b038316602482015260448101829052610cff90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152613d73565b6040516001600160a01b0380851660248301528316604482015260648101829052611b789085906323b872dd60e01b90608401613cef565b6000613dc8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613e459092919063ffffffff16565b805190915015610cff5780806020019051810190613de69190614d2f565b610cff5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161035a565b6060610d5e8484600085856001600160a01b0385163b613ea75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161035a565b600080866001600160a01b03168587604051613ec39190614c0a565b60006040518083038185875af1925050503d8060008114613f00576040519150601f19603f3d011682016040523d82523d6000602084013e613f05565b606091505b5091509150613f158282866132b5565b979650505050505050565b828054613f2c906148e5565b90600052602060002090601f016020900481019282613f4e5760008555613f94565b82601f10613f6757805160ff1916838001178555613f94565b82800160010185558215613f94579182015b82811115613f94578251825591602001919060010190613f79565b50613fa0929150613fa4565b5090565b5b80821115613fa05760008155600101613fa5565b6001600160e01b031981168114610d5257600080fd5b600060208284031215613fe157600080fd5b8135612ce881613fb9565b60005b83811015614007578181015183820152602001613fef565b83811115611b785750506000910152565b60008151808452614030816020860160208601613fec565b601f01601f19169290920160200192915050565b602081526000612ce86020830184614018565b60006020828403121561406957600080fd5b5035919050565b6001600160a01b0381168114610d5257600080fd5b803561409081614070565b919050565b600080604083850312156140a857600080fd5b82356140b381614070565b946020939093013593505050565b6000602082840312156140d357600080fd5b8135612ce881614070565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561411a5761411a6140de565b6040525050565b600082601f83011261413257600080fd5b813567ffffffffffffffff81111561414c5761414c6140de565b604051614163601f8301601f1916602001826140f4565b81815284602083860101111561417857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156141ab57600080fd5b84356141b681614070565b935060208501356141c681614070565b925060408501359150606085013567ffffffffffffffff8111156141e957600080fd5b6141f587828801614121565b91505092959194509250565b6000806040838503121561421457600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b6003811061425757634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038151168252602081015161427a6020840182614239565b5060408181015190830152606090810151910152565b60808101610aac828461425b565b6000806000606084860312156142b357600080fd5b83356142be81614070565b925060208401356142ce81614070565b929592945050506040919091013590565b60008083601f8401126142f157600080fd5b50813567ffffffffffffffff81111561430957600080fd5b60208301915083602082850101111561432157600080fd5b9250929050565b60008060008060006060868803121561434057600080fd5b853567ffffffffffffffff8082111561435857600080fd5b818801915088601f83011261436c57600080fd5b81358181111561437b57600080fd5b8960208260071b850101111561439057600080fd5b6020928301975095509087013590808211156143ab57600080fd5b506143b8888289016142df565b90945092506143cb905060408701614085565b90509295509295909350565b600080604083850312156143ea57600080fd5b8235915060208301356143fc81614070565b809150509250929050565b600067ffffffffffffffff821115614421576144216140de565b5060051b60200190565b600082601f83011261443c57600080fd5b8135602061444982614407565b60405161445682826140f4565b83815260059390931b850182019282810191508684111561447657600080fd5b8286015b8481101561449a57803561448d81614070565b835291830191830161447a565b509695505050505050565b600080600080600080600060e0888a0312156144c057600080fd5b6144c988614085565b9650602088013567ffffffffffffffff808211156144e657600080fd5b6144f28b838c01614121565b975060408a013591508082111561450857600080fd5b6145148b838c01614121565b965060608a013591508082111561452a57600080fd5b6145368b838c01614121565b955060808a013591508082111561454c57600080fd5b506145598a828b0161442b565b93505061456860a08901614085565b915060c0880135905092959891949750929550565b60006020828403121561458f57600080fd5b813567ffffffffffffffff8111156145a657600080fd5b610d5e84828501614121565b6000806000606084860312156145c757600080fd5b8335925060208401356142ce81614070565b8015158114610d5257600080fd5b600080604083850312156145fa57600080fd5b823561460581614070565b915060208301356143fc816145d9565b6000806020838503121561462857600080fd5b823567ffffffffffffffff8082111561464057600080fd5b818501915085601f83011261465457600080fd5b81358181111561466357600080fd5b8660208260051b850101111561467857600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156146df57603f198886030184526146cd858351614018565b945092850192908501906001016146b1565b5092979650505050505050565b600082601f8301126146fd57600080fd5b8135602061470a82614407565b60405161471782826140f4565b83815260059390931b850182019282810191508684111561473757600080fd5b8286015b8481101561449a578035835291830191830161473b565b600080600080600060a0868803121561476a57600080fd5b853561477581614070565b9450602086013561478581614070565b9350604086013567ffffffffffffffff808211156147a257600080fd5b6147ae89838a016146ec565b945060608801359150808211156147c457600080fd5b6147d089838a016146ec565b935060808801359150808211156147e657600080fd5b506147f388828901614121565b9150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156148425761482f83855161425b565b928401926080929092019160010161481c565b50909695505050505050565b6000806040838503121561486157600080fd5b823561486c81614070565b915060208301356143fc81614070565b600080600080600060a0868803121561489457600080fd5b853561489f81614070565b945060208601356148af81614070565b93506040860135925060608601359150608086013567ffffffffffffffff8111156148d957600080fd5b6147f388828901614121565b600181811c908216806148f957607f821691505b60208210811415611c1e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561495957614959614930565b500190565b60038110610d5257600080fd5b6020808252818101839052600090604080840186845b878110156149dd57813561499481614070565b6001600160a01b03168352818501356149ac8161495e565b6149b886850182614239565b5081840135838501526060808301359084015260809283019290910190600101614981565b5090979650505050505050565b6000816000190483118215151615614a0457614a04614930565b500290565b600082614a2657634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e19843603018112614a4257600080fd5b83018035915067ffffffffffffffff821115614a5d57600080fd5b60200191503681900382131561432157600080fd5b6000600019821415614a8657614a86614930565b5060010190565b600082821015614a9f57614a9f614930565b500390565b7f5065726d697373696f6e733a206163636f756e74200000000000000000000000815260008351614adc816015850160208801613fec565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006015918401918201528351614b19816026840160208801613fec565b01602601949350505050565b600060808284031215614b3757600080fd5b6040516080810181811067ffffffffffffffff82111715614b5a57614b5a6140de565b6040528235614b6881614070565b81526020830135614b788161495e565b6020820152604083810135908201526060928301359281019290925250919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000614bf86040830185614018565b82810360208401526129568185614018565b60008251614c1c818460208701613fec565b9190910192915050565b600081614c3557614c35614930565b506000190190565b8135614c4881614070565b6001600160a01b03811690508154816001600160a01b031982161783556020840135614c738161495e565b60038110614c9157634e487b7160e01b600052602160045260246000fd5b74ffffffffffffffffffffffffffffffffffffffffff199190911690911760a09190911b60ff60a01b1617815560408201356001820155606090910135600290910155565b60006001600160a01b03808716835280861660208401525083604083015260806060830152614d086080830184614018565b9695505050505050565b600060208284031215614d2457600080fd5b8151612ce881613fb9565b600060208284031215614d4157600080fd5b8151612ce8816145d9565b600060033d1115612a075760046000803e5060005160e01c90565b600060443d1015614d755790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715614da557505050505090565b8285019150815181811115614dbd5750505050505090565b843d8701016020828501011115614dd75750505050505090565b614de6602082860101876140f4565b50909594505050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202d0284179129c613f4490323e77479f0ac1a77bf79f1a11f948ed1825e86986164736f6c634300080c0033";

const isSuperArgs$b = xs => xs.length > 1;

class Multiwrap__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$b(args)) {
      super(...args);
    } else {
      super(_abi$n, _bytecode$b, args[0]);
    }
  }

  deploy(_nativeTokenWrapper, overrides) {
    return super.deploy(_nativeTokenWrapper, overrides || {});
  }

  getDeployTransaction(_nativeTokenWrapper, overrides) {
    return super.getDeployTransaction(_nativeTokenWrapper, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$n);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$n, signerOrProvider);
  }

}

defineProperty._defineProperty(Multiwrap__factory, "bytecode", _bytecode$b);

defineProperty._defineProperty(Multiwrap__factory, "abi", _abi$n);

const _abi$m = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class Ownable__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$m);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$m, signerOrProvider);
  }

}

defineProperty._defineProperty(Ownable__factory, "abi", _abi$m);

const _abi$l = [{
  inputs: [{
    internalType: "address",
    name: "_nativeTokenWrapper",
    type: "address"
  }, {
    internalType: "address",
    name: "_trustedForwarder",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "packId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "address",
    name: "recipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "totalPacksCreated",
    type: "uint256"
  }],
  name: "PackCreated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "packId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "opener",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "numOfPacksOpened",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    indexed: false,
    internalType: "struct ITokenBundle.Token[]",
    name: "rewardUnitsDistributed",
    type: "tuple[]"
  }],
  name: "PackOpened",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "packId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "address",
    name: "recipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "totalPacksCreated",
    type: "uint256"
  }],
  name: "PackUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_packId",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token[]",
    name: "_contents",
    type: "tuple[]"
  }, {
    internalType: "uint256[]",
    name: "_numOfRewardUnits",
    type: "uint256[]"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }],
  name: "addPackContents",
  outputs: [{
    internalType: "uint256",
    name: "packTotalSupply",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "newSupplyAdded",
    type: "uint256"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "canUpdatePack",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token[]",
    name: "_contents",
    type: "tuple[]"
  }, {
    internalType: "uint256[]",
    name: "_numOfRewardUnits",
    type: "uint256[]"
  }, {
    internalType: "string",
    name: "_packUri",
    type: "string"
  }, {
    internalType: "uint128",
    name: "_openStartTimestamp",
    type: "uint128"
  }, {
    internalType: "uint128",
    name: "_amountDistributedPerOpen",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }],
  name: "createPack",
  outputs: [{
    internalType: "uint256",
    name: "packId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "packTotalSupply",
    type: "uint256"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_packId",
    type: "uint256"
  }],
  name: "getPackContents",
  outputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token[]",
    name: "contents",
    type: "tuple[]"
  }, {
    internalType: "uint256[]",
    name: "perUnitAmounts",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "member",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }],
  name: "getTokenCountOfBundle",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getTokenOfBundle",
  outputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }],
  name: "getUriOfBundle",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRoleWithSwitch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155BatchReceived",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC721Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_packId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_amountToOpen",
    type: "uint256"
  }],
  name: "openPack",
  outputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token[]",
    name: "",
    type: "tuple[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  stateMutability: "payable",
  type: "receive"
}];
const _bytecode$a = "0x60c06040523480156200001157600080fd5b50604051620061c5380380620061c5833981016040819052620000349162000166565b6001600160a01b038216608052600054610100900460ff166200005e5760005460ff161562000068565b620000686200011c565b620000d05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000f3576000805461ffff19166101011790555b6001600160a01b03821660a052801562000113576000805461ff00191690555b5050506200019e565b600062000134306200013a60201b6200218f1760201c565b15905090565b6001600160a01b03163b151590565b80516001600160a01b03811681146200016157600080fd5b919050565b600080604083850312156200017a57600080fd5b620001858362000149565b9150620001956020840162000149565b90509250929050565b60805160a051615ffa620001cb600039600061157a0152600081816102f001526143cb0152615ffa6000f3fe6080604052600436106102e05760003560e01c8063914e126a1161017f578063b0381b08116100e1578063d0d2fe251161008a578063e985e9c511610064578063e985e9c5146109fd578063f23a6e6114610a47578063f242432a14610a7357600080fd5b8063d0d2fe251461099b578063d547741f146109c8578063e8a3d485146109e857600080fd5b8063bd85b039116100bb578063bd85b03914610933578063ca15c87314610961578063cb2ef6f71461098157600080fd5b8063b0381b08146108ab578063b24f2d39146108dc578063bc197c811461090757600080fd5b8063a0a8e46011610143578063a32fa5b31161011d578063a32fa5b31461084b578063a96b14381461086b578063ac9650d81461087e57600080fd5b8063a0a8e460146107fa578063a217fddf14610816578063a22cb4651461082b57600080fd5b8063914e126a1461073257806391d148541461075f578063938e3d7b146107a557806395d89b41146107c55780639bcf7a15146107da57600080fd5b80632f2ff15d11610243578063600dd5ea116101ec5780638d4c446a116101c65780638d4c446a146106b25780638da5cb5b146106e05780639010d07c1461071257600080fd5b8063600dd5ea1461065257806361195e9414610672578063754b8fe71461069257600080fd5b80634cc157df1161021d5780634cc157df146105aa5780634e1273f4146105ec578063572b6c051461061957600080fd5b80632f2ff15d1461055357806336568abe146105735780633b1475a71461059357600080fd5b806313af4035116102a5578063248a9ca31161027f578063248a9ca3146104c75780632a55205a146104f45780632eb2c2d61461053357600080fd5b806313af403514610436578063150b7a02146104565780631da799c91461049a57600080fd5b8062fdd58e1461036957806301ffc9a71461039c57806306fdde03146103cc578063092e6075146103ee5780630e89341c1461041657600080fd5b3661036457336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103625760405162461bcd60e51b815260206004820152601460248201527f216e6174697665546f6b656e577261707065722e00000000000000000000000060448201526064015b60405180910390fd5b005b600080fd5b34801561037557600080fd5b50610389610384366004614fed565b610a93565b6040519081526020015b60405180910390f35b3480156103a857600080fd5b506103bc6103b736600461502f565b610b2b565b6040519015158152602001610393565b3480156103d857600080fd5b506103e1610b89565b60405161039391906150a4565b6104016103fc366004615216565b610c18565b60408051928352602083019190915201610393565b34801561042257600080fd5b506103e16104313660046152df565b610e2e565b34801561044257600080fd5b506103626104513660046152f8565b610e39565b34801561046257600080fd5b50610481610471366004615315565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610393565b3480156104a657600080fd5b506104ba6104b5366004615381565b610e8a565b6040516103939190615403565b3480156104d357600080fd5b506103896104e23660046152df565b60009081526007602052604090205490565b34801561050057600080fd5b5061051461050f366004615381565b610f3d565b604080516001600160a01b039093168352602083019190915201610393565b34801561053f57600080fd5b5061036261054e3660046154a6565b610f7a565b34801561055f57600080fd5b5061036261056e366004615554565b61102e565b34801561057f57600080fd5b5061036261058e366004615554565b6110c8565b34801561059f57600080fd5b5061038961013a5481565b3480156105b657600080fd5b506105ca6105c53660046152df565b61112a565b604080516001600160a01b03909316835261ffff909116602083015201610393565b3480156105f857600080fd5b5061060c6106073660046155f3565b611195565b6040516103939190615692565b34801561062557600080fd5b506103bc6106343660046152f8565b6001600160a01b03166000908152606d602052604090205460ff1690565b34801561065e57600080fd5b5061036261066d366004614fed565b6112bf565b34801561067e57600080fd5b506103e161068d3660046152df565b61130e565b34801561069e57600080fd5b506103626106ad3660046156a5565b6113b3565b3480156106be57600080fd5b506106d26106cd3660046152df565b611685565b6040516103939291906157b7565b3480156106ec57600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610393565b34801561071e57600080fd5b506106fa61072d366004615381565b611844565b34801561073e57600080fd5b5061075261074d366004615381565b611945565b60405161039391906157dc565b34801561076b57600080fd5b506103bc61077a366004615554565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156107b157600080fd5b506103626107c03660046157ef565b611ba8565b3480156107d157600080fd5b506103e1611bf6565b3480156107e657600080fd5b506103626107f5366004615824565b611c04565b34801561080657600080fd5b5060405160028152602001610393565b34801561082257600080fd5b50610389600081565b34801561083757600080fd5b5061036261084636600461586a565b611c59565b34801561085757600080fd5b506103bc610866366004615554565b611c6b565b610401610879366004615898565b611cc1565b34801561088a57600080fd5b5061089e610899366004615924565b611f40565b6040516103939190615966565b3480156108b757600080fd5b506103bc6108c63660046152df565b61013d6020526000908152604090205460ff1681565b3480156108e857600080fd5b506004546001600160a01b03811690600160a01b900461ffff166105ca565b34801561091357600080fd5b506104816109223660046154a6565b63bc197c8160e01b95945050505050565b34801561093f57600080fd5b5061038961094e3660046152df565b61013b6020526000908152604090205481565b34801561096d57600080fd5b5061038961097c3660046152df565b612035565b34801561098d57600080fd5b50635061636b60e01b610389565b3480156109a757600080fd5b506103896109b63660046152df565b60009081526003602052604090205490565b3480156109d457600080fd5b506103626109e3366004615554565b6120d0565b3480156109f457600080fd5b506103e16120e9565b348015610a0957600080fd5b506103bc610a183660046159c8565b6001600160a01b0391821660009081526101046020908152604080832093909416825291909152205460ff1690565b348015610a5357600080fd5b50610481610a623660046159f6565b63f23a6e6160e01b95945050505050565b348015610a7f57600080fd5b50610362610a8e3660046159f6565b6120f6565b60006001600160a01b038316610aff5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608401610359565b506000818152610103602090815260408083206001600160a01b03861684529091529020545b92915050565b6000610b368261219e565b80610b51575063152a902d60e11b6001600160e01b03198316145b80610b6c5750630a85bd0160e11b6001600160e01b03198316145b80610b255750506001600160e01b031916630271189760e51b1490565b6101358054610b9790615a5f565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc390615a5f565b8015610c105780601f10610be557610100808354040283529160200191610c10565b820191906000526020600020905b815481529060010190602001808311610bf357829003601f168201915b505050505081565b60008061013854610c3081610c2b6121ee565b6121fd565b60026009541415610c835760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610359565b60026009558915801590610c9657508988145b610ccb5760405162461bcd60e51b81526004016103599060208082526004908201526310a632b760e11b604082015260600190565b61013954600090815260066020908152604080832083805290915290205460ff16610d435760005b8a811015610d4157610d2f610139548d8d84818110610d1457610d14615a94565b610d2a92602060809092020190810191506152f8565b612261565b610d3a600182615ac0565b9050610cf3565b505b61013a805493506001906000610d598387615ac0565b90915550610d7990508b8b8b8b8b886001600160801b038c16600061229f565b600084815261013c602090815260408083206001600160801b038a8116600160801b02908c161760019182015561013d8352818420805460ff1916909117905580519182019052908152909250610dd5908590859085906125cf565b604080516001600160a01b03861681526020810184905284917f529034575398e71312a0b7b951d8ca42dce1529d774f4a255a587f64f649fff8910160405180910390a250600160095590999098509650505050505050565b6060610b258261130e565b610e416126ed565b610e7e5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610359565b610e87816126fb565b50565b610eb6604080516080810190915260008082526020820190815260200160008152602001600081525090565b6000838152600360209081526040808320858452600290810183529281902081516080810190925280546001600160a01b038116835291939092840191600160a01b900460ff1690811115610f0d57610f0d6153a3565b6002811115610f1e57610f1e6153a3565b8152600182015460208201526002909101546040909101529392505050565b600080600080610f4c8661112a565b90945084925061ffff169050612710610f658287615ad8565b610f6f9190615b0d565b925050509250929050565b610f826121ee565b6001600160a01b0316856001600160a01b03161480610fa85750610fa885610a186121ee565b61101a5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610359565b611027858585858561274d565b5050505050565b6000828152600760205260409020546110479033612261565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff16156110ba5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610359565b6110c482826129c9565b5050565b336001600160a01b038216146111205760405162461bcd60e51b815260206004820152601a60248201527f43616e206f6e6c792072656e6f756e636520666f722073656c660000000000006044820152606401610359565b6110c482826129dd565b6000818152600560209081526040808320815180830190925280546001600160a01b031680835260019091015492820192909252829115611171578051602082015161118b565b6004546001600160a01b03811690600160a01b900461ffff165b9250925050915091565b606081518351146111fa5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610359565b6000835167ffffffffffffffff81111561121657611216615148565b60405190808252806020026020018201604052801561123f578160200160208202803683370190505b50905060005b84518110156112b75761128a85828151811061126357611263615a94565b602002602001015185838151811061127d5761127d615a94565b6020026020010151610a93565b82828151811061129c5761129c615a94565b60209081029190910101526112b081615b21565b9050611245565b509392505050565b6112c76126ed565b6113045760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610359565b6110c48282612a34565b600081815260036020526040902060010180546060919061132e90615a5f565b80601f016020809104026020016040519081016040528092919081815260200182805461135a90615a5f565b80156113a75780601f1061137c576101008083540402835291602001916113a7565b820191906000526020600020905b81548152906001019060200180831161138a57829003601f168201915b50505050509050919050565b600054610100900460ff166113ce5760005460ff16156113d2565b303b155b6114355760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610359565b600054610100900460ff16158015611457576000805461ffff19166101011790555b7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a67f86d5cf0a6bdc8d859ba3bdc97043337c82a0e609035f378e419298b6a3e00ae66114c2612ae9565b6000875160016114d29190615ac0565b67ffffffffffffffff8111156114ea576114ea615148565b604051908082528060200260200182016040528015611513578160200160208202803683370190505b50905060005b88518110156115785788818151811061153457611534615a94565b602002602001015182828151811061154e5761154e615a94565b6001600160a01b03909216602092830291909101909101528061157081615b21565b915050611519565b7f00000000000000000000000000000000000000000000000000000000000000008282815181106115ab576115ab615a94565b60200260200101906001600160a01b031690816001600160a01b0316815250506115d482612b1a565b6115dd8a612b52565b8b516115f1906101359060208f0190614f2f565b508a51611606906101369060208e0190614f2f565b506116108a612b82565b6116198d6126fb565b61162460008e6129c9565b61162e858e6129c9565b611638848e6129c9565b6116438560006129c9565b61164e8360006129c9565b6116588888612a34565b5050610137929092556101385561013955801561167b576000805461ff00191690555b5050505050505050565b600081815261013c602090815260408083208151815460809481028201850190935260608181018481529095869590949293928492918491908401828280156116ed57602002820191906000526020600020905b8154815260200190600101908083116116d9575b5050509183525050600191909101546001600160801b038082166020840152600160801b90910416604090910152905060006117358560009081526003602052604090205490565b90508067ffffffffffffffff81111561175057611750615148565b6040519080825280602002602001820160405280156117ad57816020015b61179a604080516080810190915260008082526020820190815260200160008152602001600081525090565b81526020019060019003908161176e5790505b5093508067ffffffffffffffff8111156117c9576117c9615148565b6040519080825280602002602001820160405280156117f2578160200160208202803683370190505b50925060005b818110156118395761180a8682610e8a565b85828151811061181c5761181c615a94565b6020908102919091010152611832600182615ac0565b90506117f8565b505051919391925050565b60008281526008602052604081205481805b8281101561193c5760008681526008602090815260408083208484526001019091529020546001600160a01b0316156118d357848214156118c15760008681526008602090815260408083209383526001909301905220546001600160a01b03169250610b25915050565b6118cc600183615ac0565b915061192a565b600086815260066020908152604080832083805290915290205460ff1680156119175750600086815260086020908152604080832083805260020190915290205481145b1561192a57611927600183615ac0565b91505b611935600182615ac0565b9050611856565b50505092915050565b60606002600954141561199a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610359565b600260095560006119a96121ee565b336000908152606d602052604090205490915060ff16806119d257506001600160a01b03811632145b611a075760405162461bcd60e51b81526004016103599060208082526004908201526321454f4160e01b604082015260600190565b82611a128286610a93565b1015611a495760405162461bcd60e51b8152600401610359906020808252600490820152630850985b60e21b604082015260600190565b600084815261013c602090815260408083208151815460809481028201850190935260608101838152909391928492849190840182828015611aaa57602002820191906000526020600020905b815481526020019060010190808311611a96575b5050509183525050600191909101546001600160801b03808216602080850191909152600160801b90920481166040909301929092528201519192504291161115611b235760405162461bcd60e51b815260206004820152600960248201526831b0b73a1037b832b760b91b6044820152606401610359565b6000611b3e868684604001516001600160801b031685612c64565b9050611b4b838787613079565b611b56308483613203565b826001600160a01b0316867f58bbfaa763248693d05ac650926341943af86affd998d80e41dbcc9adfdae6078784604051611b92929190615b3c565b60405180910390a3600160095595945050505050565b611bb06126ed565b611bed5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610359565b610e8781612b82565b6101368054610b9790615a5f565b611c0c6126ed565b611c495760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610359565b611c54838383613325565b505050565b6110c4611c646121ee565b83836133ef565b600082815260066020908152604080832083805290915281205460ff16611cb8575060008281526006602090815260408083206001600160a01b038516845290915290205460ff16610b25565b50600192915050565b60008061013854611cd481610c2b6121ee565b60026009541415611d275760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610359565b6002600955600089815261013d602052604090205460ff16611d765760405162461bcd60e51b815260206004820152600860248201526708505b1b1bddd95960c21b6044820152606401610359565b8615801590611d8457508685145b611db95760405162461bcd60e51b81526004016103599060208082526004908201526310a632b760e11b604082015260600190565b611dc3848a610a93565b611df85760405162461bcd60e51b8152600401610359906020808252600490820152630850985b60e21b604082015260600190565b61013954600090815260066020908152604080832083805290915290205460ff16611e555760005b87811015611e5357611e41610139548a8a84818110610d1457610d14615a94565b611e4c600182615ac0565b9050611e20565b505b600061013c60008b815260200190815260200160002060010160109054906101000a90046001600160801b03166001600160801b03169050611ead89898989604051806020016040528060008152508f87600161229f565b60008b815261013b6020526040902054909350611ecb908490615ac0565b9350611ee8858b85604051806020016040528060008152506125cf565b604080516001600160a01b0387168152602081018590528b917fdf54045461e7fa6cda88afd9b979d29bb9ef67b8271562cec9a7a95ddc3afe72910160405180910390a2505060016009559097909650945050505050565b60608167ffffffffffffffff811115611f5b57611f5b615148565b604051908082528060200260200182016040528015611f8e57816020015b6060815260200190600190039081611f795790505b50905060005b8281101561202e57611ffe30858584818110611fb257611fb2615a94565b9050602002810190611fc49190615b55565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506134c992505050565b82828151811061201057612010615a94565b6020026020010181905250808061202690615b21565b915050611f94565b5092915050565b600081815260086020526040812054815b818110156120995760008481526008602090815260408083208484526001019091529020546001600160a01b03161561208757612084600184615ac0565b92505b612092600182615ac0565b9050612046565b50600083815260066020908152604080832083805290915290205460ff16156120ca576120c7600183615ac0565b91505b50919050565b6000828152600760205260409020546111209033612261565b60018054610b9790615a5f565b6120fe6121ee565b6001600160a01b0316856001600160a01b03161480612124575061212485610a186121ee565b6121825760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610359565b61102785858585856135bd565b6001600160a01b03163b151590565b60006001600160e01b03198216636cdb3d1360e11b14806121cf57506001600160e01b031982166303a24d0760e21b145b80610b2557506301ffc9a760e01b6001600160e01b0319831614610b25565b60006121f861376c565b905090565b6122078282611c6b565b6110c45761221f816001600160a01b03166014613799565b61222a836020613799565b60405160200161223b929190615b9c565b60408051601f198184030181529082905262461bcd60e51b8252610359916004016150a4565b60008281526006602090815260408083206001600160a01b038516845290915290205460ff166110c45761221f816001600160a01b03166014613799565b60008060005b898110156124a3578a8a828181106122bf576122bf615a94565b90506080020160600135600014156123015760405162461bcd60e51b81526020600482015260056024820152640c08185b5d60da1b6044820152606401610359565b88888281811061231357612313615a94565b905060200201358b8b8381811061232c5761232c615a94565b905060800201606001356123409190615c1d565b156123725760405162461bcd60e51b815260206004820152600260248201526110a960f11b6044820152606401610359565b60018b8b8381811061238657612386615a94565b905060800201602001602081019061239e9190615c3e565b60028111156123af576123af6153a3565b1415806123d757508a8a828181106123c9576123c9615a94565b905060800201606001356001145b6124085760405162461bcd60e51b815260206004820152600260248201526110a960f11b6044820152606401610359565b88888281811061241a5761241a615a94565b905060200201358261242c9190615ac0565b600087815261013c6020526040902090925089898381811061245057612450615a94565b905060200201358c8c8481811061246957612469615a94565b9050608002016060013561247d9190615b0d565b81546001818101845560009384526020909320015561249c9082615ac0565b90506122a5565b506124ae8482615c1d565b156124e45760405162461bcd60e51b81526004016103599060208082526004908201526308505b5d60e21b604082015260600190565b6124ee8482615b0d565b915082156125ae5760005b89811015612544576125328b8b8381811061251657612516615a94565b90506080020180360381019061252c9190615c5b565b87613949565b61253d600182615ac0565b90506124f9565b506125a96125506121ee565b308c8c808060200260200160405190810160405280939291908181526020016000905b8282101561259f5761259060808302860136819003810190615c5b565b81526020019060010190612573565b5050505050613203565b6125c2565b6125c26125b96121ee565b8b8b8989613a0e565b5098975050505050505050565b6001600160a01b03841661262f5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610359565b60006126396121ee565b905061265a8160008761264b88613a76565b61265488613a76565b87613ac1565b6000848152610103602090815260408083206001600160a01b03891684529091528120805485929061268d908490615ac0565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461102781600087878787613d7f565b60006121f88161077a6121ee565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a35050565b81518351146127af5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610359565b6001600160a01b0384166128135760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610359565b600061281d6121ee565b905061282d818787878787613ac1565b60005b845181101561295b57600085828151811061284d5761284d615a94565b60200260200101519050600085838151811061286b5761286b615a94565b6020908102919091018101516000848152610103835260408082206001600160a01b038e1683529093529190912054909150818110156129005760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610359565b6000838152610103602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290612940908490615ac0565b925050819055505050508061295490615b21565b9050612830565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516129ab929190615cd0565b60405180910390a46129c1818787878787613f25565b505050505050565b6129d38282614021565b6110c4828261407c565b6129e782826140e9565b60008281526008602090815260408083206001600160a01b03851680855260028201808552838620805487526001909301855292852080546001600160a01b031916905584529152555050565b612710811115612a785760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610359565b600480546001600160a01b03841675ffffffffffffffffffffffffffffffffffffffffffff199091168117600160a01b61ffff851602179091556040518281527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb9060200160405180910390a25050565b600054610100900460ff16612b105760405162461bcd60e51b815260040161035990615ce3565b612b1861414b565b565b600054610100900460ff16612b415760405162461bcd60e51b815260040161035990615ce3565b612b49614179565b610e87816141a0565b600054610100900460ff16612b795760405162461bcd60e51b815260040161035990615ce3565b610e878161422f565b600060018054612b9190615a5f565b80601f0160208091040260200160405190810160405280929190818152602001828054612bbd90615a5f565b8015612c0a5780601f10612bdf57610100808354040283529160200191612c0a565b820191906000526020600020905b815481529060010190602001808311612bed57829003601f168201915b50508551939450612c2693600193506020870192509050614f2f565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612c58929190615d2e565b60405180910390a15050565b60606000612c728486615ad8565b90508067ffffffffffffffff811115612c8d57612c8d615148565b604051908082528060200260200182016040528015612cea57816020015b612cd7604080516080810190915260008082526020820190815260200160008152602001600081525090565b815260200190600190039081612cab5790505b50600087815261013b602052604081205491935090612d0a908690615ad8565b600088815260036020526040812054919250612d2461425f565b90506000612d318a611685565b50905060008367ffffffffffffffff811115612d4f57612d4f615148565b604051908082528060200260200182016040528015612d78578160200160208202803683370190505b50905060005b8681101561300957604080516020808201879052818301849052825180830384018152606090920190925280519101206000612dba8883615c1d565b90506000805b88811015612ff15760008d600001518281518110612de057612de0615a94565b6020026020010151888381518110612dfa57612dfa615a94565b602002602001015160600151612e109190615b0d565b9050612e1c8184615ac0565b841015612fd2578d51805183908110612e3757612e37615a94565b6020026020010151888381518110612e5157612e51615a94565b6020026020010151606001818151612e699190615d53565b9052508651600190889084908110612e8357612e83615a94565b602002602001019015159081151581525050878281518110612ea757612ea7615a94565b6020026020010151600001518d8781518110612ec557612ec5615a94565b60209081029190910101516001600160a01b0390911690528751889083908110612ef157612ef1615a94565b6020026020010151602001518d8781518110612f0f57612f0f615a94565b6020026020010151602001906002811115612f2c57612f2c6153a3565b90816002811115612f3f57612f3f6153a3565b81525050878281518110612f5557612f55615a94565b6020026020010151604001518d8781518110612f7357612f73615a94565b6020908102919091010151604001528d51805183908110612f9657612f96615a94565b60200260200101518d8781518110612fb057612fb0615a94565b602090810291909101015160600152612fca60018c615d53565b9a5050612ff1565b612fdc8184615ac0565b925050612fea600182615ac0565b9050612dc0565b505050506001816130029190615ac0565b9050612d7e565b5060005b8481101561306a5781818151811061302757613027615a94565b6020026020010151156130585761305883828151811061304957613049615a94565b60200260200101518d836142be565b613063600182615ac0565b905061300d565b50505050505050949350505050565b6001600160a01b0383166130db5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610359565b60006130e56121ee565b9050613115818560006130f787613a76565b61310087613a76565b60405180602001604052806000815250613ac1565b6000838152610103602090815260408083206001600160a01b0388168452909152902054828110156131955760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610359565b6000848152610103602090815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6000805b82518110156132d55773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b031683828151811061324057613240615a94565b6020026020010151600001516001600160a01b031614801561326a57506001600160a01b03841630145b1561329f5782818151811061328157613281615a94565b602002602001015160600151826132989190615ac0565b91506132c3565b6132c385858584815181106132b6576132b6615a94565b602002602001015161439c565b6132ce600182615ac0565b9050613207565b50801561331f576040805160808101825273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152600060208201819052918101919091526060810182905261102785858361439c565b50505050565b6127108111156133695760405162461bcd60e51b815260206004820152600f60248201526e45786365656473206d61782062707360881b6044820152606401610359565b6040805180820182526001600160a01b038481168083526020808401868152600089815260058352869020945185546001600160a01b031916941693909317845591516001909301929092559151838152909185917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d91015b60405180910390a3505050565b816001600160a01b0316836001600160a01b031614156134635760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610359565b6001600160a01b0383811660008181526101046020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3191016133e2565b60606001600160a01b0383163b6135315760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610359565b600080846001600160a01b03168460405161354c9190615d6a565b600060405180830381855af49150503d8060008114613587576040519150601f19603f3d011682016040523d82523d6000602084013e61358c565b606091505b50915091506135b48282604051806060016040528060278152602001615f9e602791396144fb565b95945050505050565b6001600160a01b0384166136215760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610359565b600061362b6121ee565b905061363c81878761264b88613a76565b6000848152610103602090815260408083206001600160a01b038a168452909152902054838110156136c35760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610359565b6000858152610103602090815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290613703908490615ac0565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4613763828888888888613d7f565b50505050505050565b336000908152606d602052604081205460ff1615613791575060131936013560601c90565b503390565b90565b606060006137a8836002615ad8565b6137b3906002615ac0565b67ffffffffffffffff8111156137cb576137cb615148565b6040519080825280601f01601f1916602001820160405280156137f5576020820181803683370190505b509050600360fc1b8160008151811061381057613810615a94565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061383f5761383f615a94565b60200101906001600160f81b031916908160001a9053506000613863846002615ad8565b61386e906001615ac0565b90505b60018111156138f3577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106138af576138af615a94565b1a60f81b8282815181106138c5576138c5615a94565b60200101906001600160f81b031916908160001a90535060049490941c936138ec81615d86565b9050613871565b5083156139425760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610359565b9392505050565b61395282614534565b600081815260036020908152604080832080548085526002918201845291909320855181546001600160a01b039091166001600160a01b0319821681178355938701519294879492939284926001600160a81b0319161790600160a01b9084908111156139c1576139c16153a3565b021790555060408201518160010155606082015181600201559050506001600360008481526020019081526020016000206000016000828254613a049190615ac0565b9091555050505050565b613a19848483614866565b613a23828261498f565b61102785308686808060200260200160405190810160405280939291908181526020016000905b8282101561259f57613a6760808302860136819003810190615c5b565b81526020019060010190613a4a565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110613ab057613ab0615a94565b602090810291909101015292915050565b61013754600090815260066020908152604080832083805290915290205460ff16158015613af757506001600160a01b03851615155b8015613b0b57506001600160a01b03841615155b15613ba8576101375460009081526006602090815260408083206001600160a01b038916845290915290205460ff1680613b6b57506101375460009081526006602090815260408083206001600160a01b038816845290915290205460ff165b613ba85760405162461bcd60e51b815260206004820152600e60248201526d215452414e534645525f524f4c4560901b6044820152606401610359565b6001600160a01b038516613c345760005b8351811015613c2e57828181518110613bd457613bd4615a94565b602002602001015161013b6000868481518110613bf357613bf3615a94565b602002602001015181526020019081526020016000206000828254613c189190615ac0565b90915550613c27905081615b21565b9050613bb9565b50613cf9565b60005b8351811015613cf75761013d6000858381518110613c5757613c57615a94565b60209081029190910181015182528101919091526040016000205460ff168015613c9b5750828181518110613c8e57613c8e615a94565b6020026020010151600014155b15613ce757600061013d6000868481518110613cb957613cb9615a94565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055505b613cf081615b21565b9050613c37565b505b6001600160a01b0384166129c15760005b835181101561376357828181518110613d2557613d25615a94565b602002602001015161013b6000868481518110613d4457613d44615a94565b602002602001015181526020019081526020016000206000828254613d699190615d53565b90915550613d78905081615b21565b9050613d0a565b6001600160a01b0384163b156129c15760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190613dc39089908990889088908890600401615d9d565b6020604051808303816000875af1925050508015613dfe575060408051601f3d908101601f19168201909252613dfb91810190615dd5565b60015b613eb457613e0a615df2565b806308c379a01415613e445750613e1f615e0d565b80613e2a5750613e46565b8060405162461bcd60e51b815260040161035991906150a4565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610359565b6001600160e01b0319811663f23a6e6160e01b146137635760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610359565b6001600160a01b0384163b156129c15760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190613f699089908990889088908890600401615e97565b6020604051808303816000875af1925050508015613fa4575060408051601f3d908101601f19168201909252613fa191810190615dd5565b60015b613fb057613e0a615df2565b6001600160e01b0319811663bc197c8160e01b146137635760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610359565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b60008281526008602052604081208054916001919061409b8385615ac0565b9091555050600092835260086020908152604080852083865260018101835281862080546001600160a01b039096166001600160a01b03199096168617905593855260029093019052912055565b6140f38282612261565b60008281526006602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600054610100900460ff166141725760405162461bcd60e51b815260040161035990615ce3565b6001600955565b600054610100900460ff16612b185760405162461bcd60e51b815260040161035990615ce3565b600054610100900460ff166141c75760405162461bcd60e51b815260040161035990615ce3565b60005b81518110156110c4576001606d60008484815181106141eb576141eb615a94565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061422781615b21565b9150506141ca565b600054610100900460ff166142565760405162461bcd60e51b815260040161035990615ce3565b610e87816149b4565b60006142696121ee565b614274600143615d53565b60405160609290921b6bffffffffffffffffffffffff191660208301524060348201524460548201526074016040516020818303038152906040528051906020012060001c905090565b60008281526003602052604090205481106143075760405162461bcd60e51b8152602060048201526009602482015268696e64657820444e4560b81b6044820152606401610359565b61431083614534565b6000828152600360209081526040808320848452600290810183529220855181546001600160a01b039091166001600160a01b03198216811783559287015187949293909284926001600160a81b03191690911790600160a01b90849081111561437c5761437c6153a3565b021790555060408201516001820155606090910151600290910155505050565b6000816020015160028111156143b4576143b46153a3565b14156143ef57611c548160000151848484606001517f00000000000000000000000000000000000000000000000000000000000000006149c8565b600181602001516002811115614407576144076153a3565b141561447c5780516040808301519051632142170760e11b81526001600160a01b038681166004830152858116602483015260448201929092529116906342842e0e906064015b600060405180830381600087803b15801561446857600080fd5b505af1158015613763573d6000803e3d6000fd5b600281602001516002811115614494576144946153a3565b1415611c5457805160408083015160608401519151637921219560e11b81526001600160a01b03878116600483015286811660248301526044820192909252606481019290925260a06084830152600060a48301529091169063f242432a9060c40161444e565b6060831561450a575081613942565b82511561451a5782518084602001fd5b8160405162461bcd60e51b815260040161035991906150a4565b60018160200151600281111561454c5761454c6153a3565b14156146305780516040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b03909116906301ffc9a7906024015b602060405180830381865afa9250505080156145bd575060408051601f3d908101601f191682019092526145ba91810190615ef5565b60015b6145f65760405162461bcd60e51b815260206004820152600a60248201526921546f6b656e5479706560b01b6044820152606401610359565b806110c45760405162461bcd60e51b815260206004820152600a60248201526921546f6b656e5479706560b01b6044820152606401610359565b600281602001516002811115614648576146486153a3565b14156146845780516040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b03909116906301ffc9a790602401614584565b60008160200151600281111561469c5761469c6153a3565b1415610e875780516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610e875780516040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa925050508015614731575060408051601f3d908101601f1916820190925261472e91810190615ef5565b60015b61475b5761473d615df2565b806308c379a014156110c45750614752615e0d565b806110c4575050565b80156147965760405162461bcd60e51b815260206004820152600a60248201526921546f6b656e5479706560b01b6044820152606401610359565b81516040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b03909116906301ffc9a790602401602060405180830381865afa925050508015614800575060408051601f3d908101601f191682019092526147fd91810190615ef5565b60015b61482b5761480c615df2565b806308c379a01415611c545750614821615e0d565b80611c5457505050565b8015611c545760405162461bcd60e51b815260206004820152600a60248201526921546f6b656e5479706560b01b6044820152606401610359565b818061489e5760405162461bcd60e51b815260206004820152600760248201526621546f6b656e7360c81b6044820152606401610359565b600082815260036020526040902054156148e65760405162461bcd60e51b815260206004820152600960248201526869642065786973747360b81b6044820152606401610359565b60005b8181101561497a5761492185858381811061490657614906615a94565b90506080020180360381019061491c9190615c5b565b614534565b84848281811061493357614933615a94565b600086815260036020908152604080832087845260020190915290206080909102929092019190506149658282615f12565b506149739050600182615ac0565b90506148e9565b50600091825260036020526040909120555050565b60008181526003602090815260409091208351611c5492600190920191850190614f2f565b80516110c490610105906020840190614f2f565b816149d257611027565b6001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415614b36576001600160a01b038416301415614a7257604051632e1a7d4d60e01b8152600481018390526001600160a01b03821690632e1a7d4d90602401600060405180830381600087803b158015614a4a57600080fd5b505af1158015614a5e573d6000803e3d6000fd5b50505050614a6d838383614b42565b611027565b6001600160a01b038316301415614b2b57348214614ad25760405162461bcd60e51b815260206004820152601360248201527f6d73672e76616c756520213d20616d6f756e74000000000000000000000000006044820152606401610359565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015614b0d57600080fd5b505af1158015614b21573d6000803e3d6000fd5b5050505050611027565b614a6d838383614b42565b61102785858585614c07565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114614b8f576040519150601f19603f3d011682016040523d82523d6000602084013e614b94565b606091505b505090508061331f57816001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b158015614bd857600080fd5b505af1158015614bec573d6000803e3d6000fd5b5061331f935050506001600160a01b03841690508585614c65565b816001600160a01b0316836001600160a01b03161415614c265761331f565b6001600160a01b038316301415614c5057614c4b6001600160a01b0385168383614c65565b61331f565b61331f6001600160a01b038516848484614cdd565b6040516001600160a01b038316602482015260448101829052611c5490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152614d15565b6040516001600160a01b038085166024830152831660448201526064810182905261331f9085906323b872dd60e01b90608401614c91565b6000614d6a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614de79092919063ffffffff16565b805190915015611c545780806020019051810190614d889190615ef5565b611c545760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610359565b6060614df68484600085614dfe565b949350505050565b606082471015614e5f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610359565b6001600160a01b0385163b614eb65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610359565b600080866001600160a01b03168587604051614ed29190615d6a565b60006040518083038185875af1925050503d8060008114614f0f576040519150601f19603f3d011682016040523d82523d6000602084013e614f14565b606091505b5091509150614f248282866144fb565b979650505050505050565b828054614f3b90615a5f565b90600052602060002090601f016020900481019282614f5d5760008555614fa3565b82601f10614f7657805160ff1916838001178555614fa3565b82800160010185558215614fa3579182015b82811115614fa3578251825591602001919060010190614f88565b50614faf929150614fb3565b5090565b5b80821115614faf5760008155600101614fb4565b6001600160a01b0381168114610e8757600080fd5b8035614fe881614fc8565b919050565b6000806040838503121561500057600080fd5b823561500b81614fc8565b946020939093013593505050565b6001600160e01b031981168114610e8757600080fd5b60006020828403121561504157600080fd5b813561394281615019565b60005b8381101561506757818101518382015260200161504f565b8381111561331f5750506000910152565b6000815180845261509081602086016020860161504c565b601f01601f19169290920160200192915050565b6020815260006139426020830184615078565b60008083601f8401126150c957600080fd5b50813567ffffffffffffffff8111156150e157600080fd5b6020830191508360208260071b85010111156150fc57600080fd5b9250929050565b60008083601f84011261511557600080fd5b50813567ffffffffffffffff81111561512d57600080fd5b6020830191508360208260051b85010111156150fc57600080fd5b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561518457615184615148565b6040525050565b600082601f83011261519c57600080fd5b813567ffffffffffffffff8111156151b6576151b6615148565b6040516151cd601f8301601f19166020018261515e565b8181528460208386010111156151e257600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160801b0381168114614fe857600080fd5b60008060008060008060008060c0898b03121561523257600080fd5b883567ffffffffffffffff8082111561524a57600080fd5b6152568c838d016150b7565b909a50985060208b013591508082111561526f57600080fd5b61527b8c838d01615103565b909850965060408b013591508082111561529457600080fd5b506152a18b828c0161518b565b9450506152b060608a016151ff565b92506152be60808a016151ff565b915060a08901356152ce81614fc8565b809150509295985092959890939650565b6000602082840312156152f157600080fd5b5035919050565b60006020828403121561530a57600080fd5b813561394281614fc8565b6000806000806080858703121561532b57600080fd5b843561533681614fc8565b9350602085013561534681614fc8565b925060408501359150606085013567ffffffffffffffff81111561536957600080fd5b6153758782880161518b565b91505092959194509250565b6000806040838503121561539457600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0381511682526020810151600381106153e957634e487b7160e01b600052602160045260246000fd5b602083015260408181015190830152606090810151910152565b60808101610b2582846153b9565b600067ffffffffffffffff82111561542b5761542b615148565b5060051b60200190565b600082601f83011261544657600080fd5b8135602061545382615411565b604051615460828261515e565b83815260059390931b850182019282810191508684111561548057600080fd5b8286015b8481101561549b5780358352918301918301615484565b509695505050505050565b600080600080600060a086880312156154be57600080fd5b85356154c981614fc8565b945060208601356154d981614fc8565b9350604086013567ffffffffffffffff808211156154f657600080fd5b61550289838a01615435565b9450606088013591508082111561551857600080fd5b61552489838a01615435565b9350608088013591508082111561553a57600080fd5b506155478882890161518b565b9150509295509295909350565b6000806040838503121561556757600080fd5b82359150602083013561557981614fc8565b809150509250929050565b600082601f83011261559557600080fd5b813560206155a282615411565b6040516155af828261515e565b83815260059390931b85018201928281019150868411156155cf57600080fd5b8286015b8481101561549b5780356155e681614fc8565b83529183019183016155d3565b6000806040838503121561560657600080fd5b823567ffffffffffffffff8082111561561e57600080fd5b61562a86838701615584565b9350602085013591508082111561564057600080fd5b5061564d85828601615435565b9150509250929050565b600081518084526020808501945080840160005b838110156156875781518752958201959082019060010161566b565b509495945050505050565b6020815260006139426020830184615657565b600080600080600080600060e0888a0312156156c057600080fd5b6156c988614fdd565b9650602088013567ffffffffffffffff808211156156e657600080fd5b6156f28b838c0161518b565b975060408a013591508082111561570857600080fd5b6157148b838c0161518b565b965060608a013591508082111561572a57600080fd5b6157368b838c0161518b565b955060808a013591508082111561574c57600080fd5b506157598a828b01615584565b93505061576860a08901614fdd565b915060c0880135905092959891949750929550565b600081518084526020808501945080840160005b83811015615687576157a48783516153b9565b6080969096019590820190600101615791565b6040815260006157ca604083018561577d565b82810360208401526135b48185615657565b602081526000613942602083018461577d565b60006020828403121561580157600080fd5b813567ffffffffffffffff81111561581857600080fd5b614df68482850161518b565b60008060006060848603121561583957600080fd5b83359250602084013561584b81614fc8565b929592945050506040919091013590565b8015158114610e8757600080fd5b6000806040838503121561587d57600080fd5b823561588881614fc8565b915060208301356155798161585c565b600080600080600080608087890312156158b157600080fd5b86359550602087013567ffffffffffffffff808211156158d057600080fd5b6158dc8a838b016150b7565b909750955060408901359150808211156158f557600080fd5b5061590289828a01615103565b909450925050606087013561591681614fc8565b809150509295509295509295565b6000806020838503121561593757600080fd5b823567ffffffffffffffff81111561594e57600080fd5b61595a85828601615103565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156159bb57603f198886030184526159a9858351615078565b9450928501929085019060010161598d565b5092979650505050505050565b600080604083850312156159db57600080fd5b82356159e681614fc8565b9150602083013561557981614fc8565b600080600080600060a08688031215615a0e57600080fd5b8535615a1981614fc8565b94506020860135615a2981614fc8565b93506040860135925060608601359150608086013567ffffffffffffffff811115615a5357600080fd5b6155478882890161518b565b600181811c90821680615a7357607f821691505b602082108114156120ca57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115615ad357615ad3615aaa565b500190565b6000816000190483118215151615615af257615af2615aaa565b500290565b634e487b7160e01b600052601260045260246000fd5b600082615b1c57615b1c615af7565b500490565b6000600019821415615b3557615b35615aaa565b5060010190565b828152604060208201526000614df6604083018461577d565b6000808335601e19843603018112615b6c57600080fd5b83018035915067ffffffffffffffff821115615b8757600080fd5b6020019150368190038213156150fc57600080fd5b7f5065726d697373696f6e733a206163636f756e74200000000000000000000000815260008351615bd481601585016020880161504c565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006015918401918201528351615c1181602684016020880161504c565b01602601949350505050565b600082615c2c57615c2c615af7565b500690565b60038110610e8757600080fd5b600060208284031215615c5057600080fd5b813561394281615c31565b600060808284031215615c6d57600080fd5b6040516080810181811067ffffffffffffffff82111715615c9057615c90615148565b6040528235615c9e81614fc8565b81526020830135615cae81615c31565b6020820152604083810135908201526060928301359281019290925250919050565b6040815260006157ca6040830185615657565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b604081526000615d416040830185615078565b82810360208401526135b48185615078565b600082821015615d6557615d65615aaa565b500390565b60008251615d7c81846020870161504c565b9190910192915050565b600081615d9557615d95615aaa565b506000190190565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152614f2460a0830184615078565b600060208284031215615de757600080fd5b815161394281615019565b600060033d11156137965760046000803e5060005160e01c90565b600060443d1015615e1b5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715615e4b57505050505090565b8285019150815181811115615e635750505050505090565b843d8701016020828501011115615e7d5750505050505090565b615e8c6020828601018761515e565b509095945050505050565b60006001600160a01b03808816835280871660208401525060a06040830152615ec360a0830186615657565b8281036060840152615ed58186615657565b90508281036080840152615ee98185615078565b98975050505050505050565b600060208284031215615f0757600080fd5b81516139428161585c565b8135615f1d81614fc8565b6001600160a01b03811690508154816001600160a01b031982161783556020840135615f4881615c31565b60038110615f6657634e487b7160e01b600052602160045260246000fd5b6001600160a81b03199190911690911760a09190911b60ff60a01b161781556040820135600182015560609091013560029091015556fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220795a294f5b3bf4284bb06258d9843974c815e743b10e4f22920206e7bd1902d264736f6c634300080c0033";

const isSuperArgs$a = xs => xs.length > 1;

class Pack__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$a(args)) {
      super(...args);
    } else {
      super(_abi$l, _bytecode$a, args[0]);
    }
  }

  deploy(_nativeTokenWrapper, _trustedForwarder, overrides) {
    return super.deploy(_nativeTokenWrapper, _trustedForwarder, overrides || {});
  }

  getDeployTransaction(_nativeTokenWrapper, _trustedForwarder, overrides) {
    return super.getDeployTransaction(_nativeTokenWrapper, _trustedForwarder, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$l);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$l, signerOrProvider);
  }

}

defineProperty._defineProperty(Pack__factory, "bytecode", _bytecode$a);

defineProperty._defineProperty(Pack__factory, "abi", _abi$l);

const _abi$k = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "contract IERC20Upgradeable",
    name: "token",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "ERC20PaymentReleased",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "shares",
    type: "uint256"
  }],
  name: "PayeeAdded",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "PaymentReceived",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "PaymentReleased",
  type: "event"
}, {
  inputs: [{
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "payee",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "payeeCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address payable",
    name: "account",
    type: "address"
  }],
  name: "release",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "contract IERC20Upgradeable",
    name: "token",
    type: "address"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "release",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "contract IERC20Upgradeable",
    name: "token",
    type: "address"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "released",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "released",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "shares",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "contract IERC20Upgradeable",
    name: "token",
    type: "address"
  }],
  name: "totalReleased",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalReleased",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalShares",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  stateMutability: "payable",
  type: "receive"
}];
const _bytecode$9 = "0x608060405234801561001057600080fd5b50610c83806100206000396000f3fe6080604052600436106100945760003560e01c80638b83209b116100595780638b83209b146101a35780639852595c146101db578063ce7c2ac214610211578063d79779b214610247578063e33b7de31461027d57600080fd5b8062dbe109146100e257806319165587146101065780633a98ef3914610128578063406072a91461013d57806348b750441461018357600080fd5b366100dd577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b3480156100ee57600080fd5b506037545b6040519081526020015b60405180910390f35b34801561011257600080fd5b50610126610121366004610a88565b610292565b005b34801561013457600080fd5b506033546100f3565b34801561014957600080fd5b506100f3610158366004610aa5565b6001600160a01b03918216600090815260396020908152604080832093909416825291909152205490565b34801561018f57600080fd5b5061012661019e366004610aa5565b610448565b3480156101af57600080fd5b506101c36101be366004610ade565b6106a4565b6040516001600160a01b0390911681526020016100fd565b3480156101e757600080fd5b506100f36101f6366004610a88565b6001600160a01b031660009081526036602052604090205490565b34801561021d57600080fd5b506100f361022c366004610a88565b6001600160a01b031660009081526035602052604090205490565b34801561025357600080fd5b506100f3610262366004610a88565b6001600160a01b031660009081526038602052604090205490565b34801561028957600080fd5b506034546100f3565b6001600160a01b03811660009081526035602052604090205461030b5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084015b60405180910390fd5b600061031660345490565b6103209047610b0d565b9050600061034d8383610348866001600160a01b031660009081526036602052604090205490565b6106d4565b9050806103b05760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610302565b6001600160a01b038316600090815260366020526040812080548392906103d8908490610b0d565b9250508190555080603460008282546103f19190610b0d565b909155506104019050838261071c565b604080516001600160a01b0385168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a1505050565b6001600160a01b0381166000908152603560205260409020546104bc5760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b6064820152608401610302565b6001600160a01b0382166000908152603860205260408120546040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d9190610b25565b6105479190610b0d565b90506000610580838361034887876001600160a01b03918216600090815260396020908152604080832093909416825291909152205490565b9050806105e35760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b6064820152608401610302565b6001600160a01b0380851660009081526039602090815260408083209387168352929052908120805483929061061a908490610b0d565b90915550506001600160a01b03841660009081526038602052604081208054839290610647908490610b0d565b90915550610658905084848361083a565b604080516001600160a01b038581168252602082018490528616917f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a910160405180910390a250505050565b6000603782815481106106b9576106b9610b3e565b6000918252602090912001546001600160a01b031692915050565b6033546001600160a01b038416600090815260356020526040812054909183916106fe9086610b54565b6107089190610b73565b6107129190610b95565b90505b9392505050565b8047101561076c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610302565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107b9576040519150601f19603f3d011682016040523d82523d6000602084013e6107be565b606091505b50509050806108355760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610302565b505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610835928692916000916108df91851690849061095c565b80519091501561083557808060200190518101906108fd9190610bac565b6108355760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610302565b60606107128484600085856001600160a01b0385163b6109be5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610302565b600080866001600160a01b031685876040516109da9190610bfe565b60006040518083038185875af1925050503d8060008114610a17576040519150601f19603f3d011682016040523d82523d6000602084013e610a1c565b606091505b5091509150610a2c828286610a37565b979650505050505050565b60608315610a46575081610715565b825115610a565782518084602001fd5b8160405162461bcd60e51b81526004016103029190610c1a565b6001600160a01b0381168114610a8557600080fd5b50565b600060208284031215610a9a57600080fd5b813561071581610a70565b60008060408385031215610ab857600080fd5b8235610ac381610a70565b91506020830135610ad381610a70565b809150509250929050565b600060208284031215610af057600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b2057610b20610af7565b500190565b600060208284031215610b3757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615610b6e57610b6e610af7565b500290565b600082610b9057634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610ba757610ba7610af7565b500390565b600060208284031215610bbe57600080fd5b8151801515811461071557600080fd5b60005b83811015610be9578181015183820152602001610bd1565b83811115610bf8576000848401525b50505050565b60008251610c10818460208701610bce565b9190910192915050565b6020815260008251806020840152610c39816040850160208701610bce565b601f01601f1916919091016040019291505056fea2646970667358221220a5e8b9976065ea1954a5c53bec275a4492263a13781d922950d230eb4cd7a72764736f6c634300080c0033";

const isSuperArgs$9 = xs => xs.length > 1;

class PaymentSplitterUpgradeable__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$9(args)) {
      super(...args);
    } else {
      super(_abi$k, _bytecode$9, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$k);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$k, signerOrProvider);
  }

}

defineProperty._defineProperty(PaymentSplitterUpgradeable__factory, "bytecode", _bytecode$9);

defineProperty._defineProperty(PaymentSplitterUpgradeable__factory, "abi", _abi$k);

const _abi$j = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRoleWithSwitch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$8 = "0x608060405234801561001057600080fd5b506107a5806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806391d148541161005b57806391d14854146100dd578063a217fddf14610100578063a32fa5b314610108578063d547741f1461011b57600080fd5b8063248a9ca3146100825780632f2ff15d146100b557806336568abe146100ca575b600080fd5b6100a26100903660046105a6565b60009081526001602052604090205490565b6040519081526020015b60405180910390f35b6100c86100c33660046105bf565b61012e565b005b6100c86100d83660046105bf565b6101cb565b6100f06100eb3660046105bf565b61022d565b60405190151581526020016100ac565b6100a2600081565b6100f06101163660046105bf565b610258565b6100c86101293660046105bf565b6102aa565b60008281526001602052604090205461014790336102bf565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16156101bd5760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b6101c7828261033d565b5050565b336001600160a01b038216146102235760405162461bcd60e51b815260206004820152601a60248201527f43616e206f6e6c792072656e6f756e636520666f722073656c6600000000000060448201526064016101b4565b6101c78282610396565b6000828152602081815260408083206001600160a01b038516845290915290205460ff165b92915050565b60008281526020818152604080832083805290915281205460ff166102a157506000828152602081815260408083206001600160a01b038516845290915290205460ff16610252565b50600192915050565b60008281526001602052604090205461022390335b6000828152602081815260408083206001600160a01b038516845290915290205460ff166101c7576102fb816001600160a01b031660146103f6565b6103068360206103f6565b60405160200161031792919061062b565b60408051601f198184030181529082905262461bcd60e51b82526101b4916004016106ac565b6000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6103a082826102bf565b6000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b606060006104058360026106f5565b610410906002610714565b67ffffffffffffffff8111156104285761042861072c565b6040519080825280601f01601f191660200182016040528015610452576020820181803683370190505b509050600360fc1b8160008151811061046d5761046d610742565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061049c5761049c610742565b60200101906001600160f81b031916908160001a90535060006104c08460026106f5565b6104cb906001610714565b90505b6001811115610550577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061050c5761050c610742565b1a60f81b82828151811061052257610522610742565b60200101906001600160f81b031916908160001a90535060049490941c9361054981610758565b90506104ce565b50831561059f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016101b4565b9392505050565b6000602082840312156105b857600080fd5b5035919050565b600080604083850312156105d257600080fd5b8235915060208301356001600160a01b03811681146105f057600080fd5b809150509250929050565b60005b838110156106165781810151838201526020016105fe565b83811115610625576000848401525b50505050565b7f5065726d697373696f6e733a206163636f756e742000000000000000000000008152600083516106638160158501602088016105fb565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060159184019182015283516106a08160268401602088016105fb565b01602601949350505050565b60208152600082518060208401526106cb8160408501602087016105fb565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561070f5761070f6106df565b500290565b60008219821115610727576107276106df565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610767576107676106df565b50600019019056fea26469706673582212201c849a3aa3f36dbba456e762e36863c3a2e177321bfed839258df3283812e8af64736f6c634300080c0033";

const isSuperArgs$8 = xs => xs.length > 1;

class Permissions__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$8(args)) {
      super(...args);
    } else {
      super(_abi$j, _bytecode$8, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$j);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$j, signerOrProvider);
  }

}

defineProperty._defineProperty(Permissions__factory, "bytecode", _bytecode$8);

defineProperty._defineProperty(Permissions__factory, "abi", _abi$j);

const _abi$i = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "member",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRoleWithSwitch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
const _bytecode$7 = "0x608060405234801561001057600080fd5b50610a9c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806391d148541161006657806391d148541461011e578063a217fddf14610165578063a32fa5b31461016d578063ca15c87314610180578063d547741f1461019357600080fd5b8063248a9ca3146100985780632f2ff15d146100cb57806336568abe146100e05780639010d07c146100f3575b600080fd5b6100b86100a636600461087b565b60009081526001602052604090205490565b6040519081526020015b60405180910390f35b6100de6100d9366004610894565b6101a6565b005b6100de6100ee366004610894565b610243565b6101066101013660046108d0565b6102a5565b6040516001600160a01b0390911681526020016100c2565b61015561012c366004610894565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60405190151581526020016100c2565b6100b8600081565b61015561017b366004610894565b6103a4565b6100b861018e36600461087b565b6103f6565b6100de6101a1366004610894565b61048f565b6000828152600160205260409020546101bf90336104a4565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16156102355760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c6465727300000060448201526064015b60405180910390fd5b61023f8282610522565b5050565b336001600160a01b0382161461029b5760405162461bcd60e51b815260206004820152601a60248201527f43616e206f6e6c792072656e6f756e636520666f722073656c66000000000000604482015260640161022c565b61023f8282610536565b60008281526002602052604081205481805b8281101561039a5760008681526002602090815260408083208484526001019091529020546001600160a01b03161561033457848214156103225760008681526002602090815260408083209383526001909301905220546001600160a01b0316925061039e915050565b61032d600183610908565b9150610388565b60008681526020818152604080832083805290915290205460ff16801561037557506000868152600260208181526040808420848052909201905290205481145b1561038857610385600183610908565b91505b610393600182610908565b90506102b7565b5050505b92915050565b60008281526020818152604080832083805290915281205460ff166103ed57506000828152602081815260408083206001600160a01b038516845290915290205460ff1661039e565b50600192915050565b600081815260026020526040812054815b8181101561045a5760008481526002602090815260408083208484526001019091529020546001600160a01b03161561044857610445600184610908565b92505b610453600182610908565b9050610407565b5060008381526020818152604080832083805290915290205460ff161561048957610486600183610908565b91505b50919050565b60008281526001602052604090205461029b90335b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661023f576104e0816001600160a01b03166014610599565b6104eb836020610599565b6040516020016104fc929190610950565b60408051601f198184030181529082905262461bcd60e51b825261022c916004016109d1565b61052c8282610749565b61023f82826107a2565b610540828261081b565b60009182526002602081815260408085206001600160a01b03949094168086529284018083528186208054875260019095018352908520805473ffffffffffffffffffffffffffffffffffffffff191690559184525255565b606060006105a8836002610a04565b6105b3906002610908565b67ffffffffffffffff8111156105cb576105cb610a23565b6040519080825280601f01601f1916602001820160405280156105f5576020820181803683370190505b509050600360fc1b8160008151811061061057610610610a39565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061063f5761063f610a39565b60200101906001600160f81b031916908160001a9053506000610663846002610a04565b61066e906001610908565b90505b60018111156106f3577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106106af576106af610a39565b1a60f81b8282815181106106c5576106c5610a39565b60200101906001600160f81b031916908160001a90535060049490941c936106ec81610a4f565b9050610671565b5083156107425760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161022c565b9392505050565b6000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152600260205260408120805491600191906107c18385610908565b9091555050600092835260026020818152604080862084875260018101835281872080546001600160a01b0390971673ffffffffffffffffffffffffffffffffffffffff1990971687179055948652939091019052912055565b61082582826104a4565b6000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006020828403121561088d57600080fd5b5035919050565b600080604083850312156108a757600080fd5b8235915060208301356001600160a01b03811681146108c557600080fd5b809150509250929050565b600080604083850312156108e357600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b6000821982111561091b5761091b6108f2565b500190565b60005b8381101561093b578181015183820152602001610923565b8381111561094a576000848401525b50505050565b7f5065726d697373696f6e733a206163636f756e74200000000000000000000000815260008351610988816015850160208801610920565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060159184019182015283516109c5816026840160208801610920565b01602601949350505050565b60208152600082518060208401526109f0816040850160208701610920565b601f01601f19169190910160400192915050565b6000816000190483118215151615610a1e57610a1e6108f2565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081610a5e57610a5e6108f2565b50600019019056fea264697066735822122031bd3659cb552a91114530910dd849022d57bf837ada2c9a190b1446eab6268b64736f6c634300080c0033";

const isSuperArgs$7 = xs => xs.length > 1;

class PermissionsEnumerable__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$7(args)) {
      super(...args);
    } else {
      super(_abi$i, _bytecode$7, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$i);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$i, signerOrProvider);
  }

}

defineProperty._defineProperty(PermissionsEnumerable__factory, "bytecode", _bytecode$7);

defineProperty._defineProperty(PermissionsEnumerable__factory, "abi", _abi$i);

const _abi$h = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class PlatformFee__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$h);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$h, signerOrProvider);
  }

}

defineProperty._defineProperty(PlatformFee__factory, "abi", _abi$h);

const _abi$g = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class PrimarySale__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$g);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$g, signerOrProvider);
  }

}

defineProperty._defineProperty(PrimarySale__factory, "abi", _abi$g);

const _abi$f = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
class Royalty__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$f);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$f, signerOrProvider);
  }

}

defineProperty._defineProperty(Royalty__factory, "abi", _abi$f);

const _abi$e = [{
  inputs: [],
  name: "ApprovalCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "ApprovalToCurrentOwner",
  type: "error"
}, {
  inputs: [],
  name: "ApproveToCaller",
  type: "error"
}, {
  inputs: [],
  name: "BalanceQueryForZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "MintZeroQuantity",
  type: "error"
}, {
  inputs: [],
  name: "OwnerQueryForNonexistentToken",
  type: "error"
}, {
  inputs: [],
  name: "TransferCallerNotOwnerNorApproved",
  type: "error"
}, {
  inputs: [],
  name: "TransferFromIncorrectOwner",
  type: "error"
}, {
  inputs: [],
  name: "TransferToNonERC721ReceiverImplementer",
  type: "error"
}, {
  inputs: [],
  name: "TransferToZeroAddress",
  type: "error"
}, {
  inputs: [],
  name: "URIQueryForNonexistentToken",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    indexed: false,
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "condition",
    type: "tuple"
  }, {
    indexed: false,
    internalType: "bool",
    name: "resetEligibility",
    type: "bool"
  }],
  name: "ClaimConditionUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "prevURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "string",
    name: "newURI",
    type: "string"
  }],
  name: "ContractURIUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  name: "TokenURIRevealed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "claimer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityClaimed",
    type: "uint256"
  }],
  name: "TokensClaimed",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "startTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endTokenId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "baseURI",
    type: "string"
  }, {
    indexed: false,
    internalType: "bytes",
    name: "encryptedBaseURI",
    type: "bytes"
  }],
  name: "TokensLazyMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "claim",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "claimCondition",
  outputs: [{
    internalType: "uint256",
    name: "startTimestamp",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "maxClaimableSupply",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "supplyClaimed",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "quantityLimitPerTransaction",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "waitTimeInSecondsBetweenClaims",
    type: "uint256"
  }, {
    internalType: "bytes32",
    name: "merkleRoot",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "pricePerToken",
    type: "uint256"
  }, {
    internalType: "address",
    name: "currency",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }, {
    internalType: "bytes",
    name: "key",
    type: "bytes"
  }],
  name: "encryptDecrypt",
  outputs: [{
    internalType: "bytes",
    name: "result",
    type: "bytes"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "encryptedData",
  outputs: [{
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getBaseURICount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }],
  name: "getBatchIdAtIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }],
  name: "getClaimTimestamp",
  outputs: [{
    internalType: "uint256",
    name: "lastClaimedAt",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "nextValidClaimTimestamp",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "getRevealURI",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "member",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRoleWithSwitch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }, {
    internalType: "uint128",
    name: "_platformFeeBps",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_batchId",
    type: "uint256"
  }],
  name: "isEncryptedBatch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_baseURIForTokens",
    type: "string"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "lazyMint",
  outputs: [{
    internalType: "uint256",
    name: "batchId",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_index",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_key",
    type: "bytes"
  }],
  name: "reveal",
  outputs: [{
    internalType: "string",
    name: "revealedURI",
    type: "string"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "startTimestamp",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "maxClaimableSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "supplyClaimed",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "quantityLimitPerTransaction",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "waitTimeInSecondsBetweenClaims",
      type: "uint256"
    }, {
      internalType: "bytes32",
      name: "merkleRoot",
      type: "bytes32"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }],
    internalType: "struct IClaimCondition.ClaimCondition",
    name: "_condition",
    type: "tuple"
  }, {
    internalType: "bool",
    name: "_resetClaimEligibility",
    type: "bool"
  }],
  name: "setClaimConditions",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalMinted",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_currency",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_pricePerToken",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "verifyMaxQuantityPerTransaction",
    type: "bool"
  }],
  name: "verifyClaim",
  outputs: [],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_claimer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_quantity",
    type: "uint256"
  }, {
    components: [{
      internalType: "bytes32[]",
      name: "proof",
      type: "bytes32[]"
    }, {
      internalType: "uint256",
      name: "maxQuantityInAllowlist",
      type: "uint256"
    }],
    internalType: "struct IDropSinglePhase.AllowlistProof",
    name: "_allowlistProof",
    type: "tuple"
  }],
  name: "verifyClaimMerkleProof",
  outputs: [{
    internalType: "bool",
    name: "validMerkleProof",
    type: "bool"
  }, {
    internalType: "uint256",
    name: "merkleProofIndex",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$6 = "";

const isSuperArgs$6 = xs => xs.length > 1;

class SignatureDrop__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$6(args)) {
      super(...args);
    } else {
      super(_abi$e, _bytecode$6, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$e);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$e, signerOrProvider);
  }

}

defineProperty._defineProperty(SignatureDrop__factory, "bytecode", _bytecode$6);

defineProperty._defineProperty(SignatureDrop__factory, "abi", _abi$e);

const _abi$d = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class SignatureMintERC1155__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$d);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$d, signerOrProvider);
  }

}

defineProperty._defineProperty(SignatureMintERC1155__factory, "abi", _abi$d);

const _abi$c = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC1155.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class SignatureMintERC1155Upgradeable__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$c);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$c, signerOrProvider);
  }

}

defineProperty._defineProperty(SignatureMintERC1155Upgradeable__factory, "abi", _abi$c);

const _abi$b = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class SignatureMintERC20__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$b);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$b, signerOrProvider);
  }

}

defineProperty._defineProperty(SignatureMintERC20__factory, "abi", _abi$b);

const _abi$a = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC20.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class SignatureMintERC20Upgradeable__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$a);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$a, signerOrProvider);
  }

}

defineProperty._defineProperty(SignatureMintERC20Upgradeable__factory, "abi", _abi$a);

const _abi$9 = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class SignatureMintERC721__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$9);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$9, signerOrProvider);
  }

}

defineProperty._defineProperty(SignatureMintERC721__factory, "abi", _abi$9);

const _abi$8 = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ISignatureMintERC721.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "success",
    type: "bool"
  }, {
    internalType: "address",
    name: "signer",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
class SignatureMintERC721Upgradeable__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$8);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$8, signerOrProvider);
  }

}

defineProperty._defineProperty(SignatureMintERC721Upgradeable__factory, "abi", _abi$8);

const _abi$7 = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "bool",
    name: "isRestricted",
    type: "bool"
  }],
  name: "TransfersRestricted",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "TRANSFER_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "member",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "count",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRoleWithSwitch",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bool",
    name: "_toRestrict",
    type: "bool"
  }],
  name: "restrictTransfers",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}];
class SoulboundERC721A__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$7);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$7, signerOrProvider);
  }

}

defineProperty._defineProperty(SoulboundERC721A__factory, "abi", _abi$7);

const _abi$6 = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "contract IERC20Upgradeable",
    name: "token",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "ERC20PaymentReleased",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "shares",
    type: "uint256"
  }],
  name: "PayeeAdded",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "PaymentReceived",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "PaymentReleased",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "contract IERC20Upgradeable",
    name: "token",
    type: "address"
  }],
  name: "distribute",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "distribute",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address[]",
    name: "_payees",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "_shares",
    type: "uint256[]"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "payee",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "payeeCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address payable",
    name: "account",
    type: "address"
  }],
  name: "release",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "contract IERC20Upgradeable",
    name: "token",
    type: "address"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "release",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "contract IERC20Upgradeable",
    name: "token",
    type: "address"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "released",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "released",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "shares",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "contract IERC20Upgradeable",
    name: "token",
    type: "address"
  }],
  name: "totalReleased",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalReleased",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalShares",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  stateMutability: "payable",
  type: "receive"
}];
const _bytecode$5 = "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b62000039620000de565b620000a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000c4576000805461ffff19166101011790555b8015620000d7576000805461ff00191690555b506200010b565b6000620000f630620000fc60201b62000bdf1760201c565b15905090565b6001600160a01b03163b151590565b61271e806200011b6000396000f3fe6080604052600436106101ba5760003560e01c8063938e3d7b116100ec578063cb2ef6f71161008a578063d79779b211610064578063d79779b2146105d1578063e33b7de314610608578063e4fc6b6d1461061e578063e8a3d4851461063357600080fd5b8063cb2ef6f71461055f578063ce7c2ac21461057a578063d547741f146105b157600080fd5b8063a217fddf116100c6578063a217fddf146104dd578063ac9650d8146104f2578063b1a144371461051f578063ca15c8731461053f57600080fd5b8063938e3d7b1461046a5780639852595c1461048a578063a0a8e460146104c157600080fd5b8063406072a91161015957806363453ae11161013357806363453ae1146103ac5780638b83209b146103cc5780639010d07c1461040457806391d148541461042457600080fd5b8063406072a91461030c57806348b7504414610353578063572b6c051461037357600080fd5b8063248a9ca311610195578063248a9ca3146102865780632f2ff15d146102b657806336568abe146102d65780633a98ef39146102f657600080fd5b8062dbe1091461020f57806301ffc9a714610234578063191655871461026457600080fd5b3661020a577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be7706101e8610655565b604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b34801561021b57600080fd5b50610131545b6040519081526020015b60405180910390f35b34801561024057600080fd5b5061025461024f366004611f4c565b610664565b604051901515815260200161022b565b34801561027057600080fd5b5061028461027f366004611f8b565b61068f565b005b34801561029257600080fd5b506102216102a1366004611fa8565b600090815260c9602052604090206001015490565b3480156102c257600080fd5b506102846102d1366004611fc1565b610706565b3480156102e257600080fd5b506102846102f1366004611fc1565b610738565b34801561030257600080fd5b5061012d54610221565b34801561031857600080fd5b50610221610327366004611ff1565b6001600160a01b0391821660009081526101336020908152604080832093909416825291909152205490565b34801561035f57600080fd5b5061028461036e366004611ff1565b6107d0565b34801561037f57600080fd5b5061025461038e366004611f8b565b6001600160a01b031660009081526065602052604090205460ff1690565b3480156103b857600080fd5b506102846103c7366004611f8b565b61083f565b3480156103d857600080fd5b506103ec6103e7366004611fa8565b61087d565b6040516001600160a01b03909116815260200161022b565b34801561041057600080fd5b506103ec61041f36600461201f565b6108ae565b34801561043057600080fd5b5061025461043f366004611fc1565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561047657600080fd5b50610284610485366004612041565b6108cd565b34801561049657600080fd5b506102216104a5366004611f8b565b6001600160a01b03166000908152610130602052604090205490565b3480156104cd57600080fd5b506040516001815260200161022b565b3480156104e957600080fd5b50610221600081565b3480156104fe57600080fd5b5061051261050d3660046120b3565b6108ee565b60405161022b919061216e565b34801561052b57600080fd5b5061028461053a36600461230a565b6109e3565b34801561054b57600080fd5b5061022161055a366004611fa8565b610ad4565b34801561056b57600080fd5b506414dc1b1a5d60da1b610221565b34801561058657600080fd5b50610221610595366004611f8b565b6001600160a01b0316600090815261012f602052604090205490565b3480156105bd57600080fd5b506102846105cc366004611fc1565b610aeb565b3480156105dd57600080fd5b506102216105ec366004611f8b565b6001600160a01b03166000908152610132602052604090205490565b34801561061457600080fd5b5061012e54610221565b34801561062a57600080fd5b50610284610b13565b34801561063f57600080fd5b50610648610b50565b60405161022b919061241e565b600061065f610bee565b905090565b60006001600160e01b03198216635a05180f60e01b1480610689575061068982610c18565b92915050565b600061069a82610c4d565b9050806107025760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b60648201526084015b60405180910390fd5b5050565b600082815260c9602052604090206001015461072981610724610655565b610db5565b6107338383610e35565b505050565b610740610655565b6001600160a01b0316816001600160a01b0316146107c65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016106f9565b6107028282610e57565b60006107dc8383610e79565b9050806107335760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060448201526a191d59481c185e5b595b9d60aa1b60648201526084016106f9565b600061084b6101315490565b905060005b818110156107335761086a836108658361087d565b610e79565b508061087581612447565b915050610850565b6000610131828154811061089357610893612462565b6000918252602090912001546001600160a01b031692915050565b600082815260fb602052604081206108c6908361108d565b9392505050565b60006108db81610724610655565b6108e861015f8484611e3f565b50505050565b60608167ffffffffffffffff811115610909576109096121d0565b60405190808252806020026020018201604052801561093c57816020015b60608152602001906001900390816109275790505b50905060005b828110156109dc576109ac3085858481811061096057610960612462565b90506020028101906109729190612478565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061109992505050565b8282815181106109be576109be612462565b602002602001018190525080806109d490612447565b915050610942565b5092915050565b600054610100900460ff166109fe5760005460ff1615610a02565b303b155b610a655760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106f9565b600054610100900460ff16158015610a87576000805461ffff19166101011790555b610a908461118d565b610a9a83836111c8565b8451610aae9061015f906020880190611ec3565b50610aba600087611201565b8015610acc576000805461ff00191690555b505050505050565b600081815260fb602052604081206106899061120b565b600082815260c96020526040902060010154610b0981610724610655565b6107338383610e57565b6000610b1f6101315490565b905060005b8181101561070257610b3d610b388261087d565b610c4d565b5080610b4881612447565b915050610b24565b61015f8054610b5e906124c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8a906124c6565b8015610bd75780601f10610bac57610100808354040283529160200191610bd7565b820191906000526020600020905b815481529060010190602001808311610bba57829003601f168201915b505050505081565b6001600160a01b03163b151590565b3360009081526065602052604081205460ff1615610c13575060131936013560601c90565b503390565b60006001600160e01b03198216637965db0b60e01b148061068957506301ffc9a760e01b6001600160e01b0319831614610689565b6001600160a01b038116600090815261012f60205260408120548110610cc45760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084016106f9565b6000610cd061012e5490565b610cda9047612501565b90506000610d088483610d03876001600160a01b03166000908152610130602052604090205490565b611215565b905080610d19575060009392505050565b6001600160a01b0384166000908152610130602052604081208054839290610d42908490612501565b925050819055508061012e6000828254610d5c9190612501565b90915550610d6c9050848261125d565b604080516001600160a01b0386168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a19392505050565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661070257610df3816001600160a01b03166014611376565b610dfe836020611376565b604051602001610e0f929190612519565b60408051601f198184030181529082905262461bcd60e51b82526106f99160040161241e565b610e3f828261151f565b600082815260fb6020526040902061073390826115c2565b610e6182826115d7565b600082815260fb602052604090206107339082611678565b6001600160a01b038116600090815261012f60205260408120548110610ef05760405162461bcd60e51b815260206004820152602660248201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060448201526573686172657360d01b60648201526084016106f9565b6001600160a01b038316600090815261013260205260408120546040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa158015610f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f72919061259a565b610f7c9190612501565b90506000610fb68483610d0388886001600160a01b0391821660009081526101336020908152604080832093909416825291909152205490565b905080610fc857600092505050610689565b6001600160a01b0380861660009081526101336020908152604080832093881683529290529081208054839290611000908490612501565b90915550506001600160a01b038516600090815261013260205260408120805483929061102e908490612501565b9091555061103f905085858361168d565b604080516001600160a01b038681168252602082018490528716917f3be5b7a71e84ed12875d241991c70855ac5817d847039e17a9d895c1ceb0f18a910160405180910390a2949350505050565b60006108c683836116f4565b60606001600160a01b0383163b6111015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016106f9565b600080846001600160a01b03168460405161111c91906125b3565b600060405180830381855af49150503d8060008114611157576040519150601f19603f3d011682016040523d82523d6000602084013e61115c565b606091505b509150915061118482826040518060600160405280602781526020016126c26027913961171e565b95945050505050565b600054610100900460ff166111b45760405162461bcd60e51b81526004016106f9906125cf565b6111bc611757565b6111c581611780565b50565b600054610100900460ff166111ef5760405162461bcd60e51b81526004016106f9906125cf565b6111f7611757565b610702828261180f565b6107028282610e35565b6000610689825490565b61012d546001600160a01b038416600090815261012f602052604081205490918391611241908661261a565b61124b9190612639565b611255919061265b565b949350505050565b804710156112ad5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016106f9565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146112fa576040519150601f19603f3d011682016040523d82523d6000602084013e6112ff565b606091505b50509050806107335760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016106f9565b6060600061138583600261261a565b611390906002612501565b67ffffffffffffffff8111156113a8576113a86121d0565b6040519080825280601f01601f1916602001820160405280156113d2576020820181803683370190505b509050600360fc1b816000815181106113ed576113ed612462565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061141c5761141c612462565b60200101906001600160f81b031916908160001a905350600061144084600261261a565b61144b906001612501565b90505b60018111156114d0577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061148c5761148c612462565b1a60f81b8282815181106114a2576114a2612462565b60200101906001600160f81b031916908160001a90535060049490941c936114c981612672565b905061144e565b5083156108c65760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106f9565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1661070257600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561157e610655565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006108c6836001600160a01b038416611958565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff161561070257600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19169055611634610655565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006108c6836001600160a01b0384166119a7565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610733908490611a9a565b600082600001828154811061170b5761170b612462565b9060005260206000200154905092915050565b6060831561172d5750816108c6565b82511561173d5782518084602001fd5b8160405162461bcd60e51b81526004016106f9919061241e565b600054610100900460ff1661177e5760405162461bcd60e51b81526004016106f9906125cf565b565b600054610100900460ff166117a75760405162461bcd60e51b81526004016106f9906125cf565b60005b8151811015610702576001606560008484815181106117cb576117cb612462565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061180781612447565b9150506117aa565b600054610100900460ff166118365760405162461bcd60e51b81526004016106f9906125cf565b80518251146118ad5760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e64207368617260448201527f6573206c656e677468206d69736d61746368000000000000000000000000000060648201526084016106f9565b60008251116118fe5760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f2070617965657300000000000060448201526064016106f9565b60005b82518110156107335761194683828151811061191f5761191f612462565b602002602001015183838151811061193957611939612462565b6020026020010151611b6c565b8061195081612447565b915050611901565b600081815260018301602052604081205461199f57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610689565b506000610689565b60008181526001830160205260408120548015611a905760006119cb60018361265b565b85549091506000906119df9060019061265b565b9050818114611a445760008660000182815481106119ff576119ff612462565b9060005260206000200154905080876000018481548110611a2257611a22612462565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611a5557611a55612689565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610689565b6000915050610689565b6000611aef826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d649092919063ffffffff16565b8051909150156107335780806020019051810190611b0d919061269f565b6107335760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106f9565b6001600160a01b038216611bd75760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b60648201526084016106f9565b60008111611c275760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a2073686172657320617265203000000060448201526064016106f9565b6001600160a01b038216600090815261012f602052604090205415611ca25760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b60648201526084016106f9565b6101318054600181019091557fbd987ad6ccdb7c7567f7335ea839f95dc944431abcf935b6924f70215963db7301805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155600090815261012f6020526040902081905561012d54611d1a908290612501565b61012d55604080516001600160a01b0384168152602081018390527f40c340f65e17194d14ddddb073d3c9f888e3cb52b5aae0c6c7706b4fbc905fac910160405180910390a15050565b60606112558484600085856001600160a01b0385163b611dc65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106f9565b600080866001600160a01b03168587604051611de291906125b3565b60006040518083038185875af1925050503d8060008114611e1f576040519150601f19603f3d011682016040523d82523d6000602084013e611e24565b606091505b5091509150611e3482828661171e565b979650505050505050565b828054611e4b906124c6565b90600052602060002090601f016020900481019282611e6d5760008555611eb3565b82601f10611e865782800160ff19823516178555611eb3565b82800160010185558215611eb3579182015b82811115611eb3578235825591602001919060010190611e98565b50611ebf929150611f37565b5090565b828054611ecf906124c6565b90600052602060002090601f016020900481019282611ef15760008555611eb3565b82601f10611f0a57805160ff1916838001178555611eb3565b82800160010185558215611eb3579182015b82811115611eb3578251825591602001919060010190611f1c565b5b80821115611ebf5760008155600101611f38565b600060208284031215611f5e57600080fd5b81356001600160e01b0319811681146108c657600080fd5b6001600160a01b03811681146111c557600080fd5b600060208284031215611f9d57600080fd5b81356108c681611f76565b600060208284031215611fba57600080fd5b5035919050565b60008060408385031215611fd457600080fd5b823591506020830135611fe681611f76565b809150509250929050565b6000806040838503121561200457600080fd5b823561200f81611f76565b91506020830135611fe681611f76565b6000806040838503121561203257600080fd5b50508035926020909101359150565b6000806020838503121561205457600080fd5b823567ffffffffffffffff8082111561206c57600080fd5b818501915085601f83011261208057600080fd5b81358181111561208f57600080fd5b8660208285010111156120a157600080fd5b60209290920196919550909350505050565b600080602083850312156120c657600080fd5b823567ffffffffffffffff808211156120de57600080fd5b818501915085601f8301126120f257600080fd5b81358181111561210157600080fd5b8660208260051b85010111156120a157600080fd5b60005b83811015612131578181015183820152602001612119565b838111156108e85750506000910152565b6000815180845261215a816020860160208601612116565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156121c357603f198886030184526121b1858351612142565b94509285019290850190600101612195565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561220f5761220f6121d0565b604052919050565b600067ffffffffffffffff821115612231576122316121d0565b5060051b60200190565b600082601f83011261224c57600080fd5b8135602061226161225c83612217565b6121e6565b82815260059290921b8401810191818101908684111561228057600080fd5b8286015b848110156122a457803561229781611f76565b8352918301918301612284565b509695505050505050565b600082601f8301126122c057600080fd5b813560206122d061225c83612217565b82815260059290921b840181019181810190868411156122ef57600080fd5b8286015b848110156122a457803583529183019183016122f3565b600080600080600060a0868803121561232257600080fd5b853561232d81611f76565b945060208681013567ffffffffffffffff8082111561234b57600080fd5b818901915089601f83011261235f57600080fd5b813581811115612371576123716121d0565b612383601f8201601f191685016121e6565b8181528b8583860101111561239757600080fd5b818585018683013760009181019094018190529296506040890135929150808311156123c1578182fd5b6123cd8a848b0161223b565b955060608901359250808311156123e2578182fd5b6123ee8a848b0161223b565b94506080890135925080831115612403578182fd5b5050612411888289016122af565b9150509295509295909350565b6020815260006108c66020830184612142565b634e487b7160e01b600052601160045260246000fd5b600060001982141561245b5761245b612431565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261248f57600080fd5b83018035915067ffffffffffffffff8211156124aa57600080fd5b6020019150368190038213156124bf57600080fd5b9250929050565b600181811c908216806124da57607f821691505b602082108114156124fb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561251457612514612431565b500190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612551816017850160208801612116565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161258e816028840160208801612116565b01602801949350505050565b6000602082840312156125ac57600080fd5b5051919050565b600082516125c5818460208701612116565b9190910192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600081600019048311821515161561263457612634612431565b500290565b60008261265657634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561266d5761266d612431565b500390565b60008161268157612681612431565b506000190190565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156126b157600080fd5b815180151581146108c657600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122019069937fabba85acad3df1ac753a14c7eda2026d09fd728dd2b8175960b468264736f6c634300080c0033";

const isSuperArgs$5 = xs => xs.length > 1;

class Split__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$5(args)) {
      super(...args);
    } else {
      super(_abi$6, _bytecode$5, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$6);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$6, signerOrProvider);
  }

}

defineProperty._defineProperty(Split__factory, "bytecode", _bytecode$5);

defineProperty._defineProperty(Split__factory, "abi", _abi$6);

const _abi$5 = [{
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }],
  name: "getTokenCountOfBundle",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getTokenOfBundle",
  outputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }],
  name: "getUriOfBundle",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}];
class TokenBundle__factory {
  static createInterface() {
    return new ethers.utils.Interface(_abi$5);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$5, signerOrProvider);
  }

}

defineProperty._defineProperty(TokenBundle__factory, "abi", _abi$5);

const _abi$4 = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "uri",
    type: "string"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityMinted",
    type: "uint256"
  }],
  name: "TokensMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ITokenERC1155.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }],
  name: "TransferBatch",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "TransferSingle",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "string",
    name: "value",
    type: "string"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "URI",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "accounts",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }],
  name: "balanceOfBatch",
  outputs: [{
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }],
  name: "burnBatch",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }, {
    internalType: "uint128",
    name: "_platformFeeBps",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "string",
    name: "_uri",
    type: "string"
  }, {
    internalType: "uint256",
    name: "_amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC1155.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "platformFeeBps",
  outputs: [{
    internalType: "uint128",
    name: "",
    type: "uint128"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "platformFeeRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "ids",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeBatchTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "id",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "saleRecipientForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "uri",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pricePerToken",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC1155.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$4 = "";

const isSuperArgs$4 = xs => xs.length > 1;

class TokenERC1155__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$4(args)) {
      super(...args);
    } else {
      super(_abi$4, _bytecode$4, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$4);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$4, signerOrProvider);
  }

}

defineProperty._defineProperty(TokenERC1155__factory, "bytecode", _bytecode$4);

defineProperty._defineProperty(TokenERC1155__factory, "abi", _abi$4);

const _abi$3 = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegator",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "fromDelegate",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "toDelegate",
    type: "address"
  }],
  name: "DelegateChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "delegate",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "previousBalance",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newBalance",
    type: "uint256"
  }],
  name: "DelegateVotesChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "Paused",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "quantityMinted",
    type: "uint256"
  }],
  name: "TokensMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ITokenERC20.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "Unpaused",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "DOMAIN_SEPARATOR",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "burnFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint32",
    name: "pos",
    type: "uint32"
  }],
  name: "checkpoints",
  outputs: [{
    components: [{
      internalType: "uint32",
      name: "fromBlock",
      type: "uint32"
    }, {
      internalType: "uint224",
      name: "votes",
      type: "uint224"
    }],
    internalType: "struct ERC20VotesUpgradeable.Checkpoint",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "decimals",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "subtractedValue",
    type: "uint256"
  }],
  name: "decreaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }],
  name: "delegate",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "delegatee",
    type: "address"
  }, {
    internalType: "uint256",
    name: "nonce",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "expiry",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "delegateBySig",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "delegates",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastTotalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getPastVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "getVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "addedValue",
    type: "uint256"
  }],
  name: "increaseAllowance",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_primarySaleRecipient",
    type: "address"
  }, {
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "mintTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC20.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "nonces",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "numCheckpoints",
  outputs: [{
    internalType: "uint32",
    name: "",
    type: "uint32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "pause",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "paused",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "spender",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "permit",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amount",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "unpause",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "quantity",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC20.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$3 = "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b62000039620000de565b620000a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000c4576000805461ffff19166101011790555b8015620000d7576000805461ff00191690555b506200010b565b6000620000f630620000fc60201b62001aae1760201c565b15905090565b6001600160a01b03163b151590565b614975806200011b6000396000f3fe6080604052600436106103295760003560e01c80637ecebe00116101a5578063a9059cbb116100ec578063d45573f611610095578063dd62ed3e1161006f578063dd62ed3e146109a3578063dfad80a6146109e9578063e8a3d48514610a09578063f1127ed814610a1e57600080fd5b8063d45573f61461092c578063d505accf14610963578063d547741f1461098357600080fd5b8063c3cda520116100c6578063c3cda520146108cc578063ca15c873146108ec578063cb2ef6f71461090c57600080fd5b8063a9059cbb14610840578063ac9650d814610860578063c1b606e21461088d57600080fd5b8063938e3d7b1161014e578063a0a8e46011610128578063a0a8e460146107f7578063a217fddf1461080b578063a457c2d71461082057600080fd5b8063938e3d7b146107a257806395d89b41146107c25780639ab24eb0146107d757600080fd5b80638f0fefbb1161017f5780638f0fefbb146107285780639010d07c1461073b57806391d148541461075b57600080fd5b80637ecebe00146106d35780638456cb59146106f35780638e539e8c1461070857600080fd5b80633950935111610274578063587cde1e1161021d5780636f4f2837116101f75780636f4f2837146106285780636fcfff451461064857806370a082311461067d57806379cc6790146106b357600080fd5b8063587cde1e146105b55780635c19a95c146105ef5780635c975abb1461060f57600080fd5b806342966c681161024e57806342966c681461053c578063449a52f81461055c578063572b6c051461057c57600080fd5b806339509351146104e75780633a46b1a8146105075780633f4ba83a1461052757600080fd5b806323b872dd116102d6578063313ce567116102b0578063313ce567146104905780633644e515146104b257806336568abe146104c757600080fd5b806323b872dd1461041f578063248a9ca31461043f5780632f2ff15d1461047057600080fd5b8063095ea7b311610307578063095ea7b3146103be57806318160ddd146103de5780631e7ac488146103fd57600080fd5b806301ffc9a71461032e57806306fdde0314610363578063079fe40e14610385575b600080fd5b34801561033a57600080fd5b5061034e610349366004613f26565b610a68565b60405190151581526020015b60405180910390f35b34801561036f57600080fd5b50610378610a93565b60405161035a9190613fa8565b34801561039157600080fd5b506102c3546103a6906001600160a01b031681565b6040516001600160a01b03909116815260200161035a565b3480156103ca57600080fd5b5061034e6103d9366004613fd7565b610b25565b3480156103ea57600080fd5b5060cb545b60405190815260200161035a565b34801561040957600080fd5b5061041d610418366004613fd7565b610b47565b005b34801561042b57600080fd5b5061034e61043a366004614001565b610c1f565b34801561044b57600080fd5b506103ef61045a36600461403d565b600090815261025c602052604090206001015490565b34801561047c57600080fd5b5061041d61048b366004614056565b610c4f565b34801561049c57600080fd5b5060125b60405160ff909116815260200161035a565b3480156104be57600080fd5b506103ef610c7d565b3480156104d357600080fd5b5061041d6104e2366004614056565b610c8c565b3480156104f357600080fd5b5061034e610502366004613fd7565b610d28565b34801561051357600080fd5b506103ef610522366004613fd7565b610d74565b34801561053357600080fd5b5061041d610de8565b34801561054857600080fd5b5061041d61055736600461403d565b610e58565b34801561056857600080fd5b5061041d610577366004613fd7565b610e6c565b34801561058857600080fd5b5061034e610597366004614082565b6001600160a01b031660009081526065602052604090205460ff1690565b3480156105c157600080fd5b506103a66105d0366004614082565b6001600160a01b0390811660009081526101f860205260409020541690565b3480156105fb57600080fd5b5061041d61060a366004614082565b610edc565b34801561061b57600080fd5b5061012d5460ff1661034e565b34801561063457600080fd5b5061041d610643366004614082565b610eed565b34801561065457600080fd5b50610668610663366004614082565b610f47565b60405163ffffffff909116815260200161035a565b34801561068957600080fd5b506103ef610698366004614082565b6001600160a01b0316600090815260c9602052604090205490565b3480156106bf57600080fd5b5061041d6106ce366004613fd7565b610f6a565b3480156106df57600080fd5b506103ef6106ee366004614082565b610f86565b3480156106ff57600080fd5b5061041d610fa5565b34801561071457600080fd5b506103ef61072336600461403d565b611013565b61041d6107363660046140df565b611070565b34801561074757600080fd5b506103a661075636600461413c565b6111da565b34801561076757600080fd5b5061034e610776366004614056565b600091825261025c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156107ae57600080fd5b5061041d6107bd36600461415e565b6111f3565b3480156107ce57600080fd5b50610378611214565b3480156107e357600080fd5b506103ef6107f2366004614082565b611223565b34801561080357600080fd5b5060016104a0565b34801561081757600080fd5b506103ef600081565b34801561082c57600080fd5b5061034e61083b366004613fd7565b6112ac565b34801561084c57600080fd5b5061034e61085b366004613fd7565b611356565b34801561086c57600080fd5b5061088061087b3660046141a0565b61136e565b60405161035a9190614215565b34801561089957600080fd5b506108ad6108a83660046140df565b611463565b6040805192151583526001600160a01b0390911660208301520161035a565b3480156108d857600080fd5b5061041d6108e7366004614288565b6114dd565b3480156108f857600080fd5b506103ef61090736600461403d565b611613565b34801561091857600080fd5b50690546f6b656e45524332360b41b6103ef565b34801561093857600080fd5b506102c2546102c154604080516001600160a01b03909316835261ffff90911660208301520161035a565b34801561096f57600080fd5b5061041d61097e3660046142e0565b61162b565b34801561098f57600080fd5b5061041d61099e366004614056565b611772565b3480156109af57600080fd5b506103ef6109be36600461434a565b6001600160a01b03918216600090815260ca6020908152604080832093909416825291909152205490565b3480156109f557600080fd5b5061041d610a043660046144a7565b61179b565b348015610a1557600080fd5b5061037861199a565b348015610a2a57600080fd5b50610a3e610a39366004614590565b611a29565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161035a565b60006001600160e01b03198216635a05180f60e01b1480610a8d5750610a8d82611abd565b92915050565b606060cc8054610aa2906145d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ace906145d0565b8015610b1b5780601f10610af057610100808354040283529160200191610b1b565b820191906000526020600020905b815481529060010190602001808311610afe57829003601f168201915b5050505050905090565b600080610b30611af2565b9050610b3d818585611afc565b5060019392505050565b6000610b5a81610b55611af2565b611c20565b612710821115610ba15760405162461bcd60e51b815260206004820152600d60248201526c313839901e1e9018981818181760991b60448201526064015b60405180910390fd5b6102c180546fffffffffffffffffffffffffffffffff191667ffffffffffffffff84161790556102c280546001600160a01b0385166001600160a01b031990911681179091556040518381527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f183049060200160405180910390a2505050565b600080610c2a611af2565b9050610c37858285611ca1565b610c42858585611d2d565b60019150505b9392505050565b600082815261025c6020526040902060010154610c6e81610b55611af2565b610c788383611f0c565b505050565b6000610c87611f2f565b905090565b610c94611af2565b6001600160a01b0316816001600160a01b031614610d1a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610b98565b610d248282611fac565b5050565b600080610d33611af2565b6001600160a01b03808216600090815260ca6020908152604080832093891683529290522054909150610b3d9082908690610d6f90879061461b565b611afc565b6000438210610dc55760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610b98565b6001600160a01b03831660009081526101f960205260409020610c489083611fcf565b610e147f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610776611af2565b610e4e5760405162461bcd60e51b815260206004820152600b60248201526a3737ba103830bab9b2b91760a91b6044820152606401610b98565b610e5661208c565b565b610e69610e63611af2565b82612130565b50565b610e987f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610776611af2565b610ed25760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b4b73a32b91760a91b6044820152606401610b98565b610d24828261213a565b610e69610ee7611af2565b8261218b565b6000610efb81610b55611af2565b6102c380546001600160a01b0319166001600160a01b0384169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a25050565b6001600160a01b03811660009081526101f96020526040812054610a8d90612206565b610f7c82610f76611af2565b83611ca1565b610d248282612130565b6001600160a01b03811660009081526101c56020526040812054610a8d565b610fd17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610776611af2565b61100b5760405162461bcd60e51b815260206004820152600b60248201526a3737ba103830bab9b2b91760a91b6044820152606401610b98565b610e5661226f565b60004382106110645760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610b98565b610a8d6101fa83611fcf565b600260015414156110c35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b98565b600260015560006110d58484846122fa565b90506000806110e76020870187614082565b6001600160a01b031614611107576111026020860186614082565b61110f565b61110f611af2565b90506000806111246040880160208901614082565b6001600160a01b031614611147576111426040870160208801614082565b611155565b6102c3546001600160a01b03165b90506111758161116b60a0890160808a01614082565b8860600135612410565b61118382876040013561213a565b816001600160a01b0316836001600160a01b03167fc4d88b1adde72eb5acf63f3e219ef5b223262233acf507c3b171277c91973c67886040516111c6919061464a565b60405180910390a350506001805550505050565b600082815261028e60205260408120610c4890836124f3565b600061120181610b55611af2565b61120e6102c08484613e1d565b50505050565b606060cd8054610aa2906145d0565b6001600160a01b03811660009081526101f960205260408120548015611299576001600160a01b03831660009081526101f9602052604090206112676001836146e0565b81548110611277576112776146f7565b60009182526020909120015464010000000090046001600160e01b031661129c565b60005b6001600160e01b03169392505050565b6000806112b7611af2565b6001600160a01b03808216600090815260ca60209081526040808320938916835292905220549091508381101561133e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610b98565b61134b8286868403611afc565b506001949350505050565b600080611361611af2565b9050610b3d818585611d2d565b60608167ffffffffffffffff81111561138957611389614374565b6040519080825280602002602001820160405280156113bc57816020015b60608152602001906001900390816113a75790505b50905060005b8281101561145c5761142c308585848181106113e0576113e06146f7565b90506020028101906113f2919061470d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506124ff92505050565b82828151811061143e5761143e6146f7565b6020026020010181905250808061145490614754565b9150506113c2565b5092915050565b60008060006114738686866125f3565b60e087013560009081526102c4602052604090205490915060ff161580156114d257506001600160a01b03811660009081527fcf538f10c1f1215bbb13c92e93f1a42742e59e1630f77a3f0756e058f253e6dd602052604090205460ff165b969095509350505050565b8342111561152d5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610b98565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906115a79061159f9060a00160405160208183030381529060405280519060200120612657565b8585856126a5565b90506115b2816126cd565b86146116005760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610b98565b61160a818861218b565b50505050505050565b600081815261028e60205260408120610a8d906126f6565b8342111561167b5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610b98565b60006101c65488888861168d8c6126cd565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006116e882612657565b905060006116f8828787876126a5565b9050896001600160a01b0316816001600160a01b03161461175b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610b98565b6117668a8a8a611afc565b50505050505050505050565b600082815261025c602052604090206001015461179181610b55611af2565b610c788383611fac565b600054610100900460ff166117b65760005460ff16156117ba565b303b155b61181d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b98565b600054610100900460ff1615801561183f576000805461ffff19166101011790555b61184885612700565b6118518861278f565b61185b88886127e2565b855161186f906102c0906020890190613e9d565b506102c380546001600160a01b038087166001600160a01b0319928316179092556102c28054928616929091169190911790556102c180546001600160801b0384166fffffffffffffffffffffffffffffffff199091161790556118d460008a612830565b6118fe7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c8a612830565b6119287f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68a612830565b6119527f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8a612830565b61197d7f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c6000612830565b801561198f576000805461ff00191690555b505050505050505050565b6102c080546119a8906145d0565b80601f01602080910402602001604051908101604052809291908181526020018280546119d4906145d0565b8015611a215780601f106119f657610100808354040283529160200191611a21565b820191906000526020600020905b815481529060010190602001808311611a0457829003601f168201915b505050505081565b60408051808201909152600080825260208201526001600160a01b03831660009081526101f960205260409020805463ffffffff8416908110611a6e57611a6e6146f7565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b03163b151590565b60006001600160e01b03198216637965db0b60e01b1480610a8d57506301ffc9a760e01b6001600160e01b0319831614610a8d565b6000610c8761283a565b6001600160a01b038316611b5e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b98565b6001600160a01b038216611bbf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b98565b6001600160a01b03838116600081815260ca602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600082815261025c602090815260408083206001600160a01b038516845290915290205460ff16610d2457611c5f816001600160a01b03166014612864565b611c6a836020612864565b604051602001611c7b92919061476f565b60408051601f198184030181529082905262461bcd60e51b8252610b9891600401613fa8565b6001600160a01b03838116600090815260ca6020908152604080832093861683529290522054600019811461120e5781811015611d205760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610b98565b61120e8484848403611afc565b6001600160a01b038316611d915760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b98565b6001600160a01b038216611df35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b98565b611dfe838383612a0d565b6001600160a01b038316600090815260c9602052604090205481811015611e765760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610b98565b6001600160a01b03808516600090815260c96020526040808220858503905591851681529081208054849290611ead90849061461b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611ef991815260200190565b60405180910390a361120e848484612b5c565b611f168282612b67565b600082815261028e60205260409020610c789082612c0c565b6000610c877f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611f5f6101915490565b610192546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b611fb68282612c21565b600082815261028e60205260409020610c789082612cc4565b8154600090815b81811015612033576000611fea8284612cd9565b905084868281548110611fff57611fff6146f7565b60009182526020909120015463ffffffff16111561201f5780925061202d565b61202a81600161461b565b91505b50611fd6565b811561207757846120456001846146e0565b81548110612055576120556146f7565b60009182526020909120015464010000000090046001600160e01b031661207a565b60005b6001600160e01b031695945050505050565b61012d5460ff166120df5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610b98565b61012d805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa612113611af2565b6040516001600160a01b03909116815260200160405180910390a1565b610d248282612cf4565b6121448282612d0d565b816001600160a01b03167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a42738260405161217f91815260200190565b60405180910390a25050565b6001600160a01b0382811660008181526101f860208181526040808420805460c9845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461120e828483612d17565b600063ffffffff82111561226b5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610b98565b5090565b61012d5460ff16156122c35760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610b98565b61012d805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612113611af2565b600080600061230a868686611463565b915091508161235b5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610b98565b4261236c60c0880160a089016147f0565b6001600160801b03161115801561239b57504261238f60e0880160c089016147f0565b6001600160801b031610155b6123e75760405162461bcd60e51b815260206004820152600f60248201527f72657175657374206578706972656400000000000000000000000000000000006044820152606401610b98565b60e086013560009081526102c460205260409020805460ff191660011790559150509392505050565b8061241a57505050565b6102c15460009061271090612438906001600160801b03168461480b565b612442919061482a565b90506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156124b8578134146124b85760405162461bcd60e51b815260206004820152601660248201527f6d7573742073656e6420746f74616c2070726963652e000000000000000000006044820152606401610b98565b6124d7836124c4611af2565b6102c2546001600160a01b031684612e56565b61120e836124e3611af2565b866124ee85876146e0565b612e56565b6000610c488383612ea0565b60606001600160a01b0383163b6125675760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610b98565b600080846001600160a01b031684604051612582919061484c565b600060405180830381855af49150503d80600081146125bd576040519150601f19603f3d011682016040523d82523d6000602084013e6125c2565b606091505b50915091506125ea828260405180606001604052806027815260200161491960279139612eca565b95945050505050565b600061264f83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612649925061263d9150889050612f03565b80519060200120612657565b90612ff7565b949350505050565b6000610a8d612664611f2f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006126b68787878761301b565b915091506126c381613108565b5095945050505050565b6001600160a01b03811660009081526101c5602052604090208054600181018255905b50919050565b6000610a8d825490565b600054610100900460ff166127275760405162461bcd60e51b8152600401610b9890614868565b60005b8151811015610d245760016065600084848151811061274b5761274b6146f7565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061278781614754565b91505061272a565b600054610100900460ff166127b65760405162461bcd60e51b8152600401610b9890614868565b6127d981604051806040016040528060018152602001603160f81b8152506132c3565b610e6981613306565b600054610100900460ff166128095760405162461bcd60e51b8152600401610b9890614868565b815161281c9060cc906020850190613e9d565b508051610c789060cd906020840190613e9d565b610d248282611f0c565b3360009081526065602052604081205460ff161561285f575060131936013560601c90565b503390565b6060600061287383600261480b565b61287e90600261461b565b67ffffffffffffffff81111561289657612896614374565b6040519080825280601f01601f1916602001820160405280156128c0576020820181803683370190505b509050600360fc1b816000815181106128db576128db6146f7565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061290a5761290a6146f7565b60200101906001600160f81b031916908160001a905350600061292e84600261480b565b61293990600161461b565b90505b60018111156129be577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061297a5761297a6146f7565b1a60f81b828281518110612990576129906146f7565b60200101906001600160f81b031916908160001a90535060049490941c936129b7816148b3565b905061293c565b508315610c485760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610b98565b612a18838383613355565b600080527fb5795f43f55584b15429e81b8f953f506f3fda5f74ae532bfc787216c93b37366020527fd61a19a5865dc34bcdb6a4cbf3d3d73edfd2abc9fbcb992f6e6da26bc3a636695460ff16158015612a7a57506001600160a01b03831615155b8015612a8e57506001600160a01b03821615155b15610c78576001600160a01b03831660009081527fb5795f43f55584b15429e81b8f953f506f3fda5f74ae532bfc787216c93b3736602052604090205460ff1680612b1057506001600160a01b03821660009081527fb5795f43f55584b15429e81b8f953f506f3fda5f74ae532bfc787216c93b3736602052604090205460ff165b610c785760405162461bcd60e51b815260206004820152601560248201527f7472616e736665727320726573747269637465642e00000000000000000000006044820152606401610b98565b610c788383836133bc565b600082815261025c602090815260408083206001600160a01b038516845290915290205460ff16610d2457600082815261025c602090815260408083206001600160a01b03851684529091529020805460ff19166001179055612bc8611af2565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610c48836001600160a01b0384166133ef565b600082815261025c602090815260408083206001600160a01b038516845290915290205460ff1615610d2457600082815261025c602090815260408083206001600160a01b03851684529091529020805460ff19169055612c80611af2565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000610c48836001600160a01b03841661343e565b6000612ce8600284841861482a565b610c489084841661461b565b612cfe8282613531565b61120e6101fa6136928361369e565b610d248282613817565b816001600160a01b0316836001600160a01b031614158015612d395750600081115b15610c78576001600160a01b03831615612dc8576001600160a01b03831660009081526101f9602052604081208190612d75906136928561369e565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612dbd929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610c78576001600160a01b03821660009081526101f9602052604081208190612dff906138af8561369e565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612e47929190918252602082015260400190565b60405180910390a25050505050565b80612e605761120e565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612e9457612e8f82826138bb565b61120e565b61120e8484848461395e565b6000826000018281548110612eb757612eb76146f7565b9060005260206000200154905092915050565b60608315612ed9575081610c48565b825115612ee95782518084602001fd5b8160405162461bcd60e51b8152600401610b989190613fa8565b60607fbac245dbd9b8b2bb334c0675db20a7a7a8506de563990c4ce3207f4c3c5b75e1612f336020840184614082565b612f436040850160208601614082565b60408501356060860135612f5d60a0880160808901614082565b612f6d60c0890160a08a016147f0565b612f7d60e08a0160c08b016147f0565b6040805160208101999099526001600160a01b03978816908901529486166060880152608087019390935260a086019190915290921660c08401526001600160801b0391821660e0808501919091529116610100830152830135610120820152610140016040516020818303038152906040529050919050565b600080600061300685856139b7565b9150915061301381613108565b509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561305257506000905060036130ff565b8460ff16601b1415801561306a57508460ff16601c14155b1561307b57506000905060046130ff565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156130cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166130f8576000600192509250506130ff565b9150600090505b94509492505050565b600081600481111561311c5761311c6148ca565b14156131255750565b6001816004811115613139576131396148ca565b14156131875760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610b98565b600281600481111561319b5761319b6148ca565b14156131e95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b98565b60038160048111156131fd576131fd6148ca565b14156132565760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b98565b600481600481111561326a5761326a6148ca565b1415610e695760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610b98565b600054610100900460ff166132ea5760405162461bcd60e51b8152600401610b9890614868565b8151602092830120815191909201206101919190915561019255565b600054610100900460ff1661332d5760405162461bcd60e51b8152600401610b9890614868565b507f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c96101c655565b61012d5460ff1615610c785760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610b98565b6001600160a01b0383811660009081526101f86020526040808220548584168352912054610c7892918216911683612d17565b600081815260018301602052604081205461343657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a8d565b506000610a8d565b600081815260018301602052604081205480156135275760006134626001836146e0565b8554909150600090613476906001906146e0565b90508181146134db576000866000018281548110613496576134966146f7565b90600052602060002001549050808760000184815481106134b9576134b96146f7565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806134ec576134ec6148e0565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610a8d565b6000915050610a8d565b6001600160a01b0382166135915760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610b98565b61359d82600083612a0d565b6001600160a01b038216600090815260c96020526040902054818110156136115760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610b98565b6001600160a01b038316600090815260c960205260408120838303905560cb80548492906136409084906146e0565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610c7883600084612b5c565b6000610c4882846146e0565b8254600090819080156136e957856136b76001836146e0565b815481106136c7576136c76146f7565b60009182526020909120015464010000000090046001600160e01b03166136ec565b60005b6001600160e01b0316925061370583858763ffffffff16565b91506000811180156137435750438661371f6001846146e0565b8154811061372f5761372f6146f7565b60009182526020909120015463ffffffff16145b156137a35761375182613a27565b8661375d6001846146e0565b8154811061376d5761376d6146f7565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b0316021790555061380e565b8560405180604001604052806137b843612206565b63ffffffff1681526020016137cc85613a27565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b6138218282613a90565b60cb546001600160e01b0310156138a05760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152608401610b98565b61120e6101fa6138af8361369e565b6000610c48828461461b565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613908576040519150601f19603f3d011682016040523d82523d6000602084013e61390d565b606091505b5050905080610c785760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610b98565b816001600160a01b0316836001600160a01b0316141561397d5761120e565b6001600160a01b0383163014156139a257612e8f6001600160a01b0385168383613b83565b61120e6001600160a01b038516848484613be6565b6000808251604114156139ee5760208301516040840151606085015160001a6139e28782858561301b565b94509450505050613a20565b825160401415613a185760208301516040840151613a0d868383613c1e565b935093505050613a20565b506000905060025b9250929050565b60006001600160e01b0382111561226b5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610b98565b6001600160a01b038216613ae65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b98565b613af260008383612a0d565b8060cb6000828254613b04919061461b565b90915550506001600160a01b038216600090815260c9602052604081208054839290613b3190849061461b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610d2460008383612b5c565b6040516001600160a01b038316602482015260448101829052610c7890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613c70565b6040516001600160a01b038085166024830152831660448201526064810182905261120e9085906323b872dd60e01b90608401613baf565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681613c5460ff86901c601b61461b565b9050613c628782888561301b565b935093505050935093915050565b6000613cc5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613d429092919063ffffffff16565b805190915015610c785780806020019051810190613ce391906148f6565b610c785760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b98565b606061264f8484600085856001600160a01b0385163b613da45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b98565b600080866001600160a01b03168587604051613dc0919061484c565b60006040518083038185875af1925050503d8060008114613dfd576040519150601f19603f3d011682016040523d82523d6000602084013e613e02565b606091505b5091509150613e12828286612eca565b979650505050505050565b828054613e29906145d0565b90600052602060002090601f016020900481019282613e4b5760008555613e91565b82601f10613e645782800160ff19823516178555613e91565b82800160010185558215613e91579182015b82811115613e91578235825591602001919060010190613e76565b5061226b929150613f11565b828054613ea9906145d0565b90600052602060002090601f016020900481019282613ecb5760008555613e91565b82601f10613ee457805160ff1916838001178555613e91565b82800160010185558215613e91579182015b82811115613e91578251825591602001919060010190613ef6565b5b8082111561226b5760008155600101613f12565b600060208284031215613f3857600080fd5b81356001600160e01b031981168114610c4857600080fd5b60005b83811015613f6b578181015183820152602001613f53565b8381111561120e5750506000910152565b60008151808452613f94816020860160208601613f50565b601f01601f19169290920160200192915050565b602081526000610c486020830184613f7c565b80356001600160a01b0381168114613fd257600080fd5b919050565b60008060408385031215613fea57600080fd5b613ff383613fbb565b946020939093013593505050565b60008060006060848603121561401657600080fd5b61401f84613fbb565b925061402d60208501613fbb565b9150604084013590509250925092565b60006020828403121561404f57600080fd5b5035919050565b6000806040838503121561406957600080fd5b8235915061407960208401613fbb565b90509250929050565b60006020828403121561409457600080fd5b610c4882613fbb565b60008083601f8401126140af57600080fd5b50813567ffffffffffffffff8111156140c757600080fd5b602083019150836020828501011115613a2057600080fd5b60008060008385036101208112156140f657600080fd5b6101008082121561410657600080fd5b859450840135905067ffffffffffffffff81111561412357600080fd5b61412f8682870161409d565b9497909650939450505050565b6000806040838503121561414f57600080fd5b50508035926020909101359150565b6000806020838503121561417157600080fd5b823567ffffffffffffffff81111561418857600080fd5b6141948582860161409d565b90969095509350505050565b600080602083850312156141b357600080fd5b823567ffffffffffffffff808211156141cb57600080fd5b818501915085601f8301126141df57600080fd5b8135818111156141ee57600080fd5b8660208260051b850101111561420357600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561426a57603f19888603018452614258858351613f7c565b9450928501929085019060010161423c565b5092979650505050505050565b803560ff81168114613fd257600080fd5b60008060008060008060c087890312156142a157600080fd5b6142aa87613fbb565b955060208701359450604087013593506142c660608801614277565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156142fb57600080fd5b61430488613fbb565b965061431260208901613fbb565b9550604088013594506060880135935061432e60808901614277565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561435d57600080fd5b61436683613fbb565b915061407960208401613fbb565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156143b3576143b3614374565b604052919050565b600082601f8301126143cc57600080fd5b813567ffffffffffffffff8111156143e6576143e6614374565b6143f9601f8201601f191660200161438a565b81815284602083860101111561440e57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261443c57600080fd5b8135602067ffffffffffffffff82111561445857614458614374565b8160051b61446782820161438a565b928352848101820192828101908785111561448157600080fd5b83870192505b84831015613e125761449883613fbb565b82529183019190830190614487565b600080600080600080600080610100898b0312156144c457600080fd5b6144cd89613fbb565b9750602089013567ffffffffffffffff808211156144ea57600080fd5b6144f68c838d016143bb565b985060408b013591508082111561450c57600080fd5b6145188c838d016143bb565b975060608b013591508082111561452e57600080fd5b61453a8c838d016143bb565b965060808b013591508082111561455057600080fd5b5061455d8b828c0161442b565b94505061456c60a08a01613fbb565b925061457a60c08a01613fbb565b915060e089013590509295985092959890939650565b600080604083850312156145a357600080fd5b6145ac83613fbb565b9150602083013563ffffffff811681146145c557600080fd5b809150509250929050565b600181811c908216806145e457607f821691505b602082108114156126f057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561462e5761462e614605565b500190565b80356001600160801b0381168114613fd257600080fd5b61010081016001600160a01b038061466185613fbb565b1683528061467160208601613fbb565b16602084015260408401356040840152606084013560608401528061469860808601613fbb565b166080840152506146ab60a08401614633565b6001600160801b0380821660a0850152806146c860c08701614633565b1660c0850152505060e083013560e083015292915050565b6000828210156146f2576146f2614605565b500390565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261472457600080fd5b83018035915067ffffffffffffffff82111561473f57600080fd5b602001915036819003821315613a2057600080fd5b600060001982141561476857614768614605565b5060010190565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516147a7816017850160208801613f50565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516147e4816028840160208801613f50565b01602801949350505050565b60006020828403121561480257600080fd5b610c4882614633565b600081600019048311821515161561482557614825614605565b500290565b60008261484757634e487b7160e01b600052601260045260246000fd5b500490565b6000825161485e818460208701613f50565b9190910192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000816148c2576148c2614605565b506000190190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006020828403121561490857600080fd5b81518015158114610c4857600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c2d0f92c6754e079e19f0f020458303cb6ccda989e341363ea8944bb7bcd7b4a64736f6c634300080c0033";

const isSuperArgs$3 = xs => xs.length > 1;

class TokenERC20__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$3(args)) {
      super(...args);
    } else {
      super(_abi$3, _bytecode$3, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$3);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$3, signerOrProvider);
  }

}

defineProperty._defineProperty(TokenERC20__factory, "bytecode", _bytecode$3);

defineProperty._defineProperty(TokenERC20__factory, "abi", _abi$3);

const _abi$2 = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "approved",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    indexed: false,
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "ApprovalForAll",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newRoyaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newRoyaltyBps",
    type: "uint256"
  }],
  name: "DefaultRoyalty",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "prevOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnerUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "platformFeeRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "platformFeeBps",
    type: "uint256"
  }],
  name: "PlatformFeeInfoUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "recipient",
    type: "address"
  }],
  name: "PrimarySaleRecipientUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "previousAdminRole",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "bytes32",
    name: "newAdminRole",
    type: "bytes32"
  }],
  name: "RoleAdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleGranted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    indexed: true,
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "sender",
    type: "address"
  }],
  name: "RoleRevoked",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "royaltyRecipient",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "royaltyBps",
    type: "uint256"
  }],
  name: "RoyaltyForToken",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  name: "TokensMinted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "signer",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "mintedTo",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }, {
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    indexed: false,
    internalType: "struct ITokenERC721.MintRequest",
    name: "mintRequest",
    type: "tuple"
  }],
  name: "TokensMintedWithSignature",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}, {
  inputs: [],
  name: "DEFAULT_ADMIN_ROLE",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "approve",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "burn",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "getApproved",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getDefaultRoyaltyInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "getPlatformFeeInfo",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleAdmin",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getRoleMember",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }],
  name: "getRoleMemberCount",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "getRoyaltyInfoForToken",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint16",
    name: "",
    type: "uint16"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "grantRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasRole",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_defaultAdmin",
    type: "address"
  }, {
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_symbol",
    type: "string"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }, {
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint128",
    name: "_royaltyBps",
    type: "uint128"
  }, {
    internalType: "uint128",
    name: "_platformFeeBps",
    type: "uint128"
  }, {
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "address",
    name: "operator",
    type: "address"
  }],
  name: "isApprovedForAll",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "mintTo",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC721.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "mintWithSignature",
  outputs: [{
    internalType: "uint256",
    name: "tokenIdMinted",
    type: "uint256"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes[]",
    name: "data",
    type: "bytes[]"
  }],
  name: "multicall",
  outputs: [{
    internalType: "bytes[]",
    name: "results",
    type: "bytes[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "nextTokenIdToMint",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "ownerOf",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "platformFeeBps",
  outputs: [{
    internalType: "uint128",
    name: "",
    type: "uint128"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "platformFeeRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "primarySaleRecipient",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "renounceRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes32",
    name: "role",
    type: "bytes32"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "revokeRole",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "salePrice",
    type: "uint256"
  }],
  name: "royaltyInfo",
  outputs: [{
    internalType: "address",
    name: "receiver",
    type: "address"
  }, {
    internalType: "uint256",
    name: "royaltyAmount",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "_data",
    type: "bytes"
  }],
  name: "safeTransferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "bool",
    name: "approved",
    type: "bool"
  }],
  name: "setApprovalForAll",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_royaltyRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_royaltyBps",
    type: "uint256"
  }],
  name: "setDefaultRoyaltyInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_newOwner",
    type: "address"
  }],
  name: "setOwner",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_platformFeeRecipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_platformFeeBps",
    type: "uint256"
  }],
  name: "setPlatformFeeInfo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "_saleRecipient",
    type: "address"
  }],
  name: "setPrimarySaleRecipient",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "_recipient",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_bps",
    type: "uint256"
  }],
  name: "setRoyaltyInfoForToken",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "symbol",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "tokenByIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "owner",
    type: "address"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "tokenOfOwnerByIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_tokenId",
    type: "uint256"
  }],
  name: "tokenURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "totalSupply",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "address",
      name: "to",
      type: "address"
    }, {
      internalType: "address",
      name: "royaltyRecipient",
      type: "address"
    }, {
      internalType: "uint256",
      name: "royaltyBps",
      type: "uint256"
    }, {
      internalType: "address",
      name: "primarySaleRecipient",
      type: "address"
    }, {
      internalType: "string",
      name: "uri",
      type: "string"
    }, {
      internalType: "uint256",
      name: "price",
      type: "uint256"
    }, {
      internalType: "address",
      name: "currency",
      type: "address"
    }, {
      internalType: "uint128",
      name: "validityStartTimestamp",
      type: "uint128"
    }, {
      internalType: "uint128",
      name: "validityEndTimestamp",
      type: "uint128"
    }, {
      internalType: "bytes32",
      name: "uid",
      type: "bytes32"
    }],
    internalType: "struct ITokenERC721.MintRequest",
    name: "_req",
    type: "tuple"
  }, {
    internalType: "bytes",
    name: "_signature",
    type: "bytes"
  }],
  name: "verify",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$2 = "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b62000039620000de565b620000a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000c4576000805461ffff19166101011790555b8015620000d7576000805461ff00191690555b506200010b565b6000620000f630620000fc60201b62001dcf1760201c565b15905090565b6001600160a01b03163b151590565b614d84806200011b6000396000f3fe60806040526004361061031d5760003560e01c80636352211e116101a5578063ac9650d8116100ec578063d45573f611610095578063e15916341161006f578063e1591634146109c1578063e8a3d485146109e1578063e985e9c5146109f6578063eb13554f14610a4057600080fd5b8063d45573f61461092c578063d547741f14610962578063de9037741461098257600080fd5b8063c87b56dd116100c6578063c87b56dd146108cb578063ca15c873146108eb578063cb2ef6f71461090b57600080fd5b8063ac9650d81461084f578063b24f2d391461087c578063b88d4fde146108ab57600080fd5b8063938e3d7b1161014e578063a0a8e46011610128578063a0a8e460146107fe578063a217fddf1461081a578063a22cb4651461082f57600080fd5b8063938e3d7b146107a957806395d89b41146107c95780639bcf7a15146107de57600080fd5b80638da5cb5b1161017f5780638da5cb5b1461072d5780639010d07c1461074257806391d148541461076257600080fd5b80636352211e146106cd5780636f4f2837146106ed57806370a082311461070d57600080fd5b80632a55205a1161026957806342842e0e116102125780634f6ccce7116101ec5780634f6ccce714610654578063572b6c0514610674578063600dd5ea146106ad57600080fd5b806342842e0e146105d257806342966c68146105f25780634cc157df1461061257600080fd5b80632f745c59116102435780632f745c591461057b57806336568abe1461059b5780633b1475a7146105bb57600080fd5b80632a55205a146105095780632c4510f8146105485780632f2ff15d1461055b57600080fd5b806313af4035116102cb57806322dcd13e116102a557806322dcd13e1461047857806323b872dd146104b8578063248a9ca3146104d857600080fd5b806313af40351461042257806318160ddd146104425780631e7ac4881461045857600080fd5b8063079fe40e116102fc578063079fe40e146103a7578063081812fc146103e0578063095ea7b31461040057600080fd5b806275a3171461032257806301ffc9a71461035557806306fdde0314610385575b600080fd5b34801561032e57600080fd5b5061034261033d3660046140cb565b610a61565b6040519081526020015b60405180910390f35b34801561036157600080fd5b50610375610370366004614134565b610aa9565b604051901515815260200161034c565b34801561039157600080fd5b5061039a610ad5565b60405161034c91906141a9565b3480156103b357600080fd5b506101f9546103c8906001600160a01b031681565b6040516001600160a01b03909116815260200161034c565b3480156103ec57600080fd5b506103c86103fb3660046141bc565b610b68565b34801561040c57600080fd5b5061042061041b3660046141d5565b610c04565b005b34801561042e57600080fd5b5061042061043d3660046141ff565b610d2c565b34801561044e57600080fd5b506101c754610342565b34801561046457600080fd5b506104206104733660046141d5565b610e15565b34801561048457600080fd5b506101fc546104a090600160801b90046001600160801b031681565b6040516001600160801b03909116815260200161034c565b3480156104c457600080fd5b506104206104d336600461421a565b610edf565b3480156104e457600080fd5b506103426104f33660046141bc565b600090815261012f602052604090206001015490565b34801561051557600080fd5b50610529610524366004614256565b610f61565b604080516001600160a01b03909316835260208301919091520161034c565b610342610556366004614278565b610f9e565b34801561056757600080fd5b506104206105763660046142dd565b611145565b34801561058757600080fd5b506103426105963660046141d5565b61116e565b3480156105a757600080fd5b506104206105b63660046142dd565b611205565b3480156105c757600080fd5b506103426101f85481565b3480156105de57600080fd5b506104206105ed36600461421a565b6112a1565b3480156105fe57600080fd5b5061042061060d3660046141bc565b6112bc565b34801561061e57600080fd5b5061063261062d3660046141bc565b611345565b604080516001600160a01b03909316835261ffff90911660208301520161034c565b34801561066057600080fd5b5061034261066f3660046141bc565b6113b5565b34801561068057600080fd5b5061037561068f3660046141ff565b6001600160a01b031660009081526099602052604090205460ff1690565b3480156106b957600080fd5b506104206106c83660046141d5565b61144a565b3480156106d957600080fd5b506103c86106e83660046141bc565b611513565b3480156106f957600080fd5b506104206107083660046141ff565b61158b565b34801561071957600080fd5b506103426107283660046141ff565b6115e5565b34801561073957600080fd5b506103c861166d565b34801561074e57600080fd5b506103c861075d366004614256565b6116c8565b34801561076e57600080fd5b5061037561077d3660046142dd565b600091825261012f602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156107b557600080fd5b506104206107c4366004614309565b6116e8565b3480156107d557600080fd5b5061039a611709565b3480156107ea57600080fd5b506104206107f936600461434b565b611719565b34801561080a57600080fd5b506040516001815260200161034c565b34801561082657600080fd5b50610342600081565b34801561083b57600080fd5b5061042061084a36600461437e565b6117f5565b34801561085b57600080fd5b5061086f61086a3660046143b5565b611807565b60405161034c919061442a565b34801561088857600080fd5b506101fb546101fc546001600160a01b03909116906001600160801b0316610632565b3480156108b757600080fd5b506104206108c6366004614555565b6118fc565b3480156108d757600080fd5b5061039a6108e63660046141bc565b61197f565b3480156108f757600080fd5b506103426109063660046141bc565b611a22565b34801561091757600080fd5b506a546f6b656e45524337323160a81b610342565b34801561093857600080fd5b506101fa546101fc546001600160a01b0390911690600160801b90046001600160801b0316610632565b34801561096e57600080fd5b5061042061097d3660046142dd565b611a3a565b34801561098e57600080fd5b506109a261099d366004614278565b611a63565b6040805192151583526001600160a01b0390911660208301520161034c565b3480156109cd57600080fd5b506104206109dc366004614684565b611ade565b3480156109ed57600080fd5b5061039a611d40565b348015610a0257600080fd5b50610375610a11366004614797565b6001600160a01b0391821660009081526101986020908152604080832093909416825291909152205460ff1690565b348015610a4c57600080fd5b506101fa546103c8906001600160a01b031681565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a9581610a90611dde565b611de8565b610aa0858585611e69565b95945050505050565b6000610ab482611ef3565b80610acf57506001600160e01b0319821663152a902d60e11b145b92915050565b60606101938054610ae5906147c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610b11906147c1565b8015610b5e5780601f10610b3357610100808354040283529160200191610b5e565b820191906000526020600020905b815481529060010190602001808311610b4157829003601f168201915b5050505050905090565b600081815261019560205260408120546001600160a01b0316610be75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b50600090815261019760205260409020546001600160a01b031690565b6000610c0f82611513565b9050806001600160a01b0316836001600160a01b03161415610c7d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610bde565b806001600160a01b0316610c8f611dde565b6001600160a01b03161480610cab5750610cab81610a11611dde565b610d1d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610bde565b610d278383611f18565b505050565b6000610d3a81610a90611dde565b6001600160a01b03821660009081527fe9104285c6851efcbc5e0e70440200efbdcab556a1c8784776780f8bb44f2931602052604090205460ff16610dc15760405162461bcd60e51b815260206004820152601b60248201527f6e6577206f776e6572206e6f74206d6f64756c652061646d696e2e00000000006044820152606401610bde565b6101f780546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a3505050565b6000610e2381610a90611dde565b612710821115610e655760405162461bcd60e51b815260206004820152600d60248201526c313839901e1e9018981818181760991b6044820152606401610bde565b6101fc80546001600160801b031667ffffffffffffffff8416600160801b021790556101fa80546001600160a01b0319166001600160a01b0385169081179091556040518381527fe2497bd806ec41a6e0dd992c29a72efc0ef8fec9092d1978fd4a1e00b2f18304906020015b60405180910390a2505050565b610ef0610eea611dde565b82611f87565b610f565760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608401610bde565b610d27838383612080565b600080600080610f7086611345565b90945084925061ffff169050612710610f898287614812565b610f939190614831565b925050509250929050565b600060026001541415610ff35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bde565b6002600155600061100585858561222a565b905060008061101760208801886141ff565b6001600160a01b0316146110375761103260208701876141ff565b61103f565b61103f611dde565b9050611057816110526080890189614853565b611e69565b9250600061106b60408801602089016141ff565b6001600160a01b0316146110db57604051806040016040528087602001602081019061109791906141ff565b6001600160a01b0390811682526040898101356020938401526000878152610200845220835181546001600160a01b03191692169190911781559101516001909101555b6110ec6110e78761489a565b612344565b82816001600160a01b0316836001600160a01b03167f110d160a1bedeea919a88fbc4b2a9fb61b7e664084391b6ca2740db66fef80fe8960405161113091906149d7565b60405180910390a45050600180559392505050565b600082815261012f602052604090206001015461116481610a90611dde565b610d278383612472565b6000611179836115e5565b82106111db5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610bde565b506001600160a01b039190911660009081526101c560209081526040808320938352929052205490565b61120d611dde565b6001600160a01b0316816001600160a01b0316146112935760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610bde565b61129d8282612495565b5050565b610d27838383604051806020016040528060008152506118fc565b6112c7610eea611dde565b6113395760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610bde565b611342816124b8565b50565b600081815261020060209081526040808320815180830190925280546001600160a01b03168083526001909101549282019290925282911561138d57805160208201516113ab565b6101fb546101fc546001600160a01b03909116906001600160801b03165b9250925050915091565b60006113c16101c75490565b82106114245760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610bde565b6101c7828154811061143857611438614ae7565b90600052602060002001549050919050565b600061145881610a90611dde565b61271082111561149f5760405162461bcd60e51b815260206004820152601260248201527165786365656420726f79616c74792062707360701b6044820152606401610bde565b6101fb80546001600160a01b0319166001600160a01b0385169081179091556101fc80546fffffffffffffffffffffffffffffffff19166001600160801b0385161790556040518381527f90d7ec04bcb8978719414f82e52e4cb651db41d0e6f8cea6118c2191e6183adb90602001610ed2565b600081815261019560205260408120546001600160a01b031680610acf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610bde565b600061159981610a90611dde565b6101f980546001600160a01b0319166001600160a01b0384169081179091556040517f299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b33390600090a25050565b60006001600160a01b0382166116505760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610bde565b506001600160a01b03166000908152610196602052604090205490565b6101f7546001600160a01b031660009081527fe9104285c6851efcbc5e0e70440200efbdcab556a1c8784776780f8bb44f2931602052604081205460ff166116b55750600090565b6101f7546001600160a01b03165b905090565b6000828152610161602052604081206116e19083612561565b9392505050565b60006116f681610a90611dde565b6117036101fd8484613f60565b50505050565b60606101948054610ae5906147c1565b600061172781610a90611dde565b61271082111561176e5760405162461bcd60e51b815260206004820152601260248201527165786365656420726f79616c74792062707360701b6044820152606401610bde565b6040805180820182526001600160a01b03858116808352602080840187815260008a81526102008352869020945185546001600160a01b031916941693909317845591516001909301929092559151848152909186917f7365cf4122f072a3365c20d54eff9b38d73c096c28e1892ec8f5b0e403a0f12d910160405180910390a350505050565b61129d611800611dde565b838361256d565b60608167ffffffffffffffff8111156118225761182261448c565b60405190808252806020026020018201604052801561185557816020015b60608152602001906001900390816118405790505b50905060005b828110156118f5576118c53085858481811061187957611879614ae7565b905060200281019061188b9190614853565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061263d92505050565b8282815181106118d7576118d7614ae7565b602002602001018190525080806118ed90614afd565b91505061185b565b5092915050565b61190d611907611dde565b83611f87565b6119735760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608401610bde565b61170384848484612728565b60008181526101ff6020526040902080546060919061199d906147c1565b80601f01602080910402602001604051908101604052809291908181526020018280546119c9906147c1565b8015611a165780601f106119eb57610100808354040283529160200191611a16565b820191906000526020600020905b8154815290600101906020018083116119f957829003601f168201915b50505050509050919050565b600081815261016160205260408120610acf906127a6565b600082815261012f6020526040902060010154611a5981610a90611dde565b610d278383612495565b6000806000611a738686866127b0565b61012087013560009081526101fe602052604090205490915060ff16158015611ad357506001600160a01b03811660009081527fa2a71de801f4f5af590dd1e71778408c512ca00170a88b45ca00ba943b31e98e602052604090205460ff165b969095509350505050565b600054610100900460ff16611af95760005460ff1615611afd565b303b155b611b605760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610bde565b600054610100900460ff16158015611b82576000805461ffff19166101011790555b611b8a61280c565b611bd06040518060400160405280600b81526020016a546f6b656e45524337323160a81b815250604051806040016040528060018152602001603160f81b81525061283d565b611bd98761286e565b611be38a8a6128a6565b6101fb80546001600160a01b03199081166001600160a01b03888116919091179092556101fc80546fffffffffffffffffffffffffffffffff19166001600160801b0388161790556101fa805482168584161790556101f980549091169188169190911790558751611c5d906101fd9060208b0190613fe4565b506101fc80546001600160801b03808616600160801b0291161790556101f780546001600160a01b038d166001600160a01b0319909116179055611ca260008c6128d7565b611ccc7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68c6128d7565b611cf67f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c8c6128d7565b611d217f8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c60006128d7565b8015611d33576000805461ff00191690555b5050505050505050505050565b6101fd8054611d4e906147c1565b80601f0160208091040260200160405190810160405280929190818152602001828054611d7a906147c1565b8015611dc75780601f10611d9c57610100808354040283529160200191611dc7565b820191906000526020600020905b815481529060010190602001808311611daa57829003601f168201915b505050505081565b6001600160a01b03163b151590565b60006116c36128e1565b600082815261012f602090815260408083206001600160a01b038516845290915290205460ff1661129d57611e27816001600160a01b0316601461290b565b611e3283602061290b565b604051602001611e43929190614b18565b60408051601f198184030181529082905262461bcd60e51b8252610bde916004016141a9565b6101f88054906001906000611e7e8385614b99565b909155505060008181526101ff60205260409020611e9d908484613f60565b50611ea88482612ab4565b80846001600160a01b03167f9d89e36eadf856db0ad9ffb5a569e07f95634dddd9501141ecf04820484ad0dc8585604051611ee4929190614bb1565b60405180910390a39392505050565b60006001600160e01b0319821663780e9d6360e01b1480610acf5750610acf82612c05565b60008181526101976020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611f4e82611513565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600081815261019560205260408120546001600160a01b03166120015760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610bde565b600061200c83611513565b9050806001600160a01b0316846001600160a01b031614806120475750836001600160a01b031661203c84610b68565b6001600160a01b0316145b8061207857506001600160a01b038082166000908152610198602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661209382611513565b6001600160a01b0316146120f75760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610bde565b6001600160a01b0382166121595760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610bde565b612164838383612c45565b61216f600082611f18565b6001600160a01b038316600090815261019660205260408120805460019290612199908490614bc5565b90915550506001600160a01b0382166000908152610196602052604081208054600192906121c8908490614b99565b90915550506000818152610195602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080600061223a868686611a63565b915091508161228b5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610bde565b4261229d610100880160e08901614bdc565b6001600160801b0316111580156122ce5750426122c261012088016101008901614bdc565b6001600160801b031610155b61231a5760405162461bcd60e51b815260206004820152600f60248201527f72657175657374206578706972656400000000000000000000000000000000006044820152606401610bde565b61012086013560009081526101fe60205260409020805460ff191660011790559150509392505050565b60a08101516123505750565b60a08101516101fc546000906127109061237a90600160801b90046001600160801b031684614812565b6123849190614831565b60c08401519091506001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156123ff578134146123ff5760405162461bcd60e51b815260206004820152601660248201527f6d7573742073656e6420746f74616c2070726963652e000000000000000000006044820152606401610bde565b60608301516000906001600160a01b03161561241f57836060015161242d565b6101f9546001600160a01b03165b90506124528460c0015161243f611dde565b6101fa546001600160a01b031685612da0565b6117038460c00151612462611dde565b8361246d8688614bc5565b612da0565b61247c8282612dea565b600082815261016160205260409020610d279082612e8f565b61249f8282612ea4565b600082815261016160205260409020610d279082612f47565b60006124c382611513565b90506124d181600084612c45565b6124dc600083611f18565b6001600160a01b038116600090815261019660205260408120805460019290612506908490614bc5565b90915550506000828152610195602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006116e18383612f5c565b816001600160a01b0316836001600160a01b031614156125cf5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610bde565b6001600160a01b0383811660008181526101986020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606001600160a01b0383163b6126a55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610bde565b600080846001600160a01b0316846040516126c09190614bf7565b600060405180830381855af49150503d80600081146126fb576040519150601f19603f3d011682016040523d82523d6000602084013e612700565b606091505b5091509150610aa08282604051806060016040528060278152602001614d2860279139612f86565b612733848484612080565b61273f84848484612fbf565b6117035760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610bde565b6000610acf825490565b600061207883838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061280692506127fa915088905061310f565b80519060200120613249565b90613297565b600054610100900460ff166128335760405162461bcd60e51b8152600401610bde90614c13565b61283b6132bb565b565b600054610100900460ff166128645760405162461bcd60e51b8152600401610bde90614c13565b61129d82826132e8565b600054610100900460ff166128955760405162461bcd60e51b8152600401610bde90614c13565b61289d613329565b61134281613350565b600054610100900460ff166128cd5760405162461bcd60e51b8152600401610bde90614c13565b61129d82826133df565b61129d8282612472565b3360009081526099602052604081205460ff1615612906575060131936013560601c90565b503390565b6060600061291a836002614812565b612925906002614b99565b67ffffffffffffffff81111561293d5761293d61448c565b6040519080825280601f01601f191660200182016040528015612967576020820181803683370190505b509050600360fc1b8160008151811061298257612982614ae7565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106129b1576129b1614ae7565b60200101906001600160f81b031916908160001a90535060006129d5846002614812565b6129e0906001614b99565b90505b6001811115612a65577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110612a2157612a21614ae7565b1a60f81b828281518110612a3757612a37614ae7565b60200101906001600160f81b031916908160001a90535060049490941c93612a5e81614c5e565b90506129e3565b5083156116e15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bde565b6001600160a01b038216612b0a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610bde565b600081815261019560205260409020546001600160a01b031615612b705760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610bde565b612b7c60008383612c45565b6001600160a01b038216600090815261019660205260408120805460019290612ba6908490614b99565b90915550506000818152610195602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160e01b031982166380ac58cd60e01b1480612c3657506001600160e01b03198216635b5e139f60e01b145b80610acf5750610acf8261342f565b612c50838383613454565b600080527fdf45e191c6a8bff7d5b2484d5c1deccbd5b2abc06a2abf694394baf9d01cb5e56020527f2b85be2befc2dd713b2f771c3d841437400c04e85bacc15958c6dcadb2aa5c045460ff16158015612cb257506001600160a01b03831615155b8015612cc657506001600160a01b03821615155b15610d27576001600160a01b03831660009081527fdf45e191c6a8bff7d5b2484d5c1deccbd5b2abc06a2abf694394baf9d01cb5e5602052604090205460ff1680612d4857506001600160a01b03821660009081527fdf45e191c6a8bff7d5b2484d5c1deccbd5b2abc06a2abf694394baf9d01cb5e5602052604090205460ff165b610d275760405162461bcd60e51b815260206004820152602360248201527f7265737472696374656420746f205452414e534645525f524f4c4520686f6c6460448201526265727360e81b6064820152608401610bde565b80612daa57611703565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415612dde57612dd9828261350e565b611703565b611703848484846135b1565b600082815261012f602090815260408083206001600160a01b038516845290915290205460ff1661129d57600082815261012f602090815260408083206001600160a01b03851684529091529020805460ff19166001179055612e4b611dde565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006116e1836001600160a01b03841661360a565b600082815261012f602090815260408083206001600160a01b038516845290915290205460ff161561129d57600082815261012f602090815260408083206001600160a01b03851684529091529020805460ff19169055612f03611dde565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006116e1836001600160a01b038416613659565b6000826000018281548110612f7357612f73614ae7565b9060005260206000200154905092915050565b60608315612f955750816116e1565b825115612fa55782518084602001fd5b8160405162461bcd60e51b8152600401610bde91906141a9565b60006001600160a01b0384163b1561310457836001600160a01b031663150b7a02612fe8611dde565b8786866040518563ffffffff1660e01b815260040161300a9493929190614c75565b6020604051808303816000875af1925050508015613045575060408051601f3d908101601f1916820190925261304291810190614cb1565b60015b6130ea573d808015613073576040519150601f19603f3d011682016040523d82523d6000602084013e613078565b606091505b5080516130e25760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610bde565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612078565b506001949350505050565b60607f86633b4ffa94b7c3d316ca70d7d2700f3fdfa7a7806efd31499b513d9176692e61313f60208401846141ff565b61314f60408501602086016141ff565b604085013561316460808701606088016141ff565b6131716080880188614853565b60405161317f929190614cce565b60405190819003902060a088013561319d60e08a0160c08b016141ff565b6131ae6101008b0160e08c01614bdc565b6131c06101208c016101008d01614bdc565b60408051602081019b909b526001600160a01b03998a16908b015296881660608a0152608089019590955292861660a088015260c087019190915260e08601529092166101008401526001600160801b03918216610120808501919091529116610140830152830135610160820152610180016040516020818303038152906040529050919050565b6000610acf61325661374c565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006132a685856137c7565b915091506132b381613837565b509392505050565b600054610100900460ff166132e25760405162461bcd60e51b8152600401610bde90614c13565b60018055565b600054610100900460ff1661330f5760405162461bcd60e51b8152600401610bde90614c13565b815160209283012081519190920120603391909155603455565b600054610100900460ff1661283b5760405162461bcd60e51b8152600401610bde90614c13565b600054610100900460ff166133775760405162461bcd60e51b8152600401610bde90614c13565b60005b815181101561129d5760016099600084848151811061339b5761339b614ae7565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806133d781614afd565b91505061337a565b600054610100900460ff166134065760405162461bcd60e51b8152600401610bde90614c13565b815161341a90610193906020850190613fe4565b508051610d2790610194906020840190613fe4565b60006001600160e01b03198216635a05180f60e01b1480610acf5750610acf826139f2565b6001600160a01b0383166134b1576134ac816101c7805460008381526101c860205260408120829055600182018355919091527fff6df30967a6a678f565c59a19e91e5c0dbb20cfe9f9bf26d7da6dea0fffa24c0155565b6134d4565b816001600160a01b0316836001600160a01b0316146134d4576134d48382613a27565b6001600160a01b0382166134eb57610d2781613ac9565b826001600160a01b0316826001600160a01b031614610d2757610d278282613b7e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461355b576040519150601f19603f3d011682016040523d82523d6000602084013e613560565b606091505b5050905080610d275760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610bde565b816001600160a01b0316836001600160a01b031614156135d057611703565b6001600160a01b0383163014156135f557612dd96001600160a01b0385168383613bc4565b6117036001600160a01b038516848484613c3c565b600081815260018301602052604081205461365157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610acf565b506000610acf565b6000818152600183016020526040812054801561374257600061367d600183614bc5565b855490915060009061369190600190614bc5565b90508181146136f65760008660000182815481106136b1576136b1614ae7565b90600052602060002001549050808760000184815481106136d4576136d4614ae7565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061370757613707614cde565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610acf565b6000915050610acf565b60006116c37f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61377b60335490565b6034546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000808251604114156137fe5760208301516040840151606085015160001a6137f287828585613c74565b94509450505050613830565b825160401415613828576020830151604084015161381d868383613d61565b935093505050613830565b506000905060025b9250929050565b600081600481111561384b5761384b614cf4565b14156138545750565b600181600481111561386857613868614cf4565b14156138b65760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610bde565b60028160048111156138ca576138ca614cf4565b14156139185760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610bde565b600381600481111561392c5761392c614cf4565b14156139855760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610bde565b600481600481111561399957613999614cf4565b14156113425760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610bde565b60006001600160e01b03198216637965db0b60e01b1480610acf57506301ffc9a760e01b6001600160e01b0319831614610acf565b60006001613a34846115e5565b613a3e9190614bc5565b60008381526101c66020526040902054909150808214613a94576001600160a01b03841660009081526101c56020908152604080832085845282528083205484845281842081905583526101c690915290208190555b5060009182526101c6602090815260408084208490556001600160a01b0390941683526101c581528383209183525290812055565b6101c754600090613adc90600190614bc5565b60008381526101c860205260408120546101c78054939450909284908110613b0657613b06614ae7565b90600052602060002001549050806101c78381548110613b2857613b28614ae7565b60009182526020808320909101929092558281526101c890915260408082208490558582528120556101c7805480613b6257613b62614cde565b6001900381819060005260206000200160009055905550505050565b6000613b89836115e5565b6001600160a01b0390931660009081526101c56020908152604080832086845282528083208590559382526101c69052919091209190915550565b6040516001600160a01b038316602482015260448101829052610d2790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152613db3565b6040516001600160a01b03808516602483015283166044820152606481018290526117039085906323b872dd60e01b90608401613bf0565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115613cab5750600090506003613d58565b8460ff16601b14158015613cc357508460ff16601c14155b15613cd45750600090506004613d58565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613d28573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116613d5157600060019250925050613d58565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681613d9760ff86901c601b614b99565b9050613da587828885613c74565b935093505050935093915050565b6000613e08826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613e859092919063ffffffff16565b805190915015610d275780806020019051810190613e269190614d0a565b610d275760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bde565b60606120788484600085856001600160a01b0385163b613ee75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bde565b600080866001600160a01b03168587604051613f039190614bf7565b60006040518083038185875af1925050503d8060008114613f40576040519150601f19603f3d011682016040523d82523d6000602084013e613f45565b606091505b5091509150613f55828286612f86565b979650505050505050565b828054613f6c906147c1565b90600052602060002090601f016020900481019282613f8e5760008555613fd4565b82601f10613fa75782800160ff19823516178555613fd4565b82800160010185558215613fd4579182015b82811115613fd4578235825591602001919060010190613fb9565b50613fe0929150614058565b5090565b828054613ff0906147c1565b90600052602060002090601f0160209004810192826140125760008555613fd4565b82601f1061402b57805160ff1916838001178555613fd4565b82800160010185558215613fd4579182015b82811115613fd457825182559160200191906001019061403d565b5b80821115613fe05760008155600101614059565b80356001600160a01b038116811461408457600080fd5b919050565b60008083601f84011261409b57600080fd5b50813567ffffffffffffffff8111156140b357600080fd5b60208301915083602082850101111561383057600080fd5b6000806000604084860312156140e057600080fd5b6140e98461406d565b9250602084013567ffffffffffffffff81111561410557600080fd5b61411186828701614089565b9497909650939450505050565b6001600160e01b03198116811461134257600080fd5b60006020828403121561414657600080fd5b81356116e18161411e565b60005b8381101561416c578181015183820152602001614154565b838111156117035750506000910152565b60008151808452614195816020860160208601614151565b601f01601f19169290920160200192915050565b6020815260006116e1602083018461417d565b6000602082840312156141ce57600080fd5b5035919050565b600080604083850312156141e857600080fd5b6141f18361406d565b946020939093013593505050565b60006020828403121561421157600080fd5b6116e18261406d565b60008060006060848603121561422f57600080fd5b6142388461406d565b92506142466020850161406d565b9150604084013590509250925092565b6000806040838503121561426957600080fd5b50508035926020909101359150565b60008060006040848603121561428d57600080fd5b833567ffffffffffffffff808211156142a557600080fd5b9085019061014082880312156142ba57600080fd5b909350602085013590808211156142d057600080fd5b5061411186828701614089565b600080604083850312156142f057600080fd5b823591506143006020840161406d565b90509250929050565b6000806020838503121561431c57600080fd5b823567ffffffffffffffff81111561433357600080fd5b61433f85828601614089565b90969095509350505050565b60008060006060848603121561436057600080fd5b833592506142466020850161406d565b801515811461134257600080fd5b6000806040838503121561439157600080fd5b61439a8361406d565b915060208301356143aa81614370565b809150509250929050565b600080602083850312156143c857600080fd5b823567ffffffffffffffff808211156143e057600080fd5b818501915085601f8301126143f457600080fd5b81358181111561440357600080fd5b8660208260051b850101111561441857600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561447f57603f1988860301845261446d85835161417d565b94509285019290850190600101614451565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156144c6576144c661448c565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156144f5576144f561448c565b604052919050565b600067ffffffffffffffff8311156145175761451761448c565b61452a601f8401601f19166020016144cc565b905082815283838301111561453e57600080fd5b828260208301376000602084830101529392505050565b6000806000806080858703121561456b57600080fd5b6145748561406d565b93506145826020860161406d565b925060408501359150606085013567ffffffffffffffff8111156145a557600080fd5b8501601f810187136145b657600080fd5b6145c5878235602084016144fd565b91505092959194509250565b600082601f8301126145e257600080fd5b6116e1838335602085016144fd565b600082601f83011261460257600080fd5b8135602067ffffffffffffffff82111561461e5761461e61448c565b8160051b61462d8282016144cc565b928352848101820192828101908785111561464757600080fd5b83870192505b84831015613f555761465e8361406d565b8252918301919083019061464d565b80356001600160801b038116811461408457600080fd5b6000806000806000806000806000806101408b8d0312156146a457600080fd5b6146ad8b61406d565b995060208b013567ffffffffffffffff808211156146ca57600080fd5b6146d68e838f016145d1565b9a5060408d01359150808211156146ec57600080fd5b6146f88e838f016145d1565b995060608d013591508082111561470e57600080fd5b61471a8e838f016145d1565b985060808d013591508082111561473057600080fd5b5061473d8d828e016145f1565b96505061474c60a08c0161406d565b945061475a60c08c0161406d565b935061476860e08c0161466d565b92506147776101008c0161466d565b91506147866101208c0161406d565b90509295989b9194979a5092959850565b600080604083850312156147aa57600080fd5b6147b38361406d565b91506143006020840161406d565b600181811c908216806147d557607f821691505b602082108114156147f657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561482c5761482c6147fc565b500290565b60008261484e57634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e1984360301811261486a57600080fd5b83018035915067ffffffffffffffff82111561488557600080fd5b60200191503681900382131561383057600080fd5b600061014082360312156148ad57600080fd5b6148b56144a2565b6148be8361406d565b81526148cc6020840161406d565b6020820152604083013560408201526148e76060840161406d565b6060820152608083013567ffffffffffffffff81111561490657600080fd5b614912368286016145d1565b60808301525060a083013560a082015261492e60c0840161406d565b60c082015261493f60e0840161466d565b60e082015261010061495281850161466d565b9082015261012092830135928101929092525090565b6000808335601e1984360301811261497f57600080fd5b830160208101925035905067ffffffffffffffff81111561499f57600080fd5b80360383131561383057600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526149f8602082016149eb8461406d565b6001600160a01b03169052565b6000614a066020840161406d565b6001600160a01b03811660408401525060408301356060830152614a2c6060840161406d565b6001600160a01b038116608084015250614a496080840184614968565b6101408060a0860152614a61610160860183856149ae565b925060a086013560c0860152614a7960c0870161406d565b6001600160a01b03811660e08701529150614a9660e0870161466d565b9150610100614aaf818701846001600160801b03169052565b614aba81880161466d565b925050610120614ad4818701846001600160801b03169052565b9590950135939094019290925250919050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415614b1157614b116147fc565b5060010190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351614b50816017850160208801614151565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351614b8d816028840160208801614151565b01602801949350505050565b60008219821115614bac57614bac6147fc565b500190565b6020815260006120786020830184866149ae565b600082821015614bd757614bd76147fc565b500390565b600060208284031215614bee57600080fd5b6116e18261466d565b60008251614c09818460208701614151565b9190910192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600081614c6d57614c6d6147fc565b506000190190565b60006001600160a01b03808716835280861660208401525083604083015260806060830152614ca7608083018461417d565b9695505050505050565b600060208284031215614cc357600080fd5b81516116e18161411e565b8183823760009101908152919050565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b600060208284031215614d1c57600080fd5b81516116e18161437056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e861faa778a31c57dad6ac3a09ee172132f3c8bc52736f515cdd0a61c1cf1bb864736f6c634300080c0033";

const isSuperArgs$2 = xs => xs.length > 1;

class TokenERC721__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$2(args)) {
      super(...args);
    } else {
      super(_abi$2, _bytecode$2, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$2);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$2, signerOrProvider);
  }

}

defineProperty._defineProperty(TokenERC721__factory, "bytecode", _bytecode$2);

defineProperty._defineProperty(TokenERC721__factory, "abi", _abi$2);

const _abi$1 = [{
  inputs: [{
    internalType: "address",
    name: "_nativeTokenWrapper",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }],
  name: "getTokenCountOfBundle",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "index",
    type: "uint256"
  }],
  name: "getTokenOfBundle",
  outputs: [{
    components: [{
      internalType: "address",
      name: "assetContract",
      type: "address"
    }, {
      internalType: "enum ITokenBundle.TokenType",
      name: "tokenType",
      type: "uint8"
    }, {
      internalType: "uint256",
      name: "tokenId",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "totalAmount",
      type: "uint256"
    }],
    internalType: "struct ITokenBundle.Token",
    name: "",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "_bundleId",
    type: "uint256"
  }],
  name: "getUriOfBundle",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155BatchReceived",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC721Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}];
const _bytecode$1 = "0x60a060405234801561001057600080fd5b5060405161080a38038061080a83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610782610088600039600050506107826000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806361195e941161005b57806361195e9414610101578063bc197c8114610121578063d0d2fe2514610140578063f23a6e611461016e57600080fd5b806301ffc9a714610082578063150b7a02146100aa5780631da799c9146100e1575b600080fd5b61009561009036600461031a565b61018d565b60405190151581526020015b60405180910390f35b6100c86100b836600461041e565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016100a1565b6100f46100ef366004610486565b6101c4565b6040516100a191906104be565b61011461010f366004610514565b610275565b6040516100a1919061052d565b6100c861012f366004610602565b63bc197c8160e01b95945050505050565b61016061014e366004610514565b60009081526020819052604090205490565b6040519081526020016100a1565b6100c861017c3660046106ac565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806101be57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6101f0604080516080810190915260008082526020820190815260200160008152602001600081525090565b600083815260208181526040808320858452600290810183529281902081516080810190925280546001600160a01b038116835291939092840191600160a01b900460ff1690811115610245576102456104a8565b6002811115610256576102566104a8565b8152600182015460208201526002909101546040909101529392505050565b600081815260208190526040902060010180546060919061029590610711565b80601f01602080910402602001604051908101604052809291908181526020018280546102c190610711565b801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b50505050509050919050565b60006020828403121561032c57600080fd5b81356001600160e01b03198116811461034457600080fd5b9392505050565b80356001600160a01b038116811461036257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156103a6576103a6610367565b604052919050565b600082601f8301126103bf57600080fd5b813567ffffffffffffffff8111156103d9576103d9610367565b6103ec601f8201601f191660200161037d565b81815284602083860101111561040157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561043457600080fd5b61043d8561034b565b935061044b6020860161034b565b925060408501359150606085013567ffffffffffffffff81111561046e57600080fd5b61047a878288016103ae565b91505092959194509250565b6000806040838503121561049957600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b81516001600160a01b0316815260208201516080820190600381106104f357634e487b7160e01b600052602160045260246000fd5b80602084015250604083015160408301526060830151606083015292915050565b60006020828403121561052657600080fd5b5035919050565b600060208083528351808285015260005b8181101561055a5785810183015185820160400152820161053e565b8181111561056c576000604083870101525b50601f01601f1916929092016040019392505050565b600082601f83011261059357600080fd5b8135602067ffffffffffffffff8211156105af576105af610367565b8160051b6105be82820161037d565b92835284810182019282810190878511156105d857600080fd5b83870192505b848310156105f7578235825291830191908301906105de565b979650505050505050565b600080600080600060a0868803121561061a57600080fd5b6106238661034b565b94506106316020870161034b565b9350604086013567ffffffffffffffff8082111561064e57600080fd5b61065a89838a01610582565b9450606088013591508082111561067057600080fd5b61067c89838a01610582565b9350608088013591508082111561069257600080fd5b5061069f888289016103ae565b9150509295509295909350565b600080600080600060a086880312156106c457600080fd5b6106cd8661034b565b94506106db6020870161034b565b93506040860135925060608601359150608086013567ffffffffffffffff81111561070557600080fd5b61069f888289016103ae565b600181811c9082168061072557607f821691505b6020821081141561074657634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203e53d067cb1c4843b363a71f982b383290f25ba6a9b7fa35ee94c898e9e2cd9664736f6c634300080c0033";

const isSuperArgs$1 = xs => xs.length > 1;

class TokenStore__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs$1(args)) {
      super(...args);
    } else {
      super(_abi$1, _bytecode$1, args[0]);
    }
  }

  deploy(_nativeTokenWrapper, overrides) {
    return super.deploy(_nativeTokenWrapper, overrides || {});
  }

  getDeployTransaction(_nativeTokenWrapper, overrides) {
    return super.getDeployTransaction(_nativeTokenWrapper, overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi$1);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi$1, signerOrProvider);
  }

}

defineProperty._defineProperty(TokenStore__factory, "bytecode", _bytecode$1);

defineProperty._defineProperty(TokenStore__factory, "abi", _abi$1);

const _abi = [{
  inputs: [],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }],
  name: "ProposalCanceled",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "address",
    name: "proposer",
    type: "address"
  }, {
    indexed: false,
    internalType: "address[]",
    name: "targets",
    type: "address[]"
  }, {
    indexed: false,
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }, {
    indexed: false,
    internalType: "string[]",
    name: "signatures",
    type: "string[]"
  }, {
    indexed: false,
    internalType: "bytes[]",
    name: "calldatas",
    type: "bytes[]"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "startBlock",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "endBlock",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "description",
    type: "string"
  }],
  name: "ProposalCreated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }],
  name: "ProposalExecuted",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "oldProposalThreshold",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newProposalThreshold",
    type: "uint256"
  }],
  name: "ProposalThresholdSet",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "oldQuorumNumerator",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newQuorumNumerator",
    type: "uint256"
  }],
  name: "QuorumNumeratorUpdated",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "voter",
    type: "address"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint8",
    name: "support",
    type: "uint8"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "weight",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "string",
    name: "reason",
    type: "string"
  }],
  name: "VoteCast",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "oldVotingDelay",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newVotingDelay",
    type: "uint256"
  }],
  name: "VotingDelaySet",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint256",
    name: "oldVotingPeriod",
    type: "uint256"
  }, {
    indexed: false,
    internalType: "uint256",
    name: "newVotingPeriod",
    type: "uint256"
  }],
  name: "VotingPeriodSet",
  type: "event"
}, {
  inputs: [],
  name: "BALLOT_TYPEHASH",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "COUNTING_MODE",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "support",
    type: "uint8"
  }],
  name: "castVote",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "support",
    type: "uint8"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "castVoteBySig",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }, {
    internalType: "uint8",
    name: "support",
    type: "uint8"
  }, {
    internalType: "string",
    name: "reason",
    type: "string"
  }],
  name: "castVoteWithReason",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "contractType",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [],
  name: "contractURI",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "contractVersion",
  outputs: [{
    internalType: "uint8",
    name: "",
    type: "uint8"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "targets",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }, {
    internalType: "bytes[]",
    name: "calldatas",
    type: "bytes[]"
  }, {
    internalType: "bytes32",
    name: "descriptionHash",
    type: "bytes32"
  }],
  name: "execute",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "getAllProposals",
  outputs: [{
    components: [{
      internalType: "uint256",
      name: "proposalId",
      type: "uint256"
    }, {
      internalType: "address",
      name: "proposer",
      type: "address"
    }, {
      internalType: "address[]",
      name: "targets",
      type: "address[]"
    }, {
      internalType: "uint256[]",
      name: "values",
      type: "uint256[]"
    }, {
      internalType: "string[]",
      name: "signatures",
      type: "string[]"
    }, {
      internalType: "bytes[]",
      name: "calldatas",
      type: "bytes[]"
    }, {
      internalType: "uint256",
      name: "startBlock",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "endBlock",
      type: "uint256"
    }, {
      internalType: "string",
      name: "description",
      type: "string"
    }],
    internalType: "struct VoteERC20.Proposal[]",
    name: "allProposals",
    type: "tuple[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "account",
    type: "address"
  }, {
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "getVotes",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "account",
    type: "address"
  }],
  name: "hasVoted",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "targets",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }, {
    internalType: "bytes[]",
    name: "calldatas",
    type: "bytes[]"
  }, {
    internalType: "bytes32",
    name: "descriptionHash",
    type: "bytes32"
  }],
  name: "hashProposal",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "_name",
    type: "string"
  }, {
    internalType: "string",
    name: "_contractURI",
    type: "string"
  }, {
    internalType: "address[]",
    name: "_trustedForwarders",
    type: "address[]"
  }, {
    internalType: "address",
    name: "_token",
    type: "address"
  }, {
    internalType: "uint256",
    name: "_initialVotingDelay",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_initialVotingPeriod",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_initialProposalThreshold",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "_initialVoteQuorumFraction",
    type: "uint256"
  }],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "forwarder",
    type: "address"
  }],
  name: "isTrustedForwarder",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "name",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "uint256[]",
    name: "",
    type: "uint256[]"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155BatchReceived",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC1155Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "address",
    name: "",
    type: "address"
  }, {
    internalType: "uint256",
    name: "",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "",
    type: "bytes"
  }],
  name: "onERC721Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }],
  name: "proposalDeadline",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "proposalIndex",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }],
  name: "proposalSnapshot",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "proposalThreshold",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }],
  name: "proposalVotes",
  outputs: [{
    internalType: "uint256",
    name: "againstVotes",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "forVotes",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "abstainVotes",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  name: "proposals",
  outputs: [{
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }, {
    internalType: "address",
    name: "proposer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "startBlock",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "endBlock",
    type: "uint256"
  }, {
    internalType: "string",
    name: "description",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address[]",
    name: "targets",
    type: "address[]"
  }, {
    internalType: "uint256[]",
    name: "values",
    type: "uint256[]"
  }, {
    internalType: "bytes[]",
    name: "calldatas",
    type: "bytes[]"
  }, {
    internalType: "string",
    name: "description",
    type: "string"
  }],
  name: "propose",
  outputs: [{
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "blockNumber",
    type: "uint256"
  }],
  name: "quorum",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "quorumDenominator",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "quorumNumerator",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "target",
    type: "address"
  }, {
    internalType: "uint256",
    name: "value",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "relay",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "string",
    name: "uri",
    type: "string"
  }],
  name: "setContractURI",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "newProposalThreshold",
    type: "uint256"
  }],
  name: "setProposalThreshold",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "newVotingDelay",
    type: "uint256"
  }],
  name: "setVotingDelay",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "newVotingPeriod",
    type: "uint256"
  }],
  name: "setVotingPeriod",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "proposalId",
    type: "uint256"
  }],
  name: "state",
  outputs: [{
    internalType: "enum IGovernorUpgradeable.ProposalState",
    name: "",
    type: "uint8"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "bytes4",
    name: "interfaceId",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "token",
  outputs: [{
    internalType: "contract IVotesUpgradeable",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "newQuorumNumerator",
    type: "uint256"
  }],
  name: "updateQuorumNumerator",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [],
  name: "version",
  outputs: [{
    internalType: "string",
    name: "",
    type: "string"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "votingDelay",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "votingPeriod",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  stateMutability: "payable",
  type: "receive"
}];
const _bytecode = "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b62000039620000de565b620000a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000c4576000805461ffff19166101011790555b8015620000d7576000805461ff00191690555b506200010b565b6000620000f630620000fc60201b620019401760201c565b15905090565b6001600160a01b03163b151590565b613c41806200011b6000396000f3fe60806040526004361061025a5760003560e01c80637d5e81e211610149578063cb2ef6f7116100c6578063ea0217cf1161008a578063f23a6e6111610064578063f23a6e6114610800578063f8ce560a1461082c578063fc0c546a1461084c57600080fd5b8063ea0217cf146107a0578063eb9019d4146107c0578063ece40cc1146107e057600080fd5b8063cb2ef6f7146106d0578063cceb68f5146106ef578063dd4e2ba514610711578063deaaa7cc14610757578063e8a3d4851461078b57600080fd5b8063b58131b01161010d578063b58131b01461062f578063bc197c8114610644578063c01f9e3714610670578063c28bc2fa14610690578063c59057e4146106b057600080fd5b80637d5e81e2146105a9578063938e3d7b146105c957806397c3d334146105e9578063a0a8e460146105fd578063a7713a701461061957600080fd5b80633e4f49e6116101d7578063572b6c051161019b578063572b6c05146104f95780635977e0f21461053257806370b0f660146105495780637b3c71d3146105695780637cf43f8d1461058957600080fd5b80633e4f49e6146103e1578063438596321461040e578063544ffc9c1461045957806354fd4d50146104af57806356781388146104d957600080fd5b8063150b7a021161021e578063150b7a02146103345780632656227d146103785780632d63f6931461038b5780633932abb1146103ab5780633bccf4fd146103c157600080fd5b8063013cf08b1461026857806301ffc9a7146102a257806302a251a3146102d257806306f3f9e6146102f257806306fdde031461031257600080fd5b3661026357005b005b600080fd5b34801561027457600080fd5b50610288610283366004612e48565b610885565b604051610299959493929190612ebd565b60405180910390f35b3480156102ae57600080fd5b506102c26102bd366004612ef1565b610949565b6040519015158152602001610299565b3480156102de57600080fd5b506101c6545b604051908152602001610299565b3480156102fe57600080fd5b5061026161030d366004612e48565b61098f565b34801561031e57600080fd5b506103276109fa565b6040516102999190612f1b565b34801561034057600080fd5b5061035f61034f366004613001565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610299565b6102e46103863660046131da565b610a8d565b34801561039757600080fd5b506102e46103a6366004612e48565b610ba0565b3480156103b757600080fd5b506101c5546102e4565b3480156103cd57600080fd5b506102e46103dc36600461327b565b610bda565b3480156103ed57600080fd5b506104016103fc366004612e48565b610c6e565b60405161029991906132df565b34801561041a57600080fd5b506102c2610429366004613307565b60008281526101f7602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b34801561046557600080fd5b50610494610474366004612e48565b60009081526101f760205260409020805460018201546002909201549092565b60408051938452602084019290925290820152606001610299565b3480156104bb57600080fd5b506040805180820190915260018152603160f81b6020820152610327565b3480156104e557600080fd5b506102e46104f4366004613333565b610d7c565b34801561050557600080fd5b506102c2610514366004613356565b6001600160a01b031660009081526033602052604090205460ff1690565b34801561053e57600080fd5b506102e461028f5481565b34801561055557600080fd5b50610261610564366004612e48565b610dac565b34801561057557600080fd5b506102e46105843660046133ba565b610e0f565b34801561059557600080fd5b506102616105a4366004613414565b610e68565b3480156105b557600080fd5b506102e46105c43660046134d1565b610f6d565b3480156105d557600080fd5b506102616105e4366004613572565b61112d565b3480156105f557600080fd5b5060646102e4565b34801561060957600080fd5b5060405160018152602001610299565b34801561062557600080fd5b5061025c546102e4565b34801561063b57600080fd5b506102e4611199565b34801561065057600080fd5b5061035f61065f3660046135b4565b63bc197c8160e01b95945050505050565b34801561067c57600080fd5b506102e461068b366004612e48565b6111aa565b34801561069c57600080fd5b506102616106ab36600461365e565b6111db565b3480156106bc57600080fd5b506102e46106cb3660046131da565b61127e565b3480156106dc57600080fd5b50680566f746545524332360bc1b6102e4565b3480156106fb57600080fd5b506107046112b8565b6040516102999190613769565b34801561071d57600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610327565b34801561076357600080fd5b506102e47f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561079757600080fd5b506103276116e3565b3480156107ac57600080fd5b506102616107bb366004612e48565b611772565b3480156107cc57600080fd5b506102e46107db366004613879565b6117d5565b3480156107ec57600080fd5b506102616107fb366004612e48565b611853565b34801561080c57600080fd5b5061035f61081b3660046138a3565b63f23a6e6160e01b95945050505050565b34801561083857600080fd5b506102e4610847366004612e48565b6118b6565b34801561085857600080fd5b506102295461086d906001600160a01b031681565b6040516001600160a01b039091168152602001610299565b610290602052600090815260409020805460018201546006830154600784015460088501805494956001600160a01b0390941694929391926108c690613908565b80601f01602080910402602001604051908101604052809291908181526020018280546108f290613908565b801561093f5780601f106109145761010080835404028352916020019161093f565b820191906000526020600020905b81548152906001019060200180831161092257829003601f168201915b5050505050905085565b60006001600160e01b03198216630271189760e51b148061097a57506001600160e01b03198216630a85bd0160e11b145b8061098957506109898261194f565b92915050565b30610998611974565b6001600160a01b0316146109ee5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064015b60405180910390fd5b6109f78161197e565b50565b60606101938054610a0a90613908565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3690613908565b8015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b5050505050905090565b600080610a9c8686868661127e565b90506000610aa982610c6e565b90506004816007811115610abf57610abf6132c9565b1480610adc57506005816007811115610ada57610ada6132c9565b145b610b325760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b60648201526084016109e5565b6000828152610194602052604090819020600201805460ff19166001179055517f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90610b819084815260200190565b60405180910390a1610b968288888888611a47565b5095945050505050565b60008181526101946020908152604080832081519283019091525467ffffffffffffffff16908190525b67ffffffffffffffff1692915050565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610c4690610c3e9060800160405160208183030381529060405280519060200120611b46565b868686611b94565b9050610c6387828860405180602001604052806000815250611bb2565b979650505050505050565b600081815261019460205260408120600281015460ff1615610c935750600792915050565b6002810154610100900460ff1615610cae5750600292915050565b6000610cb984610ba0565b905080610d085760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c20696400000060448201526064016109e5565b438110610d19575060009392505050565b6000610d24856111aa565b9050438110610d3857506001949350505050565b610d4185611cbe565b8015610d61575060008581526101f7602052604090208054600190910154115b15610d7157506004949350505050565b506003949350505050565b600080610d87611974565b9050610da484828560405180602001604052806000815250611bb2565b949350505050565b30610db5611974565b6001600160a01b031614610e065760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016109e5565b6109f781611cf6565b600080610e1a611974565b9050610e5e86828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bb292505050565b9695505050505050565b600054610100900460ff16610e835760005460ff1615610e87565b303b155b610eea5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109e5565b600054610100900460ff16158015610f0c576000805461ffff19166101011790555b610f1587611d39565b610f1e89611d71565b610f29858585611dc8565b610f3286611dfa565b610f3b82611e2a565b8751610f4f9061028e9060208b0190612b8a565b508015610f62576000805461ff00191690555b505050505050505050565b6000610f7b85858585611e5a565b9050604051806101200160405280828152602001610f97611974565b6001600160a01b03168152602001868152602001858152602001865167ffffffffffffffff811115610fcb57610fcb612f4a565b604051908082528060200260200182016040528015610ffe57816020015b6060815260200190600190039081610fe95790505b50815260200184815260200161101383610ba0565b8152602001611021836111aa565b8152602090810184905261028f546000908152610290825260409081902083518155838301516001820180546001600160a01b0319166001600160a01b03909216919091179055908301518051919261108292600285019290910190612c0a565b506060820151805161109e916003840191602090910190612c5f565b50608082015180516110ba916004840191602090910190612c99565b5060a082015180516110d6916005840191602090910190612cf2565b5060c0820151600682015560e082015160078201556101008201518051611107916008840191602090910190612b8a565b50905050600161028f600082825461111f9190613959565b909155509095945050505050565b30611136611974565b6001600160a01b0316146111875760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016109e5565b61119461028e8383612d4b565b505050565b60006111a56101c75490565b905090565b60008181526101946020908152604080832081519283019091526001015467ffffffffffffffff1690819052610bca565b306111e4611974565b6001600160a01b0316146112355760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016109e5565b6112778483838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508892506121b9915050565b5050505050565b6000848484846040516020016112979493929190613971565b60408051601f19818403018152919052805160209091012095945050505050565b61028f546060908067ffffffffffffffff8111156112d8576112d8612f4a565b60405190808252806020026020018201604052801561136157816020015b61134e6040518061012001604052806000815260200160006001600160a01b03168152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001606081525090565b8152602001906001900390816112f65790505b50915060005b818110156116de57600081815261029060209081526040918290208251610120810184528154815260018201546001600160a01b031681840152600282018054855181860281018601875281815292959394938601938301828280156113f657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116113d8575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561144e57602002820191906000526020600020905b81548152602001906001019080831161143a575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561152857838290600052602060002001805461149b90613908565b80601f01602080910402602001604051908101604052809291908181526020018280546114c790613908565b80156115145780601f106114e957610100808354040283529160200191611514565b820191906000526020600020905b8154815290600101906020018083116114f757829003601f168201915b50505050508152602001906001019061147c565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b8282101561160157838290600052602060002001805461157490613908565b80601f01602080910402602001604051908101604052809291908181526020018280546115a090613908565b80156115ed5780601f106115c2576101008083540402835291602001916115ed565b820191906000526020600020905b8154815290600101906020018083116115d057829003601f168201915b505050505081526020019060010190611555565b505050508152602001600682015481526020016007820154815260200160088201805461162d90613908565b80601f016020809104026020016040519081016040528092919081815260200182805461165990613908565b80156116a65780601f1061167b576101008083540402835291602001916116a6565b820191906000526020600020905b81548152906001019060200180831161168957829003601f168201915b5050505050815250508382815181106116c1576116c16139bc565b60209081029190910101526116d7600182613959565b9050611367565b505090565b61028e80546116f190613908565b80601f016020809104026020016040519081016040528092919081815260200182805461171d90613908565b801561176a5780601f1061173f5761010080835404028352916020019161176a565b820191906000526020600020905b81548152906001019060200180831161174d57829003601f168201915b505050505081565b3061177b611974565b6001600160a01b0316146117cc5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016109e5565b6109f7816121df565b61022954604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000921690633a46b1a890604401602060405180830381865afa158015611828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061184c91906139d2565b9392505050565b3061185c611974565b6001600160a01b0316146118ad5760405162461bcd60e51b8152602060048201526018602482015277476f7665726e6f723a206f6e6c79476f7665726e616e636560401b60448201526064016109e5565b6109f781612282565b6000606461025c5461022954604051632394e7a360e21b8152600481018690526001600160a01b0390911690638e539e8c90602401602060405180830381865afa158015611908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192c91906139d2565b61193691906139eb565b6109899190613a0a565b6001600160a01b03163b151590565b60006001600160e01b0319821663bf26d89760e01b14806109895750610989826122c5565b60006111a56122fa565b6064811115611a015760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a4016109e5565b61025c80549082905560408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b6000604051806060016040528060278152602001613bbc60279139905060005b8551811015611b3d57600080878381518110611a8557611a856139bc565b60200260200101516001600160a01b0316878481518110611aa857611aa86139bc565b6020026020010151878581518110611ac257611ac26139bc565b6020026020010151604051611ad79190613a2c565b60006040518083038185875af1925050503d8060008114611b14576040519150601f19603f3d011682016040523d82523d6000602084013e611b19565b606091505b5091509150611b29828286612324565b50505080611b3690613a48565b9050611a67565b50505050505050565b6000610989611b5361235d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611ba5878787876123da565b91509150610b96816124c7565b6000848152610194602052604081206001611bcc87610c6e565b6007811115611bdd57611bdd6132c9565b14611c365760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b60648201526084016109e5565b6040805160208101909152815467ffffffffffffffff1690819052600090611c5f9087906117d5565b9050611c6d87878784612682565b856001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda488878488604051611cac9493929190613a63565b60405180910390a29695505050505050565b60008181526101f76020526040812060028101546001820154611ce19190613959565b611ced61084785610ba0565b11159392505050565b6101c55460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a16101c555565b600054610100900460ff16611d605760405162461bcd60e51b81526004016109e590613a8b565b611d6861280a565b6109f781612833565b600054610100900460ff16611d985760405162461bcd60e51b81526004016109e590613a8b565b611dbf81611dba6040805180820190915260018152603160f81b602082015290565b6128c6565b6109f781612909565b600054610100900460ff16611def5760405162461bcd60e51b81526004016109e590613a8b565b611194838383612944565b600054610100900460ff16611e215760405162461bcd60e51b81526004016109e590613a8b565b6109f781612986565b600054610100900460ff16611e515760405162461bcd60e51b81526004016109e590613a8b565b6109f7816129d0565b6000611e64611199565b611e73336107db600143613ad6565b1015611ef35760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72436f6d7061746962696c697479427261766f3a2070726f7060448201527f6f73657220766f7465732062656c6f772070726f706f73616c207468726573686064820152621bdb1960ea1b608482015260a4016109e5565b6000611f08868686868051906020012061127e565b90508451865114611f655760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016109e5565b8351865114611fc05760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746044820152600d60fb1b60648201526084016109e5565b60008651116120115760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c000000000000000060448201526064016109e5565b600081815261019460209081526040918290208251918201909252815467ffffffffffffffff1690819052156120935760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b60648201526084016109e5565b60006120a76120a26101c55490565b6129f7565b6120b0436129f7565b6120ba9190613aed565b905060006120cb6120a26101c65490565b6120d59083613aed565b835467ffffffffffffffff191667ffffffffffffffff8416178455905060018301805467ffffffffffffffff191667ffffffffffffffff83161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08461213b611974565b8b8b8d5167ffffffffffffffff81111561215757612157612f4a565b60405190808252806020026020018201604052801561218a57816020015b60608152602001906001900390816121755790505b508c88888e6040516121a499989796959493929190613b19565b60405180910390a15091979650505050505050565b6060610da4848484604051806060016040528060298152602001613be360299139612a64565b6000811161223f5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084016109e5565b6101c65460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a16101c655565b6101c75460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a16101c755565b60006001600160e01b03198216630271189760e51b148061098957506301ffc9a760e01b6001600160e01b0319831614610989565b3360009081526033602052604081205460ff161561231f575060131936013560601c90565b503390565b6060831561233357508161184c565b8251156123435782518084602001fd5b8160405162461bcd60e51b81526004016109e59190612f1b565b60006111a57f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61238d61012d5490565b61012e546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561241157506000905060036124be565b8460ff16601b1415801561242957508460ff16601c14155b1561243a57506000905060046124be565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561248e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166124b7576000600192509250506124be565b9150600090505b94509492505050565b60008160048111156124db576124db6132c9565b14156124e45750565b60018160048111156124f8576124f86132c9565b14156125465760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016109e5565b600281600481111561255a5761255a6132c9565b14156125a85760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016109e5565b60038160048111156125bc576125bc6132c9565b14156126155760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016109e5565b6004816004811115612629576126296132c9565b14156109f75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016109e5565b60008481526101f7602090815260408083206001600160a01b0387168452600381019092529091205460ff161561270b5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561604482015266191e4818d85cdd60ca1b60648201526084016109e5565b6001600160a01b03841660009081526003820160205260408120805460ff1916600117905560ff168360ff16141561275c57818160000160008282546127519190613959565b909155506112779050565b60ff83166001141561277c57818160010160008282546127519190613959565b60ff83166002141561279c57818160020160008282546127519190613959565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160448201527f6c756520666f7220656e756d20566f746554797065000000000000000000000060648201526084016109e5565b600054610100900460ff166128315760405162461bcd60e51b81526004016109e590613a8b565b565b600054610100900460ff1661285a5760405162461bcd60e51b81526004016109e590613a8b565b60005b81518110156128c25760016033600084848151811061287e5761287e6139bc565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806128ba81613a48565b91505061285d565b5050565b600054610100900460ff166128ed5760405162461bcd60e51b81526004016109e590613a8b565b81516020928301208151919092012061012d9190915561012e55565b600054610100900460ff166129305760405162461bcd60e51b81526004016109e590613a8b565b80516128c290610193906020840190612b8a565b600054610100900460ff1661296b5760405162461bcd60e51b81526004016109e590613a8b565b61297483611cf6565b61297d826121df565b61119481612282565b600054610100900460ff166129ad5760405162461bcd60e51b81526004016109e590613a8b565b61022980546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff166109ee5760405162461bcd60e51b81526004016109e590613a8b565b600067ffffffffffffffff821115612a605760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b60648201526084016109e5565b5090565b606082471015612ac55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109e5565b6001600160a01b0385163b612b1c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109e5565b600080866001600160a01b03168587604051612b389190613a2c565b60006040518083038185875af1925050503d8060008114612b75576040519150601f19603f3d011682016040523d82523d6000602084013e612b7a565b606091505b5091509150610c63828286612324565b828054612b9690613908565b90600052602060002090601f016020900481019282612bb85760008555612bfe565b82601f10612bd157805160ff1916838001178555612bfe565b82800160010185558215612bfe579182015b82811115612bfe578251825591602001919060010190612be3565b50612a60929150612dbf565b828054828255906000526020600020908101928215612bfe579160200282015b82811115612bfe57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612c2a565b828054828255906000526020600020908101928215612bfe5791602002820182811115612bfe578251825591602001919060010190612be3565b828054828255906000526020600020908101928215612ce6579160200282015b82811115612ce65782518051612cd6918491602090910190612b8a565b5091602001919060010190612cb9565b50612a60929150612dd4565b828054828255906000526020600020908101928215612d3f579160200282015b82811115612d3f5782518051612d2f918491602090910190612b8a565b5091602001919060010190612d12565b50612a60929150612df1565b828054612d5790613908565b90600052602060002090601f016020900481019282612d795760008555612bfe565b82601f10612d925782800160ff19823516178555612bfe565b82800160010185558215612bfe579182015b82811115612bfe578235825591602001919060010190612da4565b5b80821115612a605760008155600101612dc0565b80821115612a60576000612de88282612e0e565b50600101612dd4565b80821115612a60576000612e058282612e0e565b50600101612df1565b508054612e1a90613908565b6000825580601f10612e2a575050565b601f0160209004906000526020600020908101906109f79190612dbf565b600060208284031215612e5a57600080fd5b5035919050565b60005b83811015612e7c578181015183820152602001612e64565b83811115612e8b576000848401525b50505050565b60008151808452612ea9816020860160208601612e61565b601f01601f19169290920160200192915050565b8581526001600160a01b038516602082015283604082015282606082015260a060808201526000610c6360a0830184612e91565b600060208284031215612f0357600080fd5b81356001600160e01b03198116811461184c57600080fd5b60208152600061184c6020830184612e91565b80356001600160a01b0381168114612f4557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612f8957612f89612f4a565b604052919050565b600082601f830112612fa257600080fd5b813567ffffffffffffffff811115612fbc57612fbc612f4a565b612fcf601f8201601f1916602001612f60565b818152846020838601011115612fe457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561301757600080fd5b61302085612f2e565b935061302e60208601612f2e565b925060408501359150606085013567ffffffffffffffff81111561305157600080fd5b61305d87828801612f91565b91505092959194509250565b600067ffffffffffffffff82111561308357613083612f4a565b5060051b60200190565b600082601f83011261309e57600080fd5b813560206130b36130ae83613069565b612f60565b82815260059290921b840181019181810190868411156130d257600080fd5b8286015b848110156130f4576130e781612f2e565b83529183019183016130d6565b509695505050505050565b600082601f83011261311057600080fd5b813560206131206130ae83613069565b82815260059290921b8401810191818101908684111561313f57600080fd5b8286015b848110156130f45780358352918301918301613143565b600082601f83011261316b57600080fd5b8135602061317b6130ae83613069565b82815260059290921b8401810191818101908684111561319a57600080fd5b8286015b848110156130f457803567ffffffffffffffff8111156131be5760008081fd5b6131cc8986838b0101612f91565b84525091830191830161319e565b600080600080608085870312156131f057600080fd5b843567ffffffffffffffff8082111561320857600080fd5b6132148883890161308d565b9550602087013591508082111561322a57600080fd5b613236888389016130ff565b9450604087013591508082111561324c57600080fd5b506132598782880161315a565b949793965093946060013593505050565b803560ff81168114612f4557600080fd5b600080600080600060a0868803121561329357600080fd5b853594506132a36020870161326a565b93506132b16040870161326a565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061330157634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561331a57600080fd5b8235915061332a60208401612f2e565b90509250929050565b6000806040838503121561334657600080fd5b8235915061332a6020840161326a565b60006020828403121561336857600080fd5b61184c82612f2e565b60008083601f84011261338357600080fd5b50813567ffffffffffffffff81111561339b57600080fd5b6020830191508360208285010111156133b357600080fd5b9250929050565b600080600080606085870312156133d057600080fd5b843593506133e06020860161326a565b9250604085013567ffffffffffffffff8111156133fc57600080fd5b61340887828801613371565b95989497509550505050565b600080600080600080600080610100898b03121561343157600080fd5b883567ffffffffffffffff8082111561344957600080fd5b6134558c838d01612f91565b995060208b013591508082111561346b57600080fd5b6134778c838d01612f91565b985060408b013591508082111561348d57600080fd5b5061349a8b828c0161308d565b9650506134a960608a01612f2e565b979a969950949760808101359660a0820135965060c0820135955060e0909101359350915050565b600080600080608085870312156134e757600080fd5b843567ffffffffffffffff808211156134ff57600080fd5b61350b8883890161308d565b9550602087013591508082111561352157600080fd5b61352d888389016130ff565b9450604087013591508082111561354357600080fd5b61354f8883890161315a565b9350606087013591508082111561356557600080fd5b5061305d87828801612f91565b6000806020838503121561358557600080fd5b823567ffffffffffffffff81111561359c57600080fd5b6135a885828601613371565b90969095509350505050565b600080600080600060a086880312156135cc57600080fd5b6135d586612f2e565b94506135e360208701612f2e565b9350604086013567ffffffffffffffff8082111561360057600080fd5b61360c89838a016130ff565b9450606088013591508082111561362257600080fd5b61362e89838a016130ff565b9350608088013591508082111561364457600080fd5b5061365188828901612f91565b9150509295509295909350565b6000806000806060858703121561367457600080fd5b61367d85612f2e565b935060208501359250604085013567ffffffffffffffff8111156133fc57600080fd5b600081518084526020808501945080840160005b838110156136d95781516001600160a01b0316875295820195908201906001016136b4565b509495945050505050565b600081518084526020808501945080840160005b838110156136d9578151875295820195908201906001016136f8565b600081518084526020808501808196508360051b8101915082860160005b8581101561375c57828403895261374a848351612e91565b98850198935090840190600101613732565b5091979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561386b57603f19898403018552815180518452878101516001600160a01b03168885015286810151610120888601819052906137d2828701826136a0565b915050606080830151868303828801526137ec83826136e4565b92505050608080830151868303828801526138078382613714565b9250505060a080830151868303828801526138228382613714565b9250505060c080830151818701525060e080830151818701525061010080830151925085820381870152506138578183612e91565b968901969450505090860190600101613790565b509098975050505050505050565b6000806040838503121561388c57600080fd5b61389583612f2e565b946020939093013593505050565b600080600080600060a086880312156138bb57600080fd5b6138c486612f2e565b94506138d260208701612f2e565b93506040860135925060608601359150608086013567ffffffffffffffff8111156138fc57600080fd5b61365188828901612f91565b600181811c9082168061391c57607f821691505b6020821081141561393d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561396c5761396c613943565b500190565b60808152600061398460808301876136a0565b828103602084015261399681876136e4565b905082810360408401526139aa8186613714565b91505082606083015295945050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156139e457600080fd5b5051919050565b6000816000190483118215151615613a0557613a05613943565b500290565b600082613a2757634e487b7160e01b600052601260045260246000fd5b500490565b60008251613a3e818460208701612e61565b9190910192915050565b6000600019821415613a5c57613a5c613943565b5060010190565b84815260ff84166020820152826040820152608060608201526000610e5e6080830184612e91565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082821015613ae857613ae8613943565b500390565b600067ffffffffffffffff808316818516808303821115613b1057613b10613943565b01949350505050565b60006101208b83526001600160a01b038b166020840152806040840152613b428184018b6136a0565b90508281036060840152613b56818a6136e4565b90508281036080840152613b6a8189613714565b905082810360a0840152613b7e8188613714565b67ffffffffffffffff87811660c0860152861660e08501528381036101008501529050613bab8185612e91565b9c9b50505050505050505050505056fe476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a26469706673582212200f470499ea65c0ff0af159825d5610fa5add5939a45c1afd83a5c452412d3c7864736f6c634300080c0033";

const isSuperArgs = xs => xs.length > 1;

class VoteERC20__factory extends ethers.ContractFactory {
  constructor() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static createInterface() {
    return new ethers.utils.Interface(_abi);
  }

  static connect(address, signerOrProvider) {
    return new ethers.Contract(address, _abi, signerOrProvider);
  }

}

defineProperty._defineProperty(VoteERC20__factory, "bytecode", _bytecode);

defineProperty._defineProperty(VoteERC20__factory, "abi", _abi);

/* Autogenerated file. Do not edit manually. */

var index = /*#__PURE__*/Object.freeze({
  __proto__: null,
  AppURI__factory: AppURI__factory,
  BatchMintMetadata__factory: BatchMintMetadata__factory,
  ContractMetadata__factory: ContractMetadata__factory,
  ContractPublisher__factory: ContractPublisher__factory,
  CurrencyTransferLib__factory: CurrencyTransferLib__factory,
  DelayedReveal__factory: DelayedReveal__factory,
  Drop__factory: Drop__factory,
  DropERC1155__factory: DropERC1155__factory,
  DropERC20__factory: DropERC20__factory,
  DropERC721__factory: DropERC721__factory,
  DropSinglePhase__factory: DropSinglePhase__factory,
  DropSinglePhase1155__factory: DropSinglePhase1155__factory,
  ERC1155__factory: ERC1155__factory,
  ERC1155Base__factory: ERC1155Base__factory,
  ERC1155DelayedReveal__factory: ERC1155DelayedReveal__factory,
  ERC1155Drop__factory: ERC1155Drop__factory,
  ERC1155Holder__factory: ERC1155Holder__factory,
  ERC1155LazyMint__factory: ERC1155LazyMint__factory,
  ERC1155PresetUpgradeable__factory: ERC1155PresetUpgradeable__factory,
  ERC1155Receiver__factory: ERC1155Receiver__factory,
  ERC1155SignatureMint__factory: ERC1155SignatureMint__factory,
  ERC165__factory: ERC165__factory,
  ERC20__factory: ERC20__factory,
  ERC20Base__factory: ERC20Base__factory,
  ERC20Drop__factory: ERC20Drop__factory,
  ERC20DropVote__factory: ERC20DropVote__factory,
  ERC20Permit__factory: ERC20Permit__factory,
  ERC20SignatureMint__factory: ERC20SignatureMint__factory,
  ERC20SignatureMintVote__factory: ERC20SignatureMintVote__factory,
  ERC20Vote__factory: ERC20Vote__factory,
  ERC20Votes__factory: ERC20Votes__factory,
  ERC2771Context__factory: ERC2771Context__factory,
  ERC2771ContextUpgradeable__factory: ERC2771ContextUpgradeable__factory,
  ERC721A__factory: ERC721A__factory,
  ERC721Base__factory: ERC721Base__factory,
  ERC721DelayedReveal__factory: ERC721DelayedReveal__factory,
  ERC721Drop__factory: ERC721Drop__factory,
  ERC721Holder__factory: ERC721Holder__factory,
  ERC721LazyMint__factory: ERC721LazyMint__factory,
  ERC721Multiwrap__factory: ERC721Multiwrap__factory,
  ERC721SignatureMint__factory: ERC721SignatureMint__factory,
  Forwarder__factory: Forwarder__factory,
  ForwarderChainlessDomain__factory: ForwarderChainlessDomain__factory,
  ForwarderConsumer__factory: ForwarderConsumer__factory,
  ForwarderEOAOnly__factory: ForwarderEOAOnly__factory,
  IAppURI__factory: IAppURI__factory,
  IBurnableERC1155__factory: IBurnableERC1155__factory,
  IBurnableERC20__factory: IBurnableERC20__factory,
  IBurnableERC721__factory: IBurnableERC721__factory,
  IClaimConditionsSinglePhase__factory: IClaimConditionsSinglePhase__factory,
  IClaimableERC1155__factory: IClaimableERC1155__factory,
  IClaimableERC721__factory: IClaimableERC721__factory,
  IContractDeployer__factory: IContractDeployer__factory,
  IContractFactory__factory: IContractFactory__factory,
  IContractMetadata__factory: IContractMetadata__factory,
  IContractMetadataRegistry__factory: IContractMetadataRegistry__factory,
  IContractPublisher__factory: IContractPublisher__factory,
  IDelayedReveal__factory: IDelayedReveal__factory,
  IDelayedRevealDeprecated__factory: IDelayedRevealDeprecated__factory,
  IDrop__factory: IDrop__factory,
  IDropERC1155__factory: IDropERC1155__factory,
  IDropERC20__factory: IDropERC20__factory,
  IDropERC721__factory: IDropERC721__factory,
  IDropSinglePhase__factory: IDropSinglePhase__factory,
  IDropSinglePhase1155__factory: IDropSinglePhase1155__factory,
  IERC1155__factory: IERC1155__factory,
  IERC1155Enumerable__factory: IERC1155Enumerable__factory,
  IERC1155Metadata__factory: IERC1155Metadata__factory,
  IERC1155Receiver__factory: IERC1155Receiver__factory,
  IERC1155Supply__factory: IERC1155Supply__factory,
  IERC165__factory: IERC165__factory,
  IERC20__factory: IERC20__factory,
  IERC20Metadata__factory: IERC20Metadata__factory,
  IERC20Permit__factory: IERC20Permit__factory,
  IERC2981__factory: IERC2981__factory,
  IERC721__factory: IERC721__factory,
  IERC721A__factory: IERC721A__factory,
  IERC721Enumerable__factory: IERC721Enumerable__factory,
  IERC721Metadata__factory: IERC721Metadata__factory,
  IERC721Receiver__factory: IERC721Receiver__factory,
  IERC721Supply__factory: IERC721Supply__factory,
  IFeeTierPlacementExtension__factory: IFeeTierPlacementExtension__factory,
  ILazyMint__factory: ILazyMint__factory,
  IMarketplace__factory: IMarketplace__factory,
  IMintableERC1155__factory: IMintableERC1155__factory,
  IMintableERC20__factory: IMintableERC20__factory,
  IMintableERC721__factory: IMintableERC721__factory,
  IMulticall__factory: IMulticall__factory,
  IMultiwrap__factory: IMultiwrap__factory,
  IOwnable__factory: IOwnable__factory,
  IPack__factory: IPack__factory,
  IPermissions__factory: IPermissions__factory,
  IPermissionsEnumerable__factory: IPermissionsEnumerable__factory,
  IPlatformFee__factory: IPlatformFee__factory,
  IPrimarySale__factory: IPrimarySale__factory,
  IRoyalty__factory: IRoyalty__factory,
  ISignatureMintERC1155__factory: ISignatureMintERC1155__factory,
  ISignatureMintERC20__factory: ISignatureMintERC20__factory,
  ISignatureMintERC721__factory: ISignatureMintERC721__factory,
  ITWFee__factory: ITWFee__factory,
  IThirdwebContract__factory: IThirdwebContract__factory,
  ITokenERC1155__factory: ITokenERC1155__factory,
  ITokenERC20__factory: ITokenERC20__factory,
  ITokenERC721__factory: ITokenERC721__factory,
  IVotes__factory: IVotes__factory,
  IWETH__factory: IWETH__factory,
  LazyMint__factory: LazyMint__factory,
  Marketplace__factory: Marketplace__factory,
  MinimalForwarderEOAOnly__factory: MinimalForwarderEOAOnly__factory,
  Mock__factory: Mock__factory,
  MockContract__factory: MockContract__factory,
  MockContractPublisher__factory: MockContractPublisher__factory,
  Multicall__factory: Multicall__factory,
  Multiwrap__factory: Multiwrap__factory,
  Ownable__factory: Ownable__factory,
  Pack__factory: Pack__factory,
  PaymentSplitterUpgradeable__factory: PaymentSplitterUpgradeable__factory,
  Permissions__factory: Permissions__factory,
  PermissionsEnumerable__factory: PermissionsEnumerable__factory,
  PlatformFee__factory: PlatformFee__factory,
  PrimarySale__factory: PrimarySale__factory,
  Royalty__factory: Royalty__factory,
  SignatureDrop__factory: SignatureDrop__factory,
  SignatureMintERC1155__factory: SignatureMintERC1155__factory,
  SignatureMintERC1155Upgradeable__factory: SignatureMintERC1155Upgradeable__factory,
  SignatureMintERC20__factory: SignatureMintERC20__factory,
  SignatureMintERC20Upgradeable__factory: SignatureMintERC20Upgradeable__factory,
  SignatureMintERC721__factory: SignatureMintERC721__factory,
  SignatureMintERC721Upgradeable__factory: SignatureMintERC721Upgradeable__factory,
  SoulboundERC721A__factory: SoulboundERC721A__factory,
  Split__factory: Split__factory,
  TWFactory__factory: factories_TWFactory__factory_dist_thirdwebDevContractsJsFactoriesTWFactory__factory.TWFactory__factory,
  TWFee__factory: factories_TWFee__factory_dist_thirdwebDevContractsJsFactoriesTWFee__factory.TWFee__factory,
  TWProxy__factory: factories_TWProxy__factory_dist_thirdwebDevContractsJsFactoriesTWProxy__factory.TWProxy__factory,
  TWRegistry__factory: factories_TWRegistry__factory_dist_thirdwebDevContractsJsFactoriesTWRegistry__factory.TWRegistry__factory,
  TokenBundle__factory: TokenBundle__factory,
  TokenERC1155__factory: TokenERC1155__factory,
  TokenERC20__factory: TokenERC20__factory,
  TokenERC721__factory: TokenERC721__factory,
  TokenStore__factory: TokenStore__factory,
  VoteERC20__factory: VoteERC20__factory
});

exports.TWFactory__factory = factories_TWFactory__factory_dist_thirdwebDevContractsJsFactoriesTWFactory__factory.TWFactory__factory;
exports.TWFee__factory = factories_TWFee__factory_dist_thirdwebDevContractsJsFactoriesTWFee__factory.TWFee__factory;
exports.TWProxy__factory = factories_TWProxy__factory_dist_thirdwebDevContractsJsFactoriesTWProxy__factory.TWProxy__factory;
exports.TWRegistry__factory = factories_TWRegistry__factory_dist_thirdwebDevContractsJsFactoriesTWRegistry__factory.TWRegistry__factory;
exports.AppURI__factory = AppURI__factory;
exports.BatchMintMetadata__factory = BatchMintMetadata__factory;
exports.ContractMetadata__factory = ContractMetadata__factory;
exports.ContractPublisher__factory = ContractPublisher__factory;
exports.CurrencyTransferLib__factory = CurrencyTransferLib__factory;
exports.DelayedReveal__factory = DelayedReveal__factory;
exports.DropERC1155__factory = DropERC1155__factory;
exports.DropERC20__factory = DropERC20__factory;
exports.DropERC721__factory = DropERC721__factory;
exports.DropSinglePhase1155__factory = DropSinglePhase1155__factory;
exports.DropSinglePhase__factory = DropSinglePhase__factory;
exports.Drop__factory = Drop__factory;
exports.ERC1155Base__factory = ERC1155Base__factory;
exports.ERC1155DelayedReveal__factory = ERC1155DelayedReveal__factory;
exports.ERC1155Drop__factory = ERC1155Drop__factory;
exports.ERC1155Holder__factory = ERC1155Holder__factory;
exports.ERC1155LazyMint__factory = ERC1155LazyMint__factory;
exports.ERC1155PresetUpgradeable__factory = ERC1155PresetUpgradeable__factory;
exports.ERC1155Receiver__factory = ERC1155Receiver__factory;
exports.ERC1155SignatureMint__factory = ERC1155SignatureMint__factory;
exports.ERC1155__factory = ERC1155__factory;
exports.ERC165__factory = ERC165__factory;
exports.ERC20Base__factory = ERC20Base__factory;
exports.ERC20DropVote__factory = ERC20DropVote__factory;
exports.ERC20Drop__factory = ERC20Drop__factory;
exports.ERC20Permit__factory = ERC20Permit__factory;
exports.ERC20SignatureMintVote__factory = ERC20SignatureMintVote__factory;
exports.ERC20SignatureMint__factory = ERC20SignatureMint__factory;
exports.ERC20Vote__factory = ERC20Vote__factory;
exports.ERC20Votes__factory = ERC20Votes__factory;
exports.ERC20__factory = ERC20__factory;
exports.ERC2771ContextUpgradeable__factory = ERC2771ContextUpgradeable__factory;
exports.ERC2771Context__factory = ERC2771Context__factory;
exports.ERC721A__factory = ERC721A__factory;
exports.ERC721Base__factory = ERC721Base__factory;
exports.ERC721DelayedReveal__factory = ERC721DelayedReveal__factory;
exports.ERC721Drop__factory = ERC721Drop__factory;
exports.ERC721Holder__factory = ERC721Holder__factory;
exports.ERC721LazyMint__factory = ERC721LazyMint__factory;
exports.ERC721Multiwrap__factory = ERC721Multiwrap__factory;
exports.ERC721SignatureMint__factory = ERC721SignatureMint__factory;
exports.ForwarderChainlessDomain__factory = ForwarderChainlessDomain__factory;
exports.ForwarderConsumer__factory = ForwarderConsumer__factory;
exports.ForwarderEOAOnly__factory = ForwarderEOAOnly__factory;
exports.Forwarder__factory = Forwarder__factory;
exports.IAppURI__factory = IAppURI__factory;
exports.IBurnableERC1155__factory = IBurnableERC1155__factory;
exports.IBurnableERC20__factory = IBurnableERC20__factory;
exports.IBurnableERC721__factory = IBurnableERC721__factory;
exports.IClaimConditionsSinglePhase__factory = IClaimConditionsSinglePhase__factory;
exports.IClaimableERC1155__factory = IClaimableERC1155__factory;
exports.IClaimableERC721__factory = IClaimableERC721__factory;
exports.IContractDeployer__factory = IContractDeployer__factory;
exports.IContractFactory__factory = IContractFactory__factory;
exports.IContractMetadataRegistry__factory = IContractMetadataRegistry__factory;
exports.IContractMetadata__factory = IContractMetadata__factory;
exports.IContractPublisher__factory = IContractPublisher__factory;
exports.IDelayedRevealDeprecated__factory = IDelayedRevealDeprecated__factory;
exports.IDelayedReveal__factory = IDelayedReveal__factory;
exports.IDropERC1155__factory = IDropERC1155__factory;
exports.IDropERC20__factory = IDropERC20__factory;
exports.IDropERC721__factory = IDropERC721__factory;
exports.IDropSinglePhase1155__factory = IDropSinglePhase1155__factory;
exports.IDropSinglePhase__factory = IDropSinglePhase__factory;
exports.IDrop__factory = IDrop__factory;
exports.IERC1155Enumerable__factory = IERC1155Enumerable__factory;
exports.IERC1155Metadata__factory = IERC1155Metadata__factory;
exports.IERC1155Receiver__factory = IERC1155Receiver__factory;
exports.IERC1155Supply__factory = IERC1155Supply__factory;
exports.IERC1155__factory = IERC1155__factory;
exports.IERC165__factory = IERC165__factory;
exports.IERC20Metadata__factory = IERC20Metadata__factory;
exports.IERC20Permit__factory = IERC20Permit__factory;
exports.IERC20__factory = IERC20__factory;
exports.IERC2981__factory = IERC2981__factory;
exports.IERC721A__factory = IERC721A__factory;
exports.IERC721Enumerable__factory = IERC721Enumerable__factory;
exports.IERC721Metadata__factory = IERC721Metadata__factory;
exports.IERC721Receiver__factory = IERC721Receiver__factory;
exports.IERC721Supply__factory = IERC721Supply__factory;
exports.IERC721__factory = IERC721__factory;
exports.IFeeTierPlacementExtension__factory = IFeeTierPlacementExtension__factory;
exports.ILazyMint__factory = ILazyMint__factory;
exports.IMarketplace__factory = IMarketplace__factory;
exports.IMintableERC1155__factory = IMintableERC1155__factory;
exports.IMintableERC20__factory = IMintableERC20__factory;
exports.IMintableERC721__factory = IMintableERC721__factory;
exports.IMulticall__factory = IMulticall__factory;
exports.IMultiwrap__factory = IMultiwrap__factory;
exports.IOwnable__factory = IOwnable__factory;
exports.IPack__factory = IPack__factory;
exports.IPermissionsEnumerable__factory = IPermissionsEnumerable__factory;
exports.IPermissions__factory = IPermissions__factory;
exports.IPlatformFee__factory = IPlatformFee__factory;
exports.IPrimarySale__factory = IPrimarySale__factory;
exports.IRoyalty__factory = IRoyalty__factory;
exports.ISignatureMintERC1155__factory = ISignatureMintERC1155__factory;
exports.ISignatureMintERC20__factory = ISignatureMintERC20__factory;
exports.ISignatureMintERC721__factory = ISignatureMintERC721__factory;
exports.ITWFee__factory = ITWFee__factory;
exports.IThirdwebContract__factory = IThirdwebContract__factory;
exports.ITokenERC1155__factory = ITokenERC1155__factory;
exports.ITokenERC20__factory = ITokenERC20__factory;
exports.ITokenERC721__factory = ITokenERC721__factory;
exports.IVotes__factory = IVotes__factory;
exports.IWETH__factory = IWETH__factory;
exports.LazyMint__factory = LazyMint__factory;
exports.Marketplace__factory = Marketplace__factory;
exports.MinimalForwarderEOAOnly__factory = MinimalForwarderEOAOnly__factory;
exports.MockContractPublisher__factory = MockContractPublisher__factory;
exports.MockContract__factory = MockContract__factory;
exports.Mock__factory = Mock__factory;
exports.Multicall__factory = Multicall__factory;
exports.Multiwrap__factory = Multiwrap__factory;
exports.Ownable__factory = Ownable__factory;
exports.Pack__factory = Pack__factory;
exports.PaymentSplitterUpgradeable__factory = PaymentSplitterUpgradeable__factory;
exports.PermissionsEnumerable__factory = PermissionsEnumerable__factory;
exports.Permissions__factory = Permissions__factory;
exports.PlatformFee__factory = PlatformFee__factory;
exports.PrimarySale__factory = PrimarySale__factory;
exports.Royalty__factory = Royalty__factory;
exports.SignatureDrop__factory = SignatureDrop__factory;
exports.SignatureMintERC1155Upgradeable__factory = SignatureMintERC1155Upgradeable__factory;
exports.SignatureMintERC1155__factory = SignatureMintERC1155__factory;
exports.SignatureMintERC20Upgradeable__factory = SignatureMintERC20Upgradeable__factory;
exports.SignatureMintERC20__factory = SignatureMintERC20__factory;
exports.SignatureMintERC721Upgradeable__factory = SignatureMintERC721Upgradeable__factory;
exports.SignatureMintERC721__factory = SignatureMintERC721__factory;
exports.SoulboundERC721A__factory = SoulboundERC721A__factory;
exports.Split__factory = Split__factory;
exports.TokenBundle__factory = TokenBundle__factory;
exports.TokenERC1155__factory = TokenERC1155__factory;
exports.TokenERC20__factory = TokenERC20__factory;
exports.TokenERC721__factory = TokenERC721__factory;
exports.TokenStore__factory = TokenStore__factory;
exports.VoteERC20__factory = VoteERC20__factory;
exports.factories = index;
